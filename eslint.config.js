// eslint.config.js
import js from '@eslint/js';
import prettierConfig from 'eslint-config-prettier';
import tseslint from 'typescript-eslint'; // Import the main helper
const { configs: jsConfigs } = js;

export default [
  // 1. Base JS recommended rules
  jsConfigs.recommended,

  // 2. TypeScript Configuration using tseslint.config
  ...tseslint.config(
    {
      files: ['src/**/*.ts', 'src/**/*.tsx'],
      // Applies recommended configurations for typed linting
      // See: https://typescript-eslint.io/getting-started/typed-linting
      extends: [
        ...tseslint.configs.recommendedTypeChecked,
        ...tseslint.configs.stylisticTypeChecked,
      ],
      languageOptions: {
        parserOptions: {
          project: true, // Automatically find tsconfig.json
          tsconfigRootDir: import.meta.dirname, // Assumes eslint.config.js is at project root
        },
      },
      rules: {
        // Your specific overrides go here
        // example: turn off this one if you really don't want it
        '@typescript-eslint/no-explicit-unknown': 'off',

        // make sure you have some warnings enabled:
        '@typescript-eslint/no-unused-vars': ['warn', { argsIgnorePattern: '_' }],
        'no-console': 'warn',
        // â€¦add any other rules you care about at "warn" level

        // Rules requiring type information (examples)
        // Note: These are often enabled by recommendedTypeChecked
        // '@typescript-eslint/no-floating-promises': 'error',
        // '@typescript-eslint/no-misused-promises': 'error',
      },
    }
    // You can add more config objects generated by tseslint.config if needed
    // e.g., for JS files if you want TS parser support there
  ),

  // 3. Global environment settings (Keep if needed, but often handled by tseslint.config)
  // {
  //   languageOptions: {
  //     globals: {
  //       browser: 'readonly',
  //       node: 'readonly',
  //       es2021: 'readonly',
  //     },
  //   },
  // },

  // 4. Ignores configuration (Keep as is)
  {
    ignores: [
      'node_modules/',
      'dist/',
      'build/',
      'coverage/',
      'playwright-report/',
      'test-results/',
      '.*cache',
      '.venv/',
      'report/',
      '**/*.config.js',
      '**/*.config.mjs',
      '**/*.config.cjs',
      '**/*.config.ts',
      '**/__tests__/**',
      '**/*.test.ts',
      '**/*.test.tsx',
      '**/generated/**',
    ],
  },

  // 5. Prettier configuration (must be last)
  prettierConfig,
];
