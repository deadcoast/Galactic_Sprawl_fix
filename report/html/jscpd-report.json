{
  "statistics": {
    "detectionDate": "2025-04-11T00:42:29.849Z",
    "formats": {
      "javascript": {
        "sources": {
          "src/components/ships/player/variants/warships/WarShip.tsx": {
            "lines": 134,
            "tokens": 1172,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/ships/player/variants/warships/StarSchooner.tsx": {
            "lines": 101,
            "tokens": 834,
            "sources": 1,
            "clones": 7,
            "duplicatedLines": 331,
            "duplicatedTokens": 2950,
            "percentage": 327.72,
            "percentageTokens": 353.72,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/ships/player/variants/warships/Spitflare.tsx": {
            "lines": 101,
            "tokens": 830,
            "sources": 1,
            "clones": 2,
            "duplicatedLines": 89,
            "duplicatedTokens": 750,
            "percentage": 88.12,
            "percentageTokens": 90.36,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/ships/player/variants/warships/PlayerWarShipCombat.tsx": {
            "lines": 149,
            "tokens": 1374,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/ships/player/variants/warships/OrionFrigate.tsx": {
            "lines": 124,
            "tokens": 1007,
            "sources": 1,
            "clones": 2,
            "duplicatedLines": 79,
            "duplicatedTokens": 714,
            "percentage": 63.71,
            "percentageTokens": 70.9,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/ships/player/variants/warships/MotherEarthRevenge.tsx": {
            "lines": 184,
            "tokens": 1499,
            "sources": 1,
            "clones": 4,
            "duplicatedLines": 141,
            "duplicatedTokens": 1209,
            "percentage": 76.63,
            "percentageTokens": 80.65,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/ships/player/variants/warships/MidwayCarrier.tsx": {
            "lines": 189,
            "tokens": 1585,
            "sources": 1,
            "clones": 3,
            "duplicatedLines": 142,
            "duplicatedTokens": 1249,
            "percentage": 75.13,
            "percentageTokens": 78.8,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/ships/player/variants/warships/HarbringerGalleon.tsx": {
            "lines": 28,
            "tokens": 251,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/ships/player/variants/reconships/ReconShipStatus.tsx": {
            "lines": 13,
            "tokens": 76,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 13,
            "duplicatedTokens": 76,
            "percentage": 100,
            "percentageTokens": 100,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/ships/player/variants/reconships/ReconShipControl.tsx": {
            "lines": 165,
            "tokens": 1472,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/ships/player/variants/miningships/VoidDredgerMiner.tsx": {
            "lines": 118,
            "tokens": 1031,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/ui/components/Card/variants/ModuleCard.tsx": {
            "lines": 163,
            "tokens": 1370,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/ui/components/Button/variants/AbilityButton.tsx": {
            "lines": 44,
            "tokens": 290,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/ui/components/Badge/variants/StatusBadge.tsx": {
            "lines": 4,
            "tokens": 32,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/ships/player/customization/PlayerShipUpgradeSystem.tsx": {
            "lines": 113,
            "tokens": 997,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 46,
            "duplicatedTokens": 358,
            "percentage": 40.71,
            "percentageTokens": 35.91,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/ships/player/customization/PlayerShipUpgrade.tsx": {
            "lines": 72,
            "tokens": 637,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 46,
            "duplicatedTokens": 358,
            "percentage": 63.89,
            "percentageTokens": 56.2,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/ships/player/customization/PlayerShipCustomization.tsx": {
            "lines": 177,
            "tokens": 1443,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/ships/player/base/PlayerShipBase.tsx": {
            "lines": 148,
            "tokens": 1279,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 31,
            "duplicatedTokens": 294,
            "percentage": 20.95,
            "percentageTokens": 22.99,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/ships/player/adapters/ShipAdapter.tsx": {
            "lines": 0,
            "tokens": 21,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/ships/FactionShips/spaceRats/RogueNebula.tsx": {
            "lines": 62,
            "tokens": 450,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/ships/FactionShips/spaceRats/RatKing.tsx": {
            "lines": 33,
            "tokens": 240,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/ships/FactionShips/spaceRats/AsteroidMarauder.tsx": {
            "lines": 32,
            "tokens": 209,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/ships/FactionShips/lostNova/NullHunter.tsx": {
            "lines": 53,
            "tokens": 399,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 17,
            "duplicatedTokens": 108,
            "percentage": 32.08,
            "percentageTokens": 27.07,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/ships/FactionShips/lostNova/EclipseScythe.tsx": {
            "lines": 36,
            "tokens": 260,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 17,
            "duplicatedTokens": 108,
            "percentage": 47.22,
            "percentageTokens": 41.54,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/ships/FactionShips/lostNova/DarkMatterReaper.tsx": {
            "lines": 36,
            "tokens": 260,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/ships/FactionShips/equatorHorizon/StellarEquinox.tsx": {
            "lines": 35,
            "tokens": 254,
            "sources": 1,
            "clones": 2,
            "duplicatedLines": 32,
            "duplicatedTokens": 204,
            "percentage": 91.43,
            "percentageTokens": 80.31,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/ships/FactionShips/equatorHorizon/EtherealGalleon.tsx": {
            "lines": 35,
            "tokens": 254,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 16,
            "duplicatedTokens": 102,
            "percentage": 45.71,
            "percentageTokens": 40.16,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/ships/FactionShips/equatorHorizon/CelestialArbiter.tsx": {
            "lines": 35,
            "tokens": 254,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 16,
            "duplicatedTokens": 102,
            "percentage": 45.71,
            "percentageTokens": 40.16,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/exploration/visualizations/charts/VirtualizedLineChart.tsx": {
            "lines": 133,
            "tokens": 1197,
            "sources": 1,
            "clones": 3,
            "duplicatedLines": 60,
            "duplicatedTokens": 458,
            "percentage": 45.11,
            "percentageTokens": 38.26,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/exploration/visualizations/charts/VirtualizedDataTable.tsx": {
            "lines": 136,
            "tokens": 1151,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/exploration/visualizations/charts/ViewportOptimizedScatterPlot.tsx": {
            "lines": 180,
            "tokens": 1503,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/exploration/visualizations/charts/ViewportOptimizedHeatMap.tsx": {
            "lines": 212,
            "tokens": 1414,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/exploration/visualizations/charts/ScatterPlot.tsx": {
            "lines": 149,
            "tokens": 1132,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 12,
            "duplicatedTokens": 104,
            "percentage": 8.05,
            "percentageTokens": 9.19,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/exploration/visualizations/charts/ResourceMappingVisualization.tsx": {
            "lines": 258,
            "tokens": 2139,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/exploration/visualizations/charts/ResourceFlowDiagram.tsx": {
            "lines": 9,
            "tokens": 97,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/exploration/visualizations/charts/ResourceDistributionChart.tsx": {
            "lines": 1,
            "tokens": 30,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/exploration/visualizations/charts/PredictionVisualization.tsx": {
            "lines": 503,
            "tokens": 4080,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/exploration/visualizations/charts/PopulationProjectionChart.tsx": {
            "lines": 0,
            "tokens": 5,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/exploration/visualizations/charts/MemoryOptimizedCanvasChart.tsx": {
            "lines": 78,
            "tokens": 563,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/exploration/visualizations/charts/LineChart.tsx": {
            "lines": 103,
            "tokens": 836,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 16,
            "duplicatedTokens": 128,
            "percentage": 15.53,
            "percentageTokens": 15.31,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/exploration/visualizations/charts/HeatMap.tsx": {
            "lines": 124,
            "tokens": 795,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/exploration/visualizations/charts/ClusterVisualization.tsx": {
            "lines": 145,
            "tokens": 1249,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/exploration/visualizations/charts/CanvasScatterPlot.tsx": {
            "lines": 56,
            "tokens": 336,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/exploration/visualizations/charts/CanvasLineChart.tsx": {
            "lines": 69,
            "tokens": 506,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/exploration/visualizations/charts/CanvasChartFactory.tsx": {
            "lines": 101,
            "tokens": 751,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/exploration/visualizations/charts/BaseChart.tsx": {
            "lines": 82,
            "tokens": 726,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/exploration/visualizations/charts/BarChart.tsx": {
            "lines": 144,
            "tokens": 990,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 32,
            "duplicatedTokens": 226,
            "percentage": 22.22,
            "percentageTokens": 22.83,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/exploration/unified/core/BaseMap.tsx": {
            "lines": 12,
            "tokens": 79,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/exploration/unified/core/BaseDataTable.tsx": {
            "lines": 125,
            "tokens": 989,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/exploration/unified/core/BaseAnalysisVisualizer.tsx": {
            "lines": 341,
            "tokens": 3252,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/exploration/unified/context/ExplorationContext.tsx": {
            "lines": 0,
            "tokens": 3,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/buildings/modules/trading/TradingHub.tsx": {
            "lines": 125,
            "tokens": 1027,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/buildings/modules/radar/RadarModule.tsx": {
            "lines": 5,
            "tokens": 29,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/buildings/modules/hangar/ShipHangar.tsx": {
            "lines": 119,
            "tokens": 1143,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/buildings/modules/hangar/ShipCard.tsx": {
            "lines": 50,
            "tokens": 608,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/buildings/modules/hangar/HangarBayList.tsx": {
            "lines": 3,
            "tokens": 54,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/buildings/modules/academy/OfficerDetails.tsx": {
            "lines": 187,
            "tokens": 1740,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/buildings/modules/academy/OfficerCard.tsx": {
            "lines": 186,
            "tokens": 1648,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/buildings/modules/academy/OfficerAcademy.tsx": {
            "lines": 131,
            "tokens": 1060,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/buildings/modules/academy/HiringPanel.tsx": {
            "lines": 207,
            "tokens": 1802,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/buildings/modules/MiningHub/ThresholdStatusIndicator.tsx": {
            "lines": 42,
            "tokens": 425,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/buildings/modules/MiningHub/ThresholdPresetsPanel.tsx": {
            "lines": 105,
            "tokens": 859,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/buildings/modules/MiningHub/ThresholdManager.tsx": {
            "lines": 89,
            "tokens": 678,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 12,
            "duplicatedTokens": 118,
            "percentage": 13.48,
            "percentageTokens": 17.4,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/buildings/modules/MiningHub/MiningTutorial.tsx": {
            "lines": 22,
            "tokens": 146,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/buildings/modules/MiningHub/MiningMap.tsx": {
            "lines": 91,
            "tokens": 763,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/buildings/modules/MiningHub/MiningControls.tsx": {
            "lines": 55,
            "tokens": 546,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/buildings/modules/MiningHub/MineralProcessingCentre.tsx": {
            "lines": 93,
            "tokens": 683,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/buildings/modules/ExplorationHub/ShipStatusMonitor.tsx": {
            "lines": 82,
            "tokens": 836,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/buildings/modules/ExplorationHub/ReconShipStatus.tsx": {
            "lines": 13,
            "tokens": 76,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 13,
            "duplicatedTokens": 76,
            "percentage": 100,
            "percentageTokens": 100,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/buildings/modules/ExplorationHub/MissionReplay.tsx": {
            "lines": 83,
            "tokens": 689,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/buildings/modules/ExplorationHub/MissionLog.tsx": {
            "lines": 176,
            "tokens": 1560,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/buildings/modules/ExplorationHub/ExplorationWindow.tsx": {
            "lines": 191,
            "tokens": 1460,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/buildings/modules/ExplorationHub/ExplorationTutorial.tsx": {
            "lines": 22,
            "tokens": 146,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/buildings/modules/ExplorationHub/ExplorationControls.tsx": {
            "lines": 78,
            "tokens": 632,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/ui/components/typography/Text.tsx": {
            "lines": 6,
            "tokens": 39,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/ui/components/typography/Label.tsx": {
            "lines": 6,
            "tokens": 43,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/ui/components/layout/Stack.tsx": {
            "lines": 2,
            "tokens": 15,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/ui/components/layout/Spacer.tsx": {
            "lines": 2,
            "tokens": 15,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/ui/components/layout/Flex.tsx": {
            "lines": 7,
            "tokens": 52,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/ui/components/layout/Container.tsx": {
            "lines": 6,
            "tokens": 46,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/ui/components/inputs/Switch.tsx": {
            "lines": 75,
            "tokens": 566,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/ui/components/inputs/Slider.tsx": {
            "lines": 126,
            "tokens": 926,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/ui/components/inputs/Select.tsx": {
            "lines": 117,
            "tokens": 923,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/ui/components/inputs/Radio.tsx": {
            "lines": 233,
            "tokens": 1474,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/ui/components/inputs/Input.tsx": {
            "lines": 57,
            "tokens": 404,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/ui/components/inputs/Checkbox.tsx": {
            "lines": 48,
            "tokens": 341,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/ui/components/Card/Card.tsx": {
            "lines": 24,
            "tokens": 207,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/ui/components/Button/Button.tsx": {
            "lines": 2,
            "tokens": 17,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/ui/components/Badge/Badge.tsx": {
            "lines": 6,
            "tokens": 51,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/tests/components/ui/ErrorBoundary.test.tsx": {
            "lines": 90,
            "tokens": 615,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/tests/components/ui/Card.test.tsx": {
            "lines": 124,
            "tokens": 1090,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/tests/components/ui/Button.test.tsx": {
            "lines": 92,
            "tokens": 879,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/ui/visualization/VisualizationErrorBoundaries.tsx": {
            "lines": 85,
            "tokens": 412,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/ui/visualization/TemporalAnalysisView.tsx": {
            "lines": 1,
            "tokens": 30,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/ui/visualization/ResourceVisualization.tsx": {
            "lines": 340,
            "tokens": 2661,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 45,
            "duplicatedTokens": 483,
            "percentage": 13.24,
            "percentageTokens": 18.15,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/ui/visualization/ResourceFlowDiagram.tsx": {
            "lines": 151,
            "tokens": 1370,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/ui/visualization/ParticleTransitionVisualization.tsx": {
            "lines": 152,
            "tokens": 1076,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/ui/visualization/NetworkGraph.tsx": {
            "lines": 12,
            "tokens": 73,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/ui/visualization/LineGraph.tsx": {
            "lines": 2,
            "tokens": 31,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/ui/visualization/LazyResourceFlowDiagram.tsx": {
            "lines": 2,
            "tokens": 27,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/ui/visualization/LazyNetworkGraph.tsx": {
            "lines": 2,
            "tokens": 35,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/ui/visualization/HeatMapDensityVisualization.tsx": {
            "lines": 5,
            "tokens": 35,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/ui/visualization/FlowDiagram.tsx": {
            "lines": 16,
            "tokens": 89,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/ui/visualization/DataTransitionParticleSystem.tsx": {
            "lines": 13,
            "tokens": 81,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/ui/visualization/DataHighlightVisualization.tsx": {
            "lines": 6,
            "tokens": 58,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/ui/visualization/D3VisualizationErrorBoundary.tsx": {
            "lines": 166,
            "tokens": 1032,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/ui/visualization/CustomShaderVisualization.tsx": {
            "lines": 13,
            "tokens": 82,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/ui/visualization/Chart.tsx": {
            "lines": 5,
            "tokens": 37,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/ui/visualization/BarChart.tsx": {
            "lines": 2,
            "tokens": 28,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/ui/visualization/AnomalyVisualization.tsx": {
            "lines": 26,
            "tokens": 240,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/ui/tech/TechVisualFeedback.tsx": {
            "lines": 448,
            "tokens": 3712,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/ui/status/StatusEffect.tsx": {
            "lines": 25,
            "tokens": 136,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/ui/showcase/BaseAnalysisVisualizer.tsx": {
            "lines": 39,
            "tokens": 342,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/ui/resource/VirtualizedResourceList.tsx": {
            "lines": 81,
            "tokens": 609,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/ui/resource/VirtualizedResourceDataset.tsx": {
            "lines": 138,
            "tokens": 1070,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/ui/resource/ResourceVisualizationEnhanced.tsx": {
            "lines": 212,
            "tokens": 1946,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 45,
            "duplicatedTokens": 483,
            "percentage": 21.23,
            "percentageTokens": 24.82,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/ui/resource/ResourceThresholdVisualization.tsx": {
            "lines": 18,
            "tokens": 215,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/ui/resource/ResourceRatesUI.tsx": {
            "lines": 34,
            "tokens": 211,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/ui/resource/ResourceRatesTrends.tsx": {
            "lines": 67,
            "tokens": 558,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/ui/resource/ResourceRatesDisplay.tsx": {
            "lines": 173,
            "tokens": 1626,
            "sources": 1,
            "clones": 3,
            "duplicatedLines": 44,
            "duplicatedTokens": 420,
            "percentage": 25.43,
            "percentageTokens": 25.83,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/ui/resource/ResourceRateFiltering.tsx": {
            "lines": 71,
            "tokens": 634,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 18,
            "duplicatedTokens": 170,
            "percentage": 25.35,
            "percentageTokens": 26.81,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/ui/resource/ResourceOptimizationSuggestions.tsx": {
            "lines": 54,
            "tokens": 598,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/ui/resource/ResourceManagementDashboard.tsx": {
            "lines": 364,
            "tokens": 2763,
            "sources": 1,
            "clones": 2,
            "duplicatedLines": 44,
            "duplicatedTokens": 382,
            "percentage": 12.09,
            "percentageTokens": 13.83,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/ui/resource/ResourceIcon.tsx": {
            "lines": 0,
            "tokens": 9,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/ui/resource/ResourceGrid.tsx": {
            "lines": 63,
            "tokens": 399,
            "sources": 1,
            "clones": 2,
            "duplicatedLines": 42,
            "duplicatedTokens": 288,
            "percentage": 66.67,
            "percentageTokens": 72.18,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/ui/resource/ResourceForecastingVisualization.tsx": {
            "lines": 29,
            "tokens": 282,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/ui/resource/ResourceDisplay.tsx": {
            "lines": 7,
            "tokens": 116,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/ui/resource/ResourceBar.tsx": {
            "lines": 10,
            "tokens": 115,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/ui/resource/ConverterDetailsView.tsx": {
            "lines": 125,
            "tokens": 1325,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/ui/resource/ConverterDashboard.tsx": {
            "lines": 153,
            "tokens": 1449,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/ui/resource/ChainVisualization.tsx": {
            "lines": 4,
            "tokens": 33,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/ui/resource/ChainManagementInterface.tsx": {
            "lines": 176,
            "tokens": 1613,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/ui/profiling/ProfilingOverlay.tsx": {
            "lines": 102,
            "tokens": 884,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/ui/performance/VisualizationPerformanceComparison.tsx": {
            "lines": 132,
            "tokens": 958,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/ui/performance/UserBehaviorCorrelationView.tsx": {
            "lines": 115,
            "tokens": 1102,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/ui/performance/PerformanceRegressionReport.tsx": {
            "lines": 191,
            "tokens": 1973,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/ui/performance/PerformanceBudgetTracker.tsx": {
            "lines": 227,
            "tokens": 1853,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/ui/performance/PerformanceBenchmarkDashboard.tsx": {
            "lines": 243,
            "tokens": 2125,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/ui/performance/OptimizedFlowDiagram.tsx": {
            "lines": 20,
            "tokens": 257,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/ui/performance/OptimizationComparisonView.tsx": {
            "lines": 91,
            "tokens": 835,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/ui/performance/MLPerformancePrediction.tsx": {
            "lines": 33,
            "tokens": 302,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/ui/performance/InterpolationMemoizationDemo.tsx": {
            "lines": 95,
            "tokens": 775,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/ui/performance/DynamicBudgetAdjustmentPanel.tsx": {
            "lines": 363,
            "tokens": 3411,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/ui/performance/D3PerformanceProfilerView.tsx": {
            "lines": 112,
            "tokens": 908,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/ui/performance/D3AccessorBenchmarkView.tsx": {
            "lines": 193,
            "tokens": 1851,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/ui/performance/BatchedUpdateDemo.tsx": {
            "lines": 161,
            "tokens": 1505,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/ui/performance/AnimationQualityDemo.tsx": {
            "lines": 287,
            "tokens": 2393,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/ui/performance/AnimationPerformanceProfilerDemo.tsx": {
            "lines": 257,
            "tokens": 2328,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/ui/performance/AnimationFrameManagerDemo.tsx": {
            "lines": 147,
            "tokens": 1488,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/ui/performance/AdvancedMetricAnalysis.tsx": {
            "lines": 88,
            "tokens": 819,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/ui/overlays/Popover.tsx": {
            "lines": 5,
            "tokens": 35,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/ui/overlays/Modal.tsx": {
            "lines": 72,
            "tokens": 344,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 23,
            "duplicatedTokens": 111,
            "percentage": 31.94,
            "percentageTokens": 32.27,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/ui/overlays/Drawer.tsx": {
            "lines": 96,
            "tokens": 493,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 23,
            "duplicatedTokens": 111,
            "percentage": 23.96,
            "percentageTokens": 22.52,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/ui/overlays/Dialog.tsx": {
            "lines": 104,
            "tokens": 631,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/ui/modules/SubModuleHUD.tsx": {
            "lines": 246,
            "tokens": 1944,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/ui/modules/ModuleUpgradeVisualization.tsx": {
            "lines": 96,
            "tokens": 819,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/ui/modules/ModuleUpgradeDisplay.tsx": {
            "lines": 175,
            "tokens": 1291,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/ui/modules/ModuleStatusIndicator.tsx": {
            "lines": 27,
            "tokens": 255,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/ui/modules/ModuleStatusDisplay.tsx": {
            "lines": 372,
            "tokens": 3093,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/ui/modules/ModuleHUD.tsx": {
            "lines": 291,
            "tokens": 2057,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/ui/modules/ModuleGrid.tsx": {
            "lines": 71,
            "tokens": 596,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/ui/modules/ModuleControls.tsx": {
            "lines": 84,
            "tokens": 696,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/ui/modules/ModuleCard.tsx": {
            "lines": 112,
            "tokens": 997,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/ui/layout/ResponsiveLayout.tsx": {
            "lines": 2,
            "tokens": 17,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/ui/game/ShipDisplay.tsx": {
            "lines": 18,
            "tokens": 188,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/ui/game/MiniMap.tsx": {
            "lines": 45,
            "tokens": 255,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/ui/game/LazyMiniMap.tsx": {
            "lines": 2,
            "tokens": 28,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/ui/game/FactionBadge.tsx": {
            "lines": 4,
            "tokens": 43,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/ui/event/VirtualizedEventLog.tsx": {
            "lines": 81,
            "tokens": 686,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/ui/errors/ResourceLoadingError.tsx": {
            "lines": 36,
            "tokens": 240,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/ui/errors/NetworkErrorFallback.tsx": {
            "lines": 77,
            "tokens": 529,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/ui/errors/ErrorHandlingExamples.tsx": {
            "lines": 130,
            "tokens": 918,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/ui/errors/ErrorFallback.tsx": {
            "lines": 92,
            "tokens": 644,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/ui/errors/ErrorBoundary.tsx": {
            "lines": 33,
            "tokens": 159,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/ui/errors/ComponentSpecificErrorStates.tsx": {
            "lines": 260,
            "tokens": 1833,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/ui/errors/ComponentErrorState.tsx": {
            "lines": 432,
            "tokens": 2589,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/ui/common/Button.tsx": {
            "lines": 0,
            "tokens": 21,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/ui/common/Badge.tsx": {
            "lines": 0,
            "tokens": 19,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/ui/buttons/AbilityButton.tsx": {
            "lines": 0,
            "tokens": 7,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/ui/automation/AutomationVisualization.tsx": {
            "lines": 209,
            "tokens": 1629,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/ui/automation/AutomationRuleEditor.tsx": {
            "lines": 434,
            "tokens": 3249,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/ships/common/SpaceRatShip.tsx": {
            "lines": 4,
            "tokens": 27,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/ships/common/LostNovaShip.tsx": {
            "lines": 4,
            "tokens": 27,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/ships/common/FactionShipStats.tsx": {
            "lines": 141,
            "tokens": 1303,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 31,
            "duplicatedTokens": 294,
            "percentage": 21.99,
            "percentageTokens": 22.56,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/ships/common/FactionShipBase.tsx": {
            "lines": 111,
            "tokens": 940,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/ships/common/FactionFleet.tsx": {
            "lines": 141,
            "tokens": 1095,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/ships/common/EquatorHorizonShip.tsx": {
            "lines": 25,
            "tokens": 141,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/ships/base/BaseShip.tsx": {
            "lines": 174,
            "tokens": 1235,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/ships/FactionShips/FactionDashboard.tsx": {
            "lines": 142,
            "tokens": 1171,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/exploration/visualizations/withMemoryManagement.tsx": {
            "lines": 14,
            "tokens": 98,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/exploration/visualizations/AnalysisVisualization.tsx": {
            "lines": 309,
            "tokens": 2182,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/combat/radar/RangeIndicators.tsx": {
            "lines": 58,
            "tokens": 441,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/combat/radar/RadarSweepAnimation.tsx": {
            "lines": 64,
            "tokens": 393,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/combat/radar/DetectionVisualization.tsx": {
            "lines": 82,
            "tokens": 569,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/combat/formations/TacticalBonusCard.tsx": {
            "lines": 7,
            "tokens": 108,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/combat/formations/TacticalBehaviorSelector.tsx": {
            "lines": 69,
            "tokens": 537,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/combat/formations/FormationVisualizer.tsx": {
            "lines": 3,
            "tokens": 40,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/combat/formations/FormationTacticsPanel.tsx": {
            "lines": 144,
            "tokens": 1140,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/combat/formations/FormationTacticsPage.tsx": {
            "lines": 149,
            "tokens": 1301,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/combat/formations/FormationTacticsContainer.tsx": {
            "lines": 20,
            "tokens": 112,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/combat/formations/FormationPresetList.tsx": {
            "lines": 4,
            "tokens": 45,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/combat/formations/FormationEditor.tsx": {
            "lines": 146,
            "tokens": 1054,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/combat/alerts/AlertSystemUI.tsx": {
            "lines": 170,
            "tokens": 1347,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/buildings/mothership/MothershipCore.tsx": {
            "lines": 107,
            "tokens": 781,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 56,
            "duplicatedTokens": 480,
            "percentage": 52.34,
            "percentageTokens": 61.46,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/buildings/colony/TradeRouteVisualization.tsx": {
            "lines": 256,
            "tokens": 2147,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/buildings/colony/SatisfactionMeter.tsx": {
            "lines": 53,
            "tokens": 458,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/buildings/colony/ResourceTransferAnimation.tsx": {
            "lines": 38,
            "tokens": 280,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/buildings/colony/ResourceDashboard.tsx": {
            "lines": 64,
            "tokens": 521,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/buildings/colony/PopulationGrowthModule.tsx": {
            "lines": 176,
            "tokens": 1428,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 14,
            "duplicatedTokens": 132,
            "percentage": 7.95,
            "percentageTokens": 9.24,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/buildings/colony/HabitableWorld.tsx": {
            "lines": 199,
            "tokens": 1650,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/buildings/colony/GrowthRateModifiers.tsx": {
            "lines": 224,
            "tokens": 1923,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/buildings/colony/EconomicHub.tsx": {
            "lines": 61,
            "tokens": 569,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/buildings/colony/CulturalCenter.tsx": {
            "lines": 23,
            "tokens": 236,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/buildings/colony/ColonyMap.tsx": {
            "lines": 33,
            "tokens": 319,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/buildings/colony/ColonyManagementSystem.tsx": {
            "lines": 221,
            "tokens": 1525,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/buildings/colony/ColonyCore.tsx": {
            "lines": 56,
            "tokens": 483,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 56,
            "duplicatedTokens": 480,
            "percentage": 100,
            "percentageTokens": 99.38,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/buildings/colony/BiodomeModule.tsx": {
            "lines": 98,
            "tokens": 969,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/buildings/colony/AutomatedPopulationManager.tsx": {
            "lines": 188,
            "tokens": 1595,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/buildings/colony/AutomatedExpansion.tsx": {
            "lines": 193,
            "tokens": 1639,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/utils/performance/HookPerformanceDashboard.tsx": {
            "lines": 238,
            "tokens": 1725,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/utils/events/EventDispatcher.tsx": {
            "lines": 0,
            "tokens": 3,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/ui/layout/Responsive.tsx": {
            "lines": 207,
            "tokens": 1362,
            "sources": 1,
            "clones": 2,
            "duplicatedLines": 374,
            "duplicatedTokens": 2468,
            "percentage": 180.68,
            "percentageTokens": 181.2,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/ui/components/Tooltip.tsx": {
            "lines": 5,
            "tokens": 33,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/ui/components/Icon.tsx": {
            "lines": 16,
            "tokens": 119,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/ui/components/Divider.tsx": {
            "lines": 19,
            "tokens": 108,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/ui/components/Card.tsx": {
            "lines": 11,
            "tokens": 89,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/ui/components/Button.tsx": {
            "lines": 10,
            "tokens": 65,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/ui/components/Badge.tsx": {
            "lines": 21,
            "tokens": 123,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/tests/integration/ui-components.test.tsx": {
            "lines": 134,
            "tokens": 1198,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/tests/accessibility/a11y.test.tsx": {
            "lines": 0,
            "tokens": 5,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/pages/performance/MultitabPerformanceTestPage.tsx": {
            "lines": 11,
            "tokens": 68,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/pages/performance/LongSessionMemoryPage.tsx": {
            "lines": 346,
            "tokens": 2787,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/managers/resource/ResourceTransferManager.tsx": {
            "lines": 50,
            "tokens": 376,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/lib/contexts/BaseContext.tsx": {
            "lines": 0,
            "tokens": 3,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/errorHandling/utils/errorBoundaryHOC.tsx": {
            "lines": 159,
            "tokens": 1018,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/errorHandling/specialized/VisualizationErrorBoundary.tsx": {
            "lines": 43,
            "tokens": 227,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/errorHandling/specialized/DataFetchingErrorBoundary.tsx": {
            "lines": 4,
            "tokens": 27,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/effects/component_effects/ResourceFlowVisualization.tsx": {
            "lines": 0,
            "tokens": 9,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/effects/component_effects/MothershipSuperstructure.tsx": {
            "lines": 101,
            "tokens": 871,
            "sources": 1,
            "clones": 4,
            "duplicatedLines": 134,
            "duplicatedTokens": 1114,
            "percentage": 132.67,
            "percentageTokens": 127.9,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/weapons/WeaponUpgradeSystem.tsx": {
            "lines": 77,
            "tokens": 684,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/weapons/WeaponSystem.tsx": {
            "lines": 53,
            "tokens": 458,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/weapons/WeaponSpecialization.tsx": {
            "lines": 57,
            "tokens": 443,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/weapons/WeaponLoadout.tsx": {
            "lines": 57,
            "tokens": 520,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/weapons/WeaponControl.tsx": {
            "lines": 75,
            "tokens": 729,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/weapons/WeaponComponents.tsx": {
            "lines": 233,
            "tokens": 1861,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/ui/tooltip-context.tsx": {
            "lines": 18,
            "tokens": 160,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/ui/VPRStarSystemView.tsx": {
            "lines": 78,
            "tokens": 532,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/ui/TooltipProvider.tsx": {
            "lines": 9,
            "tokens": 72,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/ui/Tabs.tsx": {
            "lines": 31,
            "tokens": 214,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/ui/SprawlView.tsx": {
            "lines": 317,
            "tokens": 2534,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/ui/ResourceRegistryUI.tsx": {
            "lines": 386,
            "tokens": 3471,
            "sources": 1,
            "clones": 2,
            "duplicatedLines": 40,
            "duplicatedTokens": 440,
            "percentage": 10.36,
            "percentageTokens": 12.68,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/ui/ResourceEventMonitor.tsx": {
            "lines": 52,
            "tokens": 495,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/ui/NotificationSystem.tsx": {
            "lines": 31,
            "tokens": 343,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/ui/GlobalErrorBoundary.tsx": {
            "lines": 0,
            "tokens": 5,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/ui/GameLayout.tsx": {
            "lines": 110,
            "tokens": 800,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/ui/GameHUD.tsx": {
            "lines": 782,
            "tokens": 6137,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/ui/GalaxyMap.tsx": {
            "lines": 347,
            "tokens": 2838,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/ui/DragAndDrop.tsx": {
            "lines": 159,
            "tokens": 1390,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/ui/DiplomacyPanel.tsx": {
            "lines": 88,
            "tokens": 820,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/ui/ContextMenu.tsx": {
            "lines": 88,
            "tokens": 718,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/ui/Card.tsx": {
            "lines": 60,
            "tokens": 464,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/ui/Button.tsx": {
            "lines": 0,
            "tokens": 21,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/trade/TradeRouteVisualizer.tsx": {
            "lines": 68,
            "tokens": 507,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/performance/MultitabPerformanceResults.tsx": {
            "lines": 130,
            "tokens": 1133,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/performance/MultitabPerformanceLauncher.tsx": {
            "lines": 103,
            "tokens": 858,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/performance/LongSessionMemoryVisualizer.tsx": {
            "lines": 142,
            "tokens": 1396,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/performance/GeographicAnalysisDashboard.tsx": {
            "lines": 362,
            "tokens": 2784,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/performance/DeviceCapabilityReport.tsx": {
            "lines": 443,
            "tokens": 3328,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/factions/FactionManager.tsx": {
            "lines": 118,
            "tokens": 914,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/factions/FactionAI.tsx": {
            "lines": 54,
            "tokens": 569,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/exploration/ResultsPanel.tsx": {
            "lines": 43,
            "tokens": 409,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/exploration/ResourcePotentialVisualization.tsx": {
            "lines": 468,
            "tokens": 3971,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/exploration/ResourceDiscoverySystem.tsx": {
            "lines": 312,
            "tokens": 2730,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/exploration/ReconShipCoordination.tsx": {
            "lines": 556,
            "tokens": 4634,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/exploration/RealTimeMapUpdates.tsx": {
            "lines": 34,
            "tokens": 239,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/exploration/GalaxyMappingSystem.tsx": {
            "lines": 117,
            "tokens": 964,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/exploration/GalaxyMapSystem.tsx": {
            "lines": 157,
            "tokens": 1387,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/exploration/ExplorationSystemIntegration.tsx": {
            "lines": 59,
            "tokens": 565,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/exploration/ExplorationDataManager.tsx": {
            "lines": 190,
            "tokens": 1946,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/exploration/DiscoveryClassification.tsx": {
            "lines": 499,
            "tokens": 4115,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/exploration/DatasetManager.tsx": {
            "lines": 102,
            "tokens": 819,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/exploration/DataPointVirtualList.tsx": {
            "lines": 158,
            "tokens": 1239,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/exploration/DataFilterPanel.tsx": {
            "lines": 105,
            "tokens": 894,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/exploration/DataAnalysisSystem.tsx": {
            "lines": 797,
            "tokens": 6623,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/exploration/AutomatedSectorScanner.tsx": {
            "lines": 199,
            "tokens": 1687,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/exploration/AnomalyAnalysis.tsx": {
            "lines": 347,
            "tokens": 2803,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/exploration/AnalysisConfigManager.tsx": {
            "lines": 144,
            "tokens": 1382,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/exploration/AdvancedFilteringSystem.tsx": {
            "lines": 257,
            "tokens": 1906,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/debug/GameStateMonitor.tsx": {
            "lines": 154,
            "tokens": 1522,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/debug/AIDebugOverlay.tsx": {
            "lines": 17,
            "tokens": 159,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/core/IntegrationErrorHandler.tsx": {
            "lines": 128,
            "tokens": 833,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/combat/SalvageSystem.tsx": {
            "lines": 31,
            "tokens": 294,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/combat/FleetDetails.tsx": {
            "lines": 9,
            "tokens": 89,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/combat/CombatSystemDemo.tsx": {
            "lines": 156,
            "tokens": 1228,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/combat/CombatLayout.tsx": {
            "lines": 20,
            "tokens": 81,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/combat/CombatDashboard.tsx": {
            "lines": 41,
            "tokens": 357,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/combat/BattleView.tsx": {
            "lines": 83,
            "tokens": 812,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/combat/BattleEnvironment.tsx": {
            "lines": 279,
            "tokens": 2178,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/visualization/Chart.tsx": {
            "lines": 54,
            "tokens": 369,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/router/routes.tsx": {
            "lines": 24,
            "tokens": 153,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/pages/ResourceRegistryDemo.tsx": {
            "lines": 83,
            "tokens": 761,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/pages/PerformanceAnalysisDashboard.tsx": {
            "lines": 37,
            "tokens": 291,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/pages/ColonyManagementPage.tsx": {
            "lines": 56,
            "tokens": 451,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/examples/StateSelectorExample.tsx": {
            "lines": 120,
            "tokens": 900,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/examples/StatePersistenceExample.tsx": {
            "lines": 102,
            "tokens": 935,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/errorHandling/GlobalErrorBoundary.tsx": {
            "lines": 43,
            "tokens": 333,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/errorHandling/ErrorFallback.tsx": {
            "lines": 55,
            "tokens": 383,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/errorHandling/ErrorBoundary.tsx": {
            "lines": 0,
            "tokens": 12,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/contexts/ThresholdContext.tsx": {
            "lines": 0,
            "tokens": 7,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/contexts/ThemeContext.tsx": {
            "lines": 0,
            "tokens": 3,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/contexts/ShipContext.tsx": {
            "lines": 0,
            "tokens": 7,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/contexts/ResourceRatesContext.tsx": {
            "lines": 0,
            "tokens": 3,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/contexts/ModuleContext.tsx": {
            "lines": 0,
            "tokens": 3,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/contexts/GameContext.tsx": {
            "lines": 0,
            "tokens": 3,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/contexts/ClassificationContext.tsx": {
            "lines": 0,
            "tokens": 3,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/App.tsx": {
            "lines": 123,
            "tokens": 886,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          }
        },
        "total": {
          "lines": 34309,
          "tokens": 279758,
          "sources": 316,
          "clones": 30,
          "duplicatedLines": 1075,
          "duplicatedTokens": 8774,
          "percentage": 3.13,
          "percentageTokens": 3.14,
          "newDuplicatedLines": 0,
          "newClones": 0
        }
      },
      "tsx": {
        "sources": {
          "src/components/ships/player/variants/warships/WarShip.tsx": {
            "lines": 238,
            "tokens": 2035,
            "sources": 1,
            "clones": 11,
            "duplicatedLines": 158,
            "duplicatedTokens": 1428,
            "percentage": 66.39,
            "percentageTokens": 70.17,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/ships/player/variants/warships/StarSchooner.tsx": {
            "lines": 151,
            "tokens": 1200,
            "sources": 1,
            "clones": 10,
            "duplicatedLines": 314,
            "duplicatedTokens": 2578,
            "percentage": 207.95,
            "percentageTokens": 214.83,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/ships/player/variants/warships/Spitflare.tsx": {
            "lines": 149,
            "tokens": 1175,
            "sources": 1,
            "clones": 4,
            "duplicatedLines": 142,
            "duplicatedTokens": 1109,
            "percentage": 95.3,
            "percentageTokens": 94.38,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/ships/player/variants/warships/PlayerWarShipCombat.tsx": {
            "lines": 228,
            "tokens": 1960,
            "sources": 1,
            "clones": 12,
            "duplicatedLines": 171,
            "duplicatedTokens": 1575,
            "percentage": 75,
            "percentageTokens": 80.36,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/ships/player/variants/warships/OrionFrigate.tsx": {
            "lines": 181,
            "tokens": 1416,
            "sources": 1,
            "clones": 5,
            "duplicatedLines": 199,
            "duplicatedTokens": 1571,
            "percentage": 109.94,
            "percentageTokens": 110.95,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/ships/player/variants/warships/MotherEarthRevenge.tsx": {
            "lines": 257,
            "tokens": 2063,
            "sources": 1,
            "clones": 5,
            "duplicatedLines": 144,
            "duplicatedTokens": 1156,
            "percentage": 56.03,
            "percentageTokens": 56.03,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/ships/player/variants/warships/MidwayCarrier.tsx": {
            "lines": 287,
            "tokens": 2432,
            "sources": 1,
            "clones": 3,
            "duplicatedLines": 124,
            "duplicatedTokens": 1017,
            "percentage": 43.21,
            "percentageTokens": 41.82,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/ships/player/variants/warships/HarbringerGalleon.tsx": {
            "lines": 174,
            "tokens": 1463,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/ships/player/variants/reconships/ReconShipStatus.tsx": {
            "lines": 52,
            "tokens": 407,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 52,
            "duplicatedTokens": 407,
            "percentage": 100,
            "percentageTokens": 100,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/ships/player/variants/reconships/ReconShipControl.tsx": {
            "lines": 234,
            "tokens": 1968,
            "sources": 1,
            "clones": 2,
            "duplicatedLines": 28,
            "duplicatedTokens": 205,
            "percentage": 11.97,
            "percentageTokens": 10.42,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/ships/player/variants/miningships/VoidDredgerMiner.tsx": {
            "lines": 170,
            "tokens": 1389,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 13,
            "duplicatedTokens": 90,
            "percentage": 7.65,
            "percentageTokens": 6.48,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/ui/components/Card/variants/ModuleCard.tsx": {
            "lines": 351,
            "tokens": 2617,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/ui/components/Button/variants/AbilityButton.tsx": {
            "lines": 200,
            "tokens": 1422,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/ui/components/Badge/variants/StatusBadge.tsx": {
            "lines": 120,
            "tokens": 1070,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/ships/player/customization/PlayerShipUpgradeSystem.tsx": {
            "lines": 209,
            "tokens": 1771,
            "sources": 1,
            "clones": 5,
            "duplicatedLines": 133,
            "duplicatedTokens": 1170,
            "percentage": 63.64,
            "percentageTokens": 66.06,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/ships/player/customization/PlayerShipUpgrade.tsx": {
            "lines": 160,
            "tokens": 1411,
            "sources": 1,
            "clones": 5,
            "duplicatedLines": 120,
            "duplicatedTokens": 1118,
            "percentage": 75,
            "percentageTokens": 79.23,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/ships/player/customization/PlayerShipCustomization.tsx": {
            "lines": 260,
            "tokens": 2080,
            "sources": 1,
            "clones": 5,
            "duplicatedLines": 48,
            "duplicatedTokens": 405,
            "percentage": 18.46,
            "percentageTokens": 19.47,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/ships/player/base/PlayerShipStats.tsx": {
            "lines": 101,
            "tokens": 990,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 94,
            "duplicatedTokens": 922,
            "percentage": 93.07,
            "percentageTokens": 93.13,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/ships/player/base/PlayerShipBase.tsx": {
            "lines": 193,
            "tokens": 1601,
            "sources": 1,
            "clones": 6,
            "duplicatedLines": 66,
            "duplicatedTokens": 533,
            "percentage": 34.2,
            "percentageTokens": 33.29,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/ships/player/adapters/ShipAdapter.tsx": {
            "lines": 63,
            "tokens": 566,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/ships/FactionShips/spaceRats/RogueNebula.tsx": {
            "lines": 154,
            "tokens": 1133,
            "sources": 1,
            "clones": 7,
            "duplicatedLines": 111,
            "duplicatedTokens": 899,
            "percentage": 72.08,
            "percentageTokens": 79.35,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/ships/FactionShips/spaceRats/RatKing.tsx": {
            "lines": 113,
            "tokens": 814,
            "sources": 1,
            "clones": 7,
            "duplicatedLines": 133,
            "duplicatedTokens": 832,
            "percentage": 117.7,
            "percentageTokens": 102.21,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/ships/FactionShips/spaceRats/AsteroidMarauder.tsx": {
            "lines": 99,
            "tokens": 666,
            "sources": 1,
            "clones": 3,
            "duplicatedLines": 42,
            "duplicatedTokens": 326,
            "percentage": 42.42,
            "percentageTokens": 48.95,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/ships/FactionShips/lostNova/NullHunter.tsx": {
            "lines": 142,
            "tokens": 1040,
            "sources": 1,
            "clones": 4,
            "duplicatedLines": 51,
            "duplicatedTokens": 442,
            "percentage": 35.92,
            "percentageTokens": 42.5,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/ships/FactionShips/lostNova/EclipseScythe.tsx": {
            "lines": 123,
            "tokens": 876,
            "sources": 1,
            "clones": 3,
            "duplicatedLines": 53,
            "duplicatedTokens": 419,
            "percentage": 43.09,
            "percentageTokens": 47.83,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/ships/FactionShips/lostNova/DarkMatterReaper.tsx": {
            "lines": 166,
            "tokens": 1179,
            "sources": 1,
            "clones": 3,
            "duplicatedLines": 42,
            "duplicatedTokens": 345,
            "percentage": 25.3,
            "percentageTokens": 29.26,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/ships/FactionShips/equatorHorizon/StellarEquinox.tsx": {
            "lines": 110,
            "tokens": 784,
            "sources": 1,
            "clones": 3,
            "duplicatedLines": 54,
            "duplicatedTokens": 415,
            "percentage": 49.09,
            "percentageTokens": 52.93,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/ships/FactionShips/equatorHorizon/EtherealGalleon.tsx": {
            "lines": 110,
            "tokens": 784,
            "sources": 1,
            "clones": 2,
            "duplicatedLines": 40,
            "duplicatedTokens": 289,
            "percentage": 36.36,
            "percentageTokens": 36.86,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/ships/FactionShips/equatorHorizon/CelestialArbiter.tsx": {
            "lines": 110,
            "tokens": 784,
            "sources": 1,
            "clones": 2,
            "duplicatedLines": 40,
            "duplicatedTokens": 289,
            "percentage": 36.36,
            "percentageTokens": 36.86,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/exploration/visualizations/charts/VirtualizedLineChart.tsx": {
            "lines": 474,
            "tokens": 3720,
            "sources": 1,
            "clones": 6,
            "duplicatedLines": 117,
            "duplicatedTokens": 885,
            "percentage": 24.68,
            "percentageTokens": 23.79,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/exploration/visualizations/charts/VirtualizedDataTable.tsx": {
            "lines": 354,
            "tokens": 2566,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/exploration/visualizations/charts/ViewportOptimizedScatterPlot.tsx": {
            "lines": 394,
            "tokens": 3225,
            "sources": 1,
            "clones": 3,
            "duplicatedLines": 36,
            "duplicatedTokens": 460,
            "percentage": 9.14,
            "percentageTokens": 14.26,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/exploration/visualizations/charts/ViewportOptimizedHeatMap.tsx": {
            "lines": 714,
            "tokens": 5789,
            "sources": 1,
            "clones": 6,
            "duplicatedLines": 92,
            "duplicatedTokens": 1000,
            "percentage": 12.89,
            "percentageTokens": 17.27,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/exploration/visualizations/charts/TooltipAdapter.tsx": {
            "lines": 72,
            "tokens": 441,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/exploration/visualizations/charts/ScatterPlot.tsx": {
            "lines": 349,
            "tokens": 2563,
            "sources": 1,
            "clones": 2,
            "duplicatedLines": 22,
            "duplicatedTokens": 280,
            "percentage": 6.3,
            "percentageTokens": 10.92,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/exploration/visualizations/charts/ResourceMappingVisualization.tsx": {
            "lines": 512,
            "tokens": 4370,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/exploration/visualizations/charts/ResourceFlowDiagram.tsx": {
            "lines": 610,
            "tokens": 6009,
            "sources": 1,
            "clones": 2,
            "duplicatedLines": 17,
            "duplicatedTokens": 165,
            "percentage": 2.79,
            "percentageTokens": 2.75,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/exploration/visualizations/charts/ResourceDistributionChart.tsx": {
            "lines": 310,
            "tokens": 2151,
            "sources": 1,
            "clones": 2,
            "duplicatedLines": 25,
            "duplicatedTokens": 205,
            "percentage": 8.06,
            "percentageTokens": 9.53,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/exploration/visualizations/charts/PredictionVisualization.tsx": {
            "lines": 695,
            "tokens": 5654,
            "sources": 1,
            "clones": 2,
            "duplicatedLines": 10,
            "duplicatedTokens": 166,
            "percentage": 1.44,
            "percentageTokens": 2.94,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/exploration/visualizations/charts/PopulationProjectionChart.tsx": {
            "lines": 140,
            "tokens": 1323,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/exploration/visualizations/charts/MemoryOptimizedCharts.tsx": {
            "lines": 158,
            "tokens": 1010,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/exploration/visualizations/charts/MemoryOptimizedCanvasChart.tsx": {
            "lines": 643,
            "tokens": 4867,
            "sources": 1,
            "clones": 2,
            "duplicatedLines": 20,
            "duplicatedTokens": 192,
            "percentage": 3.11,
            "percentageTokens": 3.94,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/exploration/visualizations/charts/LineChart.tsx": {
            "lines": 221,
            "tokens": 1493,
            "sources": 1,
            "clones": 5,
            "duplicatedLines": 107,
            "duplicatedTokens": 731,
            "percentage": 48.42,
            "percentageTokens": 48.96,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/exploration/visualizations/charts/HeatMap.tsx": {
            "lines": 519,
            "tokens": 4090,
            "sources": 1,
            "clones": 8,
            "duplicatedLines": 132,
            "duplicatedTokens": 1286,
            "percentage": 25.43,
            "percentageTokens": 31.44,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/exploration/visualizations/charts/ClusterVisualization.tsx": {
            "lines": 322,
            "tokens": 2629,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/exploration/visualizations/charts/CanvasScatterPlot.tsx": {
            "lines": 982,
            "tokens": 8976,
            "sources": 1,
            "clones": 12,
            "duplicatedLines": 200,
            "duplicatedTokens": 1991,
            "percentage": 20.37,
            "percentageTokens": 22.18,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/exploration/visualizations/charts/CanvasLineChart.tsx": {
            "lines": 994,
            "tokens": 9136,
            "sources": 1,
            "clones": 16,
            "duplicatedLines": 276,
            "duplicatedTokens": 2743,
            "percentage": 27.77,
            "percentageTokens": 30.02,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/exploration/visualizations/charts/CanvasChartFactory.tsx": {
            "lines": 346,
            "tokens": 2557,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/exploration/visualizations/charts/BaseChart.tsx": {
            "lines": 329,
            "tokens": 2207,
            "sources": 1,
            "clones": 2,
            "duplicatedLines": 10,
            "duplicatedTokens": 162,
            "percentage": 3.04,
            "percentageTokens": 7.34,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/exploration/visualizations/charts/BarChart.tsx": {
            "lines": 262,
            "tokens": 1605,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/exploration/unified/core/BaseMap.tsx": {
            "lines": 439,
            "tokens": 3275,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/exploration/unified/core/BaseDataTable.tsx": {
            "lines": 407,
            "tokens": 3137,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/exploration/unified/core/BaseAnalysisVisualizer.tsx": {
            "lines": 571,
            "tokens": 4883,
            "sources": 1,
            "clones": 6,
            "duplicatedLines": 40,
            "duplicatedTokens": 588,
            "percentage": 7.01,
            "percentageTokens": 12.04,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/exploration/unified/context/ExplorationContext.tsx": {
            "lines": 522,
            "tokens": 4874,
            "sources": 1,
            "clones": 2,
            "duplicatedLines": 12,
            "duplicatedTokens": 222,
            "percentage": 2.3,
            "percentageTokens": 4.55,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/buildings/modules/trading/TradingHub.tsx": {
            "lines": 207,
            "tokens": 1726,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/buildings/modules/radar/RadarModule.tsx": {
            "lines": 53,
            "tokens": 489,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/buildings/modules/hangar/ShipHangar.tsx": {
            "lines": 318,
            "tokens": 2889,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/buildings/modules/hangar/ShipCard.tsx": {
            "lines": 80,
            "tokens": 939,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/buildings/modules/hangar/ShipBuildingInterface.tsx": {
            "lines": 309,
            "tokens": 2623,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/buildings/modules/hangar/HangarModule.tsx": {
            "lines": 176,
            "tokens": 1232,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/buildings/modules/hangar/HangarBayList.tsx": {
            "lines": 30,
            "tokens": 259,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/buildings/modules/academy/OfficerDetails.tsx": {
            "lines": 260,
            "tokens": 2314,
            "sources": 1,
            "clones": 4,
            "duplicatedLines": 79,
            "duplicatedTokens": 608,
            "percentage": 30.38,
            "percentageTokens": 26.27,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/buildings/modules/academy/OfficerCard.tsx": {
            "lines": 277,
            "tokens": 2351,
            "sources": 1,
            "clones": 7,
            "duplicatedLines": 166,
            "duplicatedTokens": 1418,
            "percentage": 59.93,
            "percentageTokens": 60.31,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/buildings/modules/academy/OfficerAcademy.tsx": {
            "lines": 257,
            "tokens": 2181,
            "sources": 1,
            "clones": 2,
            "duplicatedLines": 43,
            "duplicatedTokens": 300,
            "percentage": 16.73,
            "percentageTokens": 13.76,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/buildings/modules/academy/HiringPanel.tsx": {
            "lines": 361,
            "tokens": 2940,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/buildings/modules/MiningHub/ThresholdStatusIndicator.tsx": {
            "lines": 158,
            "tokens": 1260,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/buildings/modules/MiningHub/ThresholdPresetsPanel.tsx": {
            "lines": 190,
            "tokens": 1692,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/buildings/modules/MiningHub/ThresholdManager.tsx": {
            "lines": 179,
            "tokens": 1346,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/buildings/modules/MiningHub/TechBonus.tsx": {
            "lines": 49,
            "tokens": 430,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/buildings/modules/MiningHub/ResourceTransfer.tsx": {
            "lines": 51,
            "tokens": 326,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/buildings/modules/MiningHub/ResourceStorage.tsx": {
            "lines": 124,
            "tokens": 873,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/buildings/modules/MiningHub/ResourceNode.tsx": {
            "lines": 183,
            "tokens": 1372,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 17,
            "duplicatedTokens": 106,
            "percentage": 9.29,
            "percentageTokens": 7.73,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/buildings/modules/MiningHub/MiningWindow.tsx": {
            "lines": 922,
            "tokens": 7324,
            "sources": 1,
            "clones": 5,
            "duplicatedLines": 88,
            "duplicatedTokens": 724,
            "percentage": 9.54,
            "percentageTokens": 9.89,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/buildings/modules/MiningHub/MiningTutorial.tsx": {
            "lines": 103,
            "tokens": 724,
            "sources": 1,
            "clones": 2,
            "duplicatedLines": 47,
            "duplicatedTokens": 365,
            "percentage": 45.63,
            "percentageTokens": 50.41,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/buildings/modules/MiningHub/MiningMap.tsx": {
            "lines": 208,
            "tokens": 1771,
            "sources": 1,
            "clones": 2,
            "duplicatedLines": 42,
            "duplicatedTokens": 413,
            "percentage": 20.19,
            "percentageTokens": 23.32,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/buildings/modules/MiningHub/MiningControls.tsx": {
            "lines": 233,
            "tokens": 2163,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/buildings/modules/MiningHub/MineralProcessingCentre.tsx": {
            "lines": 320,
            "tokens": 2727,
            "sources": 1,
            "clones": 2,
            "duplicatedLines": 29,
            "duplicatedTokens": 234,
            "percentage": 9.06,
            "percentageTokens": 8.58,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/buildings/modules/MiningHub/AutomationMonitor.tsx": {
            "lines": 120,
            "tokens": 1142,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/buildings/modules/ExplorationHub/ShipStatusMonitor.tsx": {
            "lines": 224,
            "tokens": 2169,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/buildings/modules/ExplorationHub/ReconShipStatus.tsx": {
            "lines": 52,
            "tokens": 407,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 52,
            "duplicatedTokens": 407,
            "percentage": 100,
            "percentageTokens": 100,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/buildings/modules/ExplorationHub/MissionReplay.tsx": {
            "lines": 302,
            "tokens": 2450,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/buildings/modules/ExplorationHub/MissionLog.tsx": {
            "lines": 294,
            "tokens": 2787,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/buildings/modules/ExplorationHub/ExplorationWindow.tsx": {
            "lines": 389,
            "tokens": 3138,
            "sources": 1,
            "clones": 5,
            "duplicatedLines": 104,
            "duplicatedTokens": 923,
            "percentage": 26.74,
            "percentageTokens": 29.41,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/buildings/modules/ExplorationHub/ExplorationTutorial.tsx": {
            "lines": 97,
            "tokens": 689,
            "sources": 1,
            "clones": 2,
            "duplicatedLines": 47,
            "duplicatedTokens": 365,
            "percentage": 48.45,
            "percentageTokens": 52.98,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/buildings/modules/ExplorationHub/ExplorationControls.tsx": {
            "lines": 147,
            "tokens": 1226,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 21,
            "duplicatedTokens": 154,
            "percentage": 14.29,
            "percentageTokens": 12.56,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/ui/components/typography/Text.tsx": {
            "lines": 194,
            "tokens": 1049,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/ui/components/typography/Label.tsx": {
            "lines": 200,
            "tokens": 1053,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/ui/components/typography/Heading.tsx": {
            "lines": 165,
            "tokens": 896,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/ui/components/layout/Stack.tsx": {
            "lines": 189,
            "tokens": 1133,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/ui/components/layout/Spacer.tsx": {
            "lines": 148,
            "tokens": 791,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/ui/components/layout/Grid.tsx": {
            "lines": 314,
            "tokens": 1760,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/ui/components/layout/Flex.tsx": {
            "lines": 330,
            "tokens": 1871,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/ui/components/layout/Container.tsx": {
            "lines": 269,
            "tokens": 1423,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/ui/components/inputs/Switch.tsx": {
            "lines": 338,
            "tokens": 2120,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 12,
            "duplicatedTokens": 87,
            "percentage": 3.55,
            "percentageTokens": 4.1,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/ui/components/inputs/Slider.tsx": {
            "lines": 553,
            "tokens": 3591,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 12,
            "duplicatedTokens": 87,
            "percentage": 2.17,
            "percentageTokens": 2.42,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/ui/components/inputs/Select.tsx": {
            "lines": 509,
            "tokens": 3369,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 10,
            "duplicatedTokens": 106,
            "percentage": 1.96,
            "percentageTokens": 3.15,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/ui/components/inputs/Radio.tsx": {
            "lines": 389,
            "tokens": 2272,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 19,
            "duplicatedTokens": 123,
            "percentage": 4.88,
            "percentageTokens": 5.41,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/ui/components/inputs/Input.tsx": {
            "lines": 332,
            "tokens": 2014,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 10,
            "duplicatedTokens": 106,
            "percentage": 3.01,
            "percentageTokens": 5.26,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/ui/components/inputs/Checkbox.tsx": {
            "lines": 231,
            "tokens": 1292,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 19,
            "duplicatedTokens": 123,
            "percentage": 8.23,
            "percentageTokens": 9.52,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/ui/components/Card/Card.tsx": {
            "lines": 135,
            "tokens": 848,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/ui/components/Button/Button.tsx": {
            "lines": 172,
            "tokens": 954,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/ui/components/Badge/Badge.tsx": {
            "lines": 132,
            "tokens": 724,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/tests/components/ui/responsive.test.tsx": {
            "lines": 113,
            "tokens": 749,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/tests/components/ui/ErrorBoundary.test.tsx": {
            "lines": 176,
            "tokens": 1219,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/tests/components/ui/Card.test.tsx": {
            "lines": 218,
            "tokens": 1828,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/tests/components/ui/Button.test.tsx": {
            "lines": 180,
            "tokens": 1640,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/ui/visualization/VisualizationErrorBoundaries.tsx": {
            "lines": 117,
            "tokens": 676,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/ui/visualization/TemporalAnalysisView.tsx": {
            "lines": 504,
            "tokens": 3750,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/ui/visualization/ResourceVisualization.tsx": {
            "lines": 370,
            "tokens": 2906,
            "sources": 1,
            "clones": 5,
            "duplicatedLines": 183,
            "duplicatedTokens": 1351,
            "percentage": 49.46,
            "percentageTokens": 46.49,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/ui/visualization/ResourceFlowDiagram.tsx": {
            "lines": 529,
            "tokens": 4245,
            "sources": 1,
            "clones": 2,
            "duplicatedLines": 25,
            "duplicatedTokens": 224,
            "percentage": 4.73,
            "percentageTokens": 5.28,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/ui/visualization/ParticleTransitionVisualization.tsx": {
            "lines": 709,
            "tokens": 4484,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/ui/visualization/NetworkGraph.tsx": {
            "lines": 703,
            "tokens": 5768,
            "sources": 1,
            "clones": 2,
            "duplicatedLines": 12,
            "duplicatedTokens": 206,
            "percentage": 1.71,
            "percentageTokens": 3.57,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/ui/visualization/LineGraph.tsx": {
            "lines": 114,
            "tokens": 576,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/ui/visualization/LazyResourceFlowDiagram.tsx": {
            "lines": 152,
            "tokens": 840,
            "sources": 1,
            "clones": 2,
            "duplicatedLines": 25,
            "duplicatedTokens": 224,
            "percentage": 16.45,
            "percentageTokens": 26.67,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/ui/visualization/LazyNetworkGraph.tsx": {
            "lines": 64,
            "tokens": 433,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/ui/visualization/HeatMapDensityVisualization.tsx": {
            "lines": 408,
            "tokens": 1565,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/ui/visualization/FlowDiagram.tsx": {
            "lines": 702,
            "tokens": 5307,
            "sources": 1,
            "clones": 3,
            "duplicatedLines": 32,
            "duplicatedTokens": 288,
            "percentage": 4.56,
            "percentageTokens": 5.43,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/ui/visualization/DataTransitionParticleSystem.tsx": {
            "lines": 230,
            "tokens": 1701,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/ui/visualization/DataHighlightVisualization.tsx": {
            "lines": 338,
            "tokens": 2307,
            "sources": 1,
            "clones": 4,
            "duplicatedLines": 96,
            "duplicatedTokens": 849,
            "percentage": 28.4,
            "percentageTokens": 36.8,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/ui/visualization/D3VisualizationErrorBoundary.tsx": {
            "lines": 211,
            "tokens": 1371,
            "sources": 1,
            "clones": 2,
            "duplicatedLines": 11,
            "duplicatedTokens": 202,
            "percentage": 5.21,
            "percentageTokens": 14.73,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/ui/visualization/CustomShaderVisualization.tsx": {
            "lines": 259,
            "tokens": 1726,
            "sources": 1,
            "clones": 4,
            "duplicatedLines": 96,
            "duplicatedTokens": 849,
            "percentage": 37.07,
            "percentageTokens": 49.19,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/ui/visualization/Chart.tsx": {
            "lines": 669,
            "tokens": 5941,
            "sources": 1,
            "clones": 10,
            "duplicatedLines": 106,
            "duplicatedTokens": 1170,
            "percentage": 15.84,
            "percentageTokens": 19.69,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/ui/visualization/BarChart.tsx": {
            "lines": 162,
            "tokens": 822,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/ui/visualization/AnomalyVisualization.tsx": {
            "lines": 310,
            "tokens": 2745,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/ui/tech/TechVisualFeedback.tsx": {
            "lines": 816,
            "tokens": 6978,
            "sources": 1,
            "clones": 18,
            "duplicatedLines": 198,
            "duplicatedTokens": 1384,
            "percentage": 24.26,
            "percentageTokens": 19.83,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/ui/status/StatusEffect.tsx": {
            "lines": 81,
            "tokens": 365,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/ui/showcase/BaseAnalysisVisualizer.tsx": {
            "lines": 77,
            "tokens": 625,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/ui/resource/VirtualizedResourceList.tsx": {
            "lines": 286,
            "tokens": 1878,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 9,
            "duplicatedTokens": 90,
            "percentage": 3.15,
            "percentageTokens": 4.79,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/ui/resource/VirtualizedResourceDataset.tsx": {
            "lines": 425,
            "tokens": 2969,
            "sources": 1,
            "clones": 3,
            "duplicatedLines": 52,
            "duplicatedTokens": 409,
            "percentage": 12.24,
            "percentageTokens": 13.78,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/ui/resource/ResourceVisualizationEnhanced.tsx": {
            "lines": 310,
            "tokens": 2836,
            "sources": 1,
            "clones": 3,
            "duplicatedLines": 65,
            "duplicatedTokens": 541,
            "percentage": 20.97,
            "percentageTokens": 19.08,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/ui/resource/ResourceThresholdVisualization.tsx": {
            "lines": 316,
            "tokens": 2578,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/ui/resource/ResourceRatesUI.tsx": {
            "lines": 73,
            "tokens": 512,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/ui/resource/ResourceRatesTrends.tsx": {
            "lines": 326,
            "tokens": 2871,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/ui/resource/ResourceRatesDisplay.tsx": {
            "lines": 356,
            "tokens": 2992,
            "sources": 1,
            "clones": 2,
            "duplicatedLines": 118,
            "duplicatedTokens": 810,
            "percentage": 33.15,
            "percentageTokens": 27.07,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/ui/resource/ResourceRateFiltering.tsx": {
            "lines": 352,
            "tokens": 2725,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/ui/resource/ResourceOptimizationSuggestions.tsx": {
            "lines": 282,
            "tokens": 2467,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/ui/resource/ResourceManagementDashboard.tsx": {
            "lines": 670,
            "tokens": 5028,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/ui/resource/ResourceIcon.tsx": {
            "lines": 82,
            "tokens": 586,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/ui/resource/ResourceGrid.tsx": {
            "lines": 258,
            "tokens": 1571,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 20,
            "duplicatedTokens": 149,
            "percentage": 7.75,
            "percentageTokens": 9.48,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/ui/resource/ResourceForecastingVisualization.tsx": {
            "lines": 423,
            "tokens": 3365,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/ui/resource/ResourceDisplay.tsx": {
            "lines": 177,
            "tokens": 1471,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/ui/resource/ResourceBar.tsx": {
            "lines": 195,
            "tokens": 1353,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/ui/resource/ConverterDetailsView.tsx": {
            "lines": 293,
            "tokens": 2764,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/ui/resource/ConverterDashboard.tsx": {
            "lines": 359,
            "tokens": 2963,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 29,
            "duplicatedTokens": 215,
            "percentage": 8.08,
            "percentageTokens": 7.26,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/ui/resource/ChainVisualization.tsx": {
            "lines": 343,
            "tokens": 2873,
            "sources": 1,
            "clones": 2,
            "duplicatedLines": 35,
            "duplicatedTokens": 291,
            "percentage": 10.2,
            "percentageTokens": 10.13,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/ui/resource/ChainManagementInterface.tsx": {
            "lines": 355,
            "tokens": 3054,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/ui/profiling/ProfilingOverlay.tsx": {
            "lines": 297,
            "tokens": 2151,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/ui/performance/VisualizationPerformanceComparison.tsx": {
            "lines": 460,
            "tokens": 3037,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/ui/performance/UserBehaviorCorrelationView.tsx": {
            "lines": 795,
            "tokens": 6345,
            "sources": 1,
            "clones": 2,
            "duplicatedLines": 18,
            "duplicatedTokens": 168,
            "percentage": 2.26,
            "percentageTokens": 2.65,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/ui/performance/PerformanceRegressionReport.tsx": {
            "lines": 676,
            "tokens": 5509,
            "sources": 1,
            "clones": 12,
            "duplicatedLines": 110,
            "duplicatedTokens": 1229,
            "percentage": 16.27,
            "percentageTokens": 22.31,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/ui/performance/PerformanceBudgetTracker.tsx": {
            "lines": 607,
            "tokens": 3815,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/ui/performance/PerformanceBenchmarkDashboard.tsx": {
            "lines": 700,
            "tokens": 4573,
            "sources": 1,
            "clones": 4,
            "duplicatedLines": 42,
            "duplicatedTokens": 433,
            "percentage": 6,
            "percentageTokens": 9.47,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/ui/performance/OptimizedFlowDiagram.tsx": {
            "lines": 442,
            "tokens": 3555,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/ui/performance/OptimizationComparisonView.tsx": {
            "lines": 541,
            "tokens": 4752,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/ui/performance/MLPerformancePrediction.tsx": {
            "lines": 857,
            "tokens": 7209,
            "sources": 1,
            "clones": 3,
            "duplicatedLines": 32,
            "duplicatedTokens": 294,
            "percentage": 3.73,
            "percentageTokens": 4.08,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/ui/performance/InterpolationMemoizationDemo.tsx": {
            "lines": 728,
            "tokens": 5455,
            "sources": 1,
            "clones": 8,
            "duplicatedLines": 88,
            "duplicatedTokens": 936,
            "percentage": 12.09,
            "percentageTokens": 17.16,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/ui/performance/DynamicBudgetAdjustmentPanel.tsx": {
            "lines": 966,
            "tokens": 6503,
            "sources": 1,
            "clones": 2,
            "duplicatedLines": 46,
            "duplicatedTokens": 312,
            "percentage": 4.76,
            "percentageTokens": 4.8,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/ui/performance/D3PerformanceProfilerView.tsx": {
            "lines": 509,
            "tokens": 3974,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/ui/performance/D3AccessorBenchmarkView.tsx": {
            "lines": 381,
            "tokens": 3500,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/ui/performance/BatchedUpdateDemo.tsx": {
            "lines": 512,
            "tokens": 4804,
            "sources": 1,
            "clones": 10,
            "duplicatedLines": 110,
            "duplicatedTokens": 1380,
            "percentage": 21.48,
            "percentageTokens": 28.73,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/ui/performance/AnimationQualityDemo.tsx": {
            "lines": 612,
            "tokens": 5122,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/ui/performance/AnimationPerformanceProfilerDemo.tsx": {
            "lines": 857,
            "tokens": 5559,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/ui/performance/AnimationFrameManagerDemo.tsx": {
            "lines": 760,
            "tokens": 5433,
            "sources": 1,
            "clones": 2,
            "duplicatedLines": 18,
            "duplicatedTokens": 216,
            "percentage": 2.37,
            "percentageTokens": 3.98,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/ui/performance/AdvancedMetricAnalysis.tsx": {
            "lines": 736,
            "tokens": 6026,
            "sources": 1,
            "clones": 3,
            "duplicatedLines": 32,
            "duplicatedTokens": 294,
            "percentage": 4.35,
            "percentageTokens": 4.88,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/ui/overlays/Popover.tsx": {
            "lines": 543,
            "tokens": 4061,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 16,
            "duplicatedTokens": 134,
            "percentage": 2.95,
            "percentageTokens": 3.3,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/ui/overlays/Modal.tsx": {
            "lines": 398,
            "tokens": 2403,
            "sources": 1,
            "clones": 4,
            "duplicatedLines": 58,
            "duplicatedTokens": 491,
            "percentage": 14.57,
            "percentageTokens": 20.43,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/ui/overlays/Drawer.tsx": {
            "lines": 493,
            "tokens": 3090,
            "sources": 1,
            "clones": 3,
            "duplicatedLines": 42,
            "duplicatedTokens": 369,
            "percentage": 8.52,
            "percentageTokens": 11.94,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/ui/overlays/Dialog.tsx": {
            "lines": 315,
            "tokens": 1640,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/ui/optimized/MemoizedComponent.tsx": {
            "lines": 128,
            "tokens": 881,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/ui/modules/SubModuleHUD.tsx": {
            "lines": 407,
            "tokens": 3217,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/ui/modules/ModuleUpgradeVisualization.tsx": {
            "lines": 588,
            "tokens": 3178,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/ui/modules/ModuleUpgradeDisplay.tsx": {
            "lines": 334,
            "tokens": 2471,
            "sources": 1,
            "clones": 3,
            "duplicatedLines": 34,
            "duplicatedTokens": 281,
            "percentage": 10.18,
            "percentageTokens": 11.37,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/ui/modules/ModuleStatusIndicator.tsx": {
            "lines": 149,
            "tokens": 857,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/ui/modules/ModuleStatusDisplay.tsx": {
            "lines": 494,
            "tokens": 3947,
            "sources": 1,
            "clones": 5,
            "duplicatedLines": 58,
            "duplicatedTokens": 475,
            "percentage": 11.74,
            "percentageTokens": 12.03,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/ui/modules/ModuleHUD.tsx": {
            "lines": 481,
            "tokens": 3545,
            "sources": 1,
            "clones": 2,
            "duplicatedLines": 36,
            "duplicatedTokens": 182,
            "percentage": 7.48,
            "percentageTokens": 5.13,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/ui/modules/ModuleGrid.tsx": {
            "lines": 466,
            "tokens": 2779,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 20,
            "duplicatedTokens": 149,
            "percentage": 4.29,
            "percentageTokens": 5.36,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/ui/modules/ModuleControls.tsx": {
            "lines": 368,
            "tokens": 1931,
            "sources": 1,
            "clones": 2,
            "duplicatedLines": 36,
            "duplicatedTokens": 204,
            "percentage": 9.78,
            "percentageTokens": 10.56,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/ui/modules/ModuleCard.tsx": {
            "lines": 457,
            "tokens": 1970,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/ui/layout/ResponsiveLayout.tsx": {
            "lines": 469,
            "tokens": 3205,
            "sources": 1,
            "clones": 4,
            "duplicatedLines": 44,
            "duplicatedTokens": 368,
            "percentage": 9.38,
            "percentageTokens": 11.48,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/ui/game/ShipDisplay.tsx": {
            "lines": 284,
            "tokens": 2370,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/ui/game/MiniMap.tsx": {
            "lines": 436,
            "tokens": 3131,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/ui/game/LazyMiniMap.tsx": {
            "lines": 77,
            "tokens": 541,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/ui/game/FactionBadge.tsx": {
            "lines": 239,
            "tokens": 1557,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/ui/event/VirtualizedEventLog.tsx": {
            "lines": 347,
            "tokens": 2631,
            "sources": 1,
            "clones": 2,
            "duplicatedLines": 43,
            "duplicatedTokens": 319,
            "percentage": 12.39,
            "percentageTokens": 12.12,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/ui/errors/ResourceLoadingError.tsx": {
            "lines": 126,
            "tokens": 775,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/ui/errors/NetworkErrorFallback.tsx": {
            "lines": 204,
            "tokens": 1302,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/ui/errors/ErrorHandlingExamples.tsx": {
            "lines": 233,
            "tokens": 1547,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/ui/errors/ErrorFallback.tsx": {
            "lines": 186,
            "tokens": 1086,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/ui/errors/ErrorBoundary.tsx": {
            "lines": 275,
            "tokens": 1395,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/ui/errors/ComponentSpecificErrorStates.tsx": {
            "lines": 329,
            "tokens": 2388,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/ui/errors/ComponentErrorState.tsx": {
            "lines": 504,
            "tokens": 2943,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/ui/common/Button.tsx": {
            "lines": 54,
            "tokens": 403,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/ui/common/Badge.tsx": {
            "lines": 40,
            "tokens": 289,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/ui/buttons/AbilityButton.tsx": {
            "lines": 89,
            "tokens": 407,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/ui/automation/AutomationVisualization.tsx": {
            "lines": 513,
            "tokens": 4129,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/ui/automation/AutomationRuleEditor.tsx": {
            "lines": 838,
            "tokens": 6915,
            "sources": 1,
            "clones": 2,
            "duplicatedLines": 48,
            "duplicatedTokens": 320,
            "percentage": 5.73,
            "percentageTokens": 4.63,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/ships/common/SpaceRatShip.tsx": {
            "lines": 249,
            "tokens": 1737,
            "sources": 1,
            "clones": 2,
            "duplicatedLines": 36,
            "duplicatedTokens": 297,
            "percentage": 14.46,
            "percentageTokens": 17.1,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/ships/common/LostNovaShip.tsx": {
            "lines": 249,
            "tokens": 1759,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 21,
            "duplicatedTokens": 201,
            "percentage": 8.43,
            "percentageTokens": 11.43,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/ships/common/FactionShipStats.tsx": {
            "lines": 198,
            "tokens": 1768,
            "sources": 1,
            "clones": 4,
            "duplicatedLines": 64,
            "duplicatedTokens": 523,
            "percentage": 32.32,
            "percentageTokens": 29.58,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/ships/common/FactionShipBase.tsx": {
            "lines": 201,
            "tokens": 1616,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 9,
            "duplicatedTokens": 84,
            "percentage": 4.48,
            "percentageTokens": 5.2,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/ships/common/FactionFleet.tsx": {
            "lines": 287,
            "tokens": 2321,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/ships/common/EquatorHorizonShip.tsx": {
            "lines": 276,
            "tokens": 1975,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 15,
            "duplicatedTokens": 96,
            "percentage": 5.43,
            "percentageTokens": 4.86,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/ships/common/CommonShipStats.tsx": {
            "lines": 101,
            "tokens": 988,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 94,
            "duplicatedTokens": 922,
            "percentage": 93.07,
            "percentageTokens": 93.32,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/ships/common/CommonShipMovement.tsx": {
            "lines": 98,
            "tokens": 785,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/ships/base/BaseShip.tsx": {
            "lines": 239,
            "tokens": 1775,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 9,
            "duplicatedTokens": 84,
            "percentage": 3.77,
            "percentageTokens": 4.73,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/ships/FactionShips/FactionDashboard.tsx": {
            "lines": 311,
            "tokens": 2783,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 15,
            "duplicatedTokens": 121,
            "percentage": 4.82,
            "percentageTokens": 4.35,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/exploration/visualizations/withMemoryManagement.tsx": {
            "lines": 116,
            "tokens": 815,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/exploration/visualizations/AnalysisVisualization.tsx": {
            "lines": 780,
            "tokens": 6760,
            "sources": 1,
            "clones": 2,
            "duplicatedLines": 22,
            "duplicatedTokens": 192,
            "percentage": 2.82,
            "percentageTokens": 2.84,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/combat/radar/RangeIndicators.tsx": {
            "lines": 222,
            "tokens": 1762,
            "sources": 1,
            "clones": 2,
            "duplicatedLines": 28,
            "duplicatedTokens": 190,
            "percentage": 12.61,
            "percentageTokens": 10.78,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/combat/radar/RadarSweepAnimation.tsx": {
            "lines": 246,
            "tokens": 2023,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 14,
            "duplicatedTokens": 95,
            "percentage": 5.69,
            "percentageTokens": 4.7,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/combat/radar/DetectionVisualization.tsx": {
            "lines": 310,
            "tokens": 2785,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 14,
            "duplicatedTokens": 95,
            "percentage": 4.52,
            "percentageTokens": 3.41,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/combat/formations/TacticalBonusCard.tsx": {
            "lines": 69,
            "tokens": 545,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/combat/formations/TacticalBehaviorSelector.tsx": {
            "lines": 352,
            "tokens": 2686,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/combat/formations/FormationVisualizer.tsx": {
            "lines": 249,
            "tokens": 2363,
            "sources": 1,
            "clones": 2,
            "duplicatedLines": 14,
            "duplicatedTokens": 254,
            "percentage": 5.62,
            "percentageTokens": 10.75,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/combat/formations/FormationTacticsPanel.tsx": {
            "lines": 442,
            "tokens": 3350,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/combat/formations/FormationTacticsPage.tsx": {
            "lines": 257,
            "tokens": 2230,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/combat/formations/FormationTacticsContainer.tsx": {
            "lines": 95,
            "tokens": 703,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/combat/formations/FormationPresetList.tsx": {
            "lines": 197,
            "tokens": 1306,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/combat/formations/FormationEditor.tsx": {
            "lines": 232,
            "tokens": 1622,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/combat/alerts/AlertSystemUI.tsx": {
            "lines": 283,
            "tokens": 2285,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/buildings/mothership/MothershipCore.tsx": {
            "lines": 344,
            "tokens": 2969,
            "sources": 1,
            "clones": 3,
            "duplicatedLines": 102,
            "duplicatedTokens": 953,
            "percentage": 29.65,
            "percentageTokens": 32.1,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/buildings/colony/TradeRouteVisualization.tsx": {
            "lines": 418,
            "tokens": 3575,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 24,
            "duplicatedTokens": 169,
            "percentage": 5.74,
            "percentageTokens": 4.73,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/buildings/colony/SatisfactionMeter.tsx": {
            "lines": 185,
            "tokens": 1515,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/buildings/colony/ResourceTransferAnimation.tsx": {
            "lines": 179,
            "tokens": 1498,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/buildings/colony/ResourceDashboard.tsx": {
            "lines": 195,
            "tokens": 1549,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/buildings/colony/PopulationGrowthModule.tsx": {
            "lines": 370,
            "tokens": 3028,
            "sources": 1,
            "clones": 3,
            "duplicatedLines": 37,
            "duplicatedTokens": 312,
            "percentage": 10,
            "percentageTokens": 10.3,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/buildings/colony/HabitableWorld.tsx": {
            "lines": 313,
            "tokens": 2693,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/buildings/colony/GrowthRateModifiers.tsx": {
            "lines": 420,
            "tokens": 3465,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 11,
            "duplicatedTokens": 94,
            "percentage": 2.62,
            "percentageTokens": 2.71,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/buildings/colony/EconomicHub.tsx": {
            "lines": 135,
            "tokens": 1214,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/buildings/colony/CulturalCenter.tsx": {
            "lines": 93,
            "tokens": 867,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/buildings/colony/ColonyMap.tsx": {
            "lines": 310,
            "tokens": 2897,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 16,
            "duplicatedTokens": 134,
            "percentage": 5.16,
            "percentageTokens": 4.63,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/buildings/colony/ColonyManagementSystem.tsx": {
            "lines": 808,
            "tokens": 6311,
            "sources": 1,
            "clones": 3,
            "duplicatedLines": 54,
            "duplicatedTokens": 429,
            "percentage": 6.68,
            "percentageTokens": 6.8,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/buildings/colony/ColonyCore.tsx": {
            "lines": 183,
            "tokens": 1609,
            "sources": 1,
            "clones": 3,
            "duplicatedLines": 102,
            "duplicatedTokens": 953,
            "percentage": 55.74,
            "percentageTokens": 59.23,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/buildings/colony/BiodomeModule.tsx": {
            "lines": 140,
            "tokens": 1278,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/buildings/colony/AutomatedPopulationManager.tsx": {
            "lines": 441,
            "tokens": 3565,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 12,
            "duplicatedTokens": 92,
            "percentage": 2.72,
            "percentageTokens": 2.58,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/buildings/colony/AutomatedExpansion.tsx": {
            "lines": 398,
            "tokens": 3297,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/visualization/renderers/SVGRenderer.tsx": {
            "lines": 596,
            "tokens": 6004,
            "sources": 1,
            "clones": 8,
            "duplicatedLines": 102,
            "duplicatedTokens": 1122,
            "percentage": 17.11,
            "percentageTokens": 18.69,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/utils/performance/HookPerformanceDashboard.tsx": {
            "lines": 433,
            "tokens": 3201,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/utils/events/EventDispatcher.tsx": {
            "lines": 397,
            "tokens": 1709,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/ui/layout/Responsive.tsx": {
            "lines": 261,
            "tokens": 1582,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/ui/components/Tooltip.tsx": {
            "lines": 410,
            "tokens": 3183,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/ui/components/Icon.tsx": {
            "lines": 185,
            "tokens": 1111,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/ui/components/Divider.tsx": {
            "lines": 241,
            "tokens": 1415,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/ui/components/Card.tsx": {
            "lines": 197,
            "tokens": 1087,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/ui/components/Button.tsx": {
            "lines": 174,
            "tokens": 941,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/ui/components/Badge.tsx": {
            "lines": 203,
            "tokens": 1067,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/tests/utils/test-utils.tsx": {
            "lines": 108,
            "tokens": 681,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/tests/integration/ui-components.test.tsx": {
            "lines": 180,
            "tokens": 1527,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/tests/accessibility/a11y.test.tsx": {
            "lines": 145,
            "tokens": 1056,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/pages/performance/MultitabPerformanceTestPage.tsx": {
            "lines": 276,
            "tokens": 1771,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/pages/performance/LongSessionMemoryPage.tsx": {
            "lines": 939,
            "tokens": 5838,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/managers/resource/ResourceTransferManager.tsx": {
            "lines": 206,
            "tokens": 1837,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/lib/contexts/BaseContext.tsx": {
            "lines": 479,
            "tokens": 2861,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/hooks/resources/useResourceManagement.tsx": {
            "lines": 291,
            "tokens": 2386,
            "sources": 1,
            "clones": 2,
            "duplicatedLines": 10,
            "duplicatedTokens": 168,
            "percentage": 3.44,
            "percentageTokens": 7.04,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/errorHandling/utils/errorBoundaryHOC.tsx": {
            "lines": 205,
            "tokens": 1358,
            "sources": 1,
            "clones": 2,
            "duplicatedLines": 11,
            "duplicatedTokens": 202,
            "percentage": 5.37,
            "percentageTokens": 14.87,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/errorHandling/specialized/VisualizationErrorBoundary.tsx": {
            "lines": 120,
            "tokens": 687,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/errorHandling/specialized/DataFetchingErrorBoundary.tsx": {
            "lines": 161,
            "tokens": 1068,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/effects/component_effects/WeaponEffect.tsx": {
            "lines": 617,
            "tokens": 4613,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/effects/component_effects/TradeRouteEffect.tsx": {
            "lines": 115,
            "tokens": 1098,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 17,
            "duplicatedTokens": 215,
            "percentage": 14.78,
            "percentageTokens": 19.58,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/effects/component_effects/ThrusterEffect.tsx": {
            "lines": 402,
            "tokens": 2835,
            "sources": 1,
            "clones": 2,
            "duplicatedLines": 69,
            "duplicatedTokens": 490,
            "percentage": 17.16,
            "percentageTokens": 17.28,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/effects/component_effects/StarSystemBackdrop.tsx": {
            "lines": 121,
            "tokens": 1072,
            "sources": 1,
            "clones": 2,
            "duplicatedLines": 34,
            "duplicatedTokens": 241,
            "percentage": 28.1,
            "percentageTokens": 22.48,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/effects/component_effects/SmokeTrailEffect.tsx": {
            "lines": 353,
            "tokens": 2834,
            "sources": 1,
            "clones": 5,
            "duplicatedLines": 105,
            "duplicatedTokens": 916,
            "percentage": 29.75,
            "percentageTokens": 32.32,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/effects/component_effects/ShipPathEffect.tsx": {
            "lines": 101,
            "tokens": 934,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 17,
            "duplicatedTokens": 215,
            "percentage": 16.83,
            "percentageTokens": 23.02,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/effects/component_effects/ShieldEffect.tsx": {
            "lines": 513,
            "tokens": 2739,
            "sources": 1,
            "clones": 2,
            "duplicatedLines": 25,
            "duplicatedTokens": 290,
            "percentage": 4.87,
            "percentageTokens": 10.59,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/effects/component_effects/ResourceFlowVisualization.tsx": {
            "lines": 187,
            "tokens": 1669,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/effects/component_effects/ProgressionEffects.tsx": {
            "lines": 108,
            "tokens": 891,
            "sources": 1,
            "clones": 4,
            "duplicatedLines": 45,
            "duplicatedTokens": 425,
            "percentage": 41.67,
            "percentageTokens": 47.7,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/effects/component_effects/PopulationIndicator.tsx": {
            "lines": 87,
            "tokens": 724,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/effects/component_effects/MothershipSuperstructure.tsx": {
            "lines": 276,
            "tokens": 2379,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/effects/component_effects/ModuleUpgradeTransition.tsx": {
            "lines": 165,
            "tokens": 1387,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 18,
            "duplicatedTokens": 127,
            "percentage": 10.91,
            "percentageTokens": 9.16,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/effects/component_effects/MineralProcessing.tsx": {
            "lines": 282,
            "tokens": 2068,
            "sources": 1,
            "clones": 3,
            "duplicatedLines": 32,
            "duplicatedTokens": 302,
            "percentage": 11.35,
            "percentageTokens": 14.6,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/effects/component_effects/HabitableWorld.tsx": {
            "lines": 232,
            "tokens": 1801,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/effects/component_effects/FormationTransitionEffect.tsx": {
            "lines": 205,
            "tokens": 1897,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/effects/component_effects/ExplosionEffect.tsx": {
            "lines": 266,
            "tokens": 2442,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 11,
            "duplicatedTokens": 136,
            "percentage": 4.14,
            "percentageTokens": 5.57,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/effects/component_effects/ExplorationHub.tsx": {
            "lines": 322,
            "tokens": 2371,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 12,
            "duplicatedTokens": 104,
            "percentage": 3.73,
            "percentageTokens": 4.39,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/effects/component_effects/CombatAutomationEffect.tsx": {
            "lines": 177,
            "tokens": 1296,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/effects/component_effects/ColonyStarStation.tsx": {
            "lines": 267,
            "tokens": 1992,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 8,
            "duplicatedTokens": 94,
            "percentage": 3,
            "percentageTokens": 4.72,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/effects/component_effects/CentralMothership.tsx": {
            "lines": 187,
            "tokens": 1459,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 12,
            "duplicatedTokens": 104,
            "percentage": 6.42,
            "percentageTokens": 7.13,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/effects/component_effects/CapitalShipEffect.tsx": {
            "lines": 165,
            "tokens": 1327,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/effects/component_effects/BuildingUpgradeEffect.tsx": {
            "lines": 173,
            "tokens": 1547,
            "sources": 1,
            "clones": 3,
            "duplicatedLines": 27,
            "duplicatedTokens": 298,
            "percentage": 15.61,
            "percentageTokens": 19.26,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/effects/component_effects/BackgroundEffect.tsx": {
            "lines": 160,
            "tokens": 1383,
            "sources": 1,
            "clones": 2,
            "duplicatedLines": 34,
            "duplicatedTokens": 241,
            "percentage": 21.25,
            "percentageTokens": 17.43,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/weapons/WeaponUpgradeSystem.tsx": {
            "lines": 147,
            "tokens": 1279,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 7,
            "duplicatedTokens": 67,
            "percentage": 4.76,
            "percentageTokens": 5.24,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/weapons/WeaponSystem.tsx": {
            "lines": 117,
            "tokens": 890,
            "sources": 1,
            "clones": 2,
            "duplicatedLines": 16,
            "duplicatedTokens": 142,
            "percentage": 13.68,
            "percentageTokens": 15.96,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/weapons/WeaponSpecialization.tsx": {
            "lines": 150,
            "tokens": 1247,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/weapons/WeaponLoadout.tsx": {
            "lines": 129,
            "tokens": 1154,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/weapons/WeaponControl.tsx": {
            "lines": 159,
            "tokens": 1425,
            "sources": 1,
            "clones": 3,
            "duplicatedLines": 31,
            "duplicatedTokens": 279,
            "percentage": 19.5,
            "percentageTokens": 19.58,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/weapons/WeaponComponents.tsx": {
            "lines": 275,
            "tokens": 2206,
            "sources": 1,
            "clones": 2,
            "duplicatedLines": 22,
            "duplicatedTokens": 204,
            "percentage": 8,
            "percentageTokens": 9.25,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/ui/tooltip-context.tsx": {
            "lines": 68,
            "tokens": 571,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/ui/VPRStarSystemView.tsx": {
            "lines": 250,
            "tokens": 2022,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/ui/VPRLoadingFallback.tsx": {
            "lines": 15,
            "tokens": 123,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/ui/VPRErrorBoundary.tsx": {
            "lines": 46,
            "tokens": 398,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/ui/TooltipProvider.tsx": {
            "lines": 28,
            "tokens": 200,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/ui/Tabs.tsx": {
            "lines": 48,
            "tokens": 367,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/ui/SprawlView.tsx": {
            "lines": 629,
            "tokens": 5161,
            "sources": 1,
            "clones": 5,
            "duplicatedLines": 87,
            "duplicatedTokens": 852,
            "percentage": 13.83,
            "percentageTokens": 16.51,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/ui/ResourceRegistryUI.tsx": {
            "lines": 871,
            "tokens": 7059,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/ui/ResourceEventMonitor.tsx": {
            "lines": 234,
            "tokens": 2106,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/ui/NotificationSystem.tsx": {
            "lines": 187,
            "tokens": 1610,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/ui/GlobalErrorBoundary.tsx": {
            "lines": 122,
            "tokens": 929,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/ui/GameLayout.tsx": {
            "lines": 195,
            "tokens": 1537,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/ui/GameHUD.tsx": {
            "lines": 927,
            "tokens": 7203,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/ui/GalaxyMap.tsx": {
            "lines": 635,
            "tokens": 5423,
            "sources": 1,
            "clones": 5,
            "duplicatedLines": 81,
            "duplicatedTokens": 903,
            "percentage": 12.76,
            "percentageTokens": 16.65,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/ui/DragAndDrop.tsx": {
            "lines": 194,
            "tokens": 1768,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/ui/DiplomacyPanel.tsx": {
            "lines": 191,
            "tokens": 1565,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/ui/ContextMenu.tsx": {
            "lines": 162,
            "tokens": 1358,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/ui/Card.tsx": {
            "lines": 84,
            "tokens": 646,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/ui/Button.tsx": {
            "lines": 78,
            "tokens": 660,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/trade/TradeRouteVisualizer.tsx": {
            "lines": 142,
            "tokens": 1213,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/providers/ServiceProvider.tsx": {
            "lines": 123,
            "tokens": 1031,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/performance/MultitabPerformanceResults.tsx": {
            "lines": 252,
            "tokens": 2416,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/performance/MultitabPerformanceLauncher.tsx": {
            "lines": 161,
            "tokens": 1380,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/performance/LongSessionMemoryVisualizer.tsx": {
            "lines": 977,
            "tokens": 7574,
            "sources": 1,
            "clones": 2,
            "duplicatedLines": 16,
            "duplicatedTokens": 188,
            "percentage": 1.64,
            "percentageTokens": 2.48,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/performance/GeographicAnalysisDashboard.tsx": {
            "lines": 684,
            "tokens": 5176,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 13,
            "duplicatedTokens": 82,
            "percentage": 1.9,
            "percentageTokens": 1.58,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/performance/DeviceCapabilityReport.tsx": {
            "lines": 848,
            "tokens": 5776,
            "sources": 1,
            "clones": 9,
            "duplicatedLines": 137,
            "duplicatedTokens": 758,
            "percentage": 16.16,
            "percentageTokens": 13.12,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/factions/FactionManager.tsx": {
            "lines": 214,
            "tokens": 1853,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 15,
            "duplicatedTokens": 121,
            "percentage": 7.01,
            "percentageTokens": 6.53,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/factions/FactionAI.tsx": {
            "lines": 159,
            "tokens": 1371,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/exploration/ResultsPanel.tsx": {
            "lines": 89,
            "tokens": 817,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/exploration/ResourcePotentialVisualization.tsx": {
            "lines": 732,
            "tokens": 6326,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/exploration/ResourceDiscoverySystem.tsx": {
            "lines": 756,
            "tokens": 6146,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/exploration/ReconShipCoordination.tsx": {
            "lines": 781,
            "tokens": 6776,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/exploration/RealTimeMapUpdates.tsx": {
            "lines": 542,
            "tokens": 4110,
            "sources": 1,
            "clones": 6,
            "duplicatedLines": 94,
            "duplicatedTokens": 706,
            "percentage": 17.34,
            "percentageTokens": 17.18,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/exploration/GalaxyMappingSystem.tsx": {
            "lines": 319,
            "tokens": 2765,
            "sources": 1,
            "clones": 5,
            "duplicatedLines": 55,
            "duplicatedTokens": 640,
            "percentage": 17.24,
            "percentageTokens": 23.15,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/exploration/GalaxyMapSystem.tsx": {
            "lines": 361,
            "tokens": 3083,
            "sources": 1,
            "clones": 2,
            "duplicatedLines": 42,
            "duplicatedTokens": 330,
            "percentage": 11.63,
            "percentageTokens": 10.7,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/exploration/ExplorationSystemIntegration.tsx": {
            "lines": 226,
            "tokens": 1907,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 23,
            "duplicatedTokens": 181,
            "percentage": 10.18,
            "percentageTokens": 9.49,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/exploration/ExplorationDataManager.tsx": {
            "lines": 585,
            "tokens": 5247,
            "sources": 1,
            "clones": 2,
            "duplicatedLines": 22,
            "duplicatedTokens": 194,
            "percentage": 3.76,
            "percentageTokens": 3.7,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/exploration/DiscoveryClassification.tsx": {
            "lines": 706,
            "tokens": 5659,
            "sources": 1,
            "clones": 2,
            "duplicatedLines": 18,
            "duplicatedTokens": 186,
            "percentage": 2.55,
            "percentageTokens": 3.29,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/exploration/DatasetManager.tsx": {
            "lines": 179,
            "tokens": 1376,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 23,
            "duplicatedTokens": 129,
            "percentage": 12.85,
            "percentageTokens": 9.38,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/exploration/DataPointVirtualList.tsx": {
            "lines": 332,
            "tokens": 2657,
            "sources": 1,
            "clones": 2,
            "duplicatedLines": 20,
            "duplicatedTokens": 194,
            "percentage": 6.02,
            "percentageTokens": 7.3,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/exploration/DataFilterPanel.tsx": {
            "lines": 227,
            "tokens": 1860,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/exploration/DataAnalysisSystem.tsx": {
            "lines": 863,
            "tokens": 7133,
            "sources": 1,
            "clones": 4,
            "duplicatedLines": 32,
            "duplicatedTokens": 348,
            "percentage": 3.71,
            "percentageTokens": 4.88,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/exploration/AutomatedSectorScanner.tsx": {
            "lines": 584,
            "tokens": 4749,
            "sources": 1,
            "clones": 2,
            "duplicatedLines": 45,
            "duplicatedTokens": 341,
            "percentage": 7.71,
            "percentageTokens": 7.18,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/exploration/AnomalyAnalysis.tsx": {
            "lines": 637,
            "tokens": 5598,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 10,
            "duplicatedTokens": 99,
            "percentage": 1.57,
            "percentageTokens": 1.77,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/exploration/AnalysisConfigManager.tsx": {
            "lines": 322,
            "tokens": 2672,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 23,
            "duplicatedTokens": 129,
            "percentage": 7.14,
            "percentageTokens": 4.83,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/exploration/AdvancedFilteringSystem.tsx": {
            "lines": 477,
            "tokens": 3649,
            "sources": 1,
            "clones": 2,
            "duplicatedLines": 36,
            "duplicatedTokens": 264,
            "percentage": 7.55,
            "percentageTokens": 7.23,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/debug/GameStateMonitor.tsx": {
            "lines": 314,
            "tokens": 2866,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/debug/AIDebugOverlay.tsx": {
            "lines": 124,
            "tokens": 1149,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/core/ThresholdIntegration.tsx": {
            "lines": 175,
            "tokens": 1286,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/core/SystemIntegration.tsx": {
            "lines": 134,
            "tokens": 1132,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/core/IntegrationErrorHandler.tsx": {
            "lines": 166,
            "tokens": 1117,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/combat/SalvageSystem.tsx": {
            "lines": 121,
            "tokens": 1098,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/combat/FleetDetails.tsx": {
            "lines": 118,
            "tokens": 1042,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/combat/CombatSystemDemo.tsx": {
            "lines": 396,
            "tokens": 3154,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/combat/CombatLayout.tsx": {
            "lines": 53,
            "tokens": 289,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/combat/CombatDashboard.tsx": {
            "lines": 109,
            "tokens": 961,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/combat/BattleView.tsx": {
            "lines": 168,
            "tokens": 1486,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/combat/BattleEnvironment.tsx": {
            "lines": 988,
            "tokens": 8152,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/visualization/Chart.tsx": {
            "lines": 459,
            "tokens": 3277,
            "sources": 1,
            "clones": 2,
            "duplicatedLines": 26,
            "duplicatedTokens": 278,
            "percentage": 5.66,
            "percentageTokens": 8.48,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/router/routes.tsx": {
            "lines": 79,
            "tokens": 546,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/pages/ResourceRegistryDemo.tsx": {
            "lines": 316,
            "tokens": 2528,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/pages/ResourceManagementPage.tsx": {
            "lines": 30,
            "tokens": 138,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/pages/PerformanceAnalysisDashboard.tsx": {
            "lines": 346,
            "tokens": 2562,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/pages/CombatSystemPage.tsx": {
            "lines": 101,
            "tokens": 1059,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/pages/ColonyManagementPage.tsx": {
            "lines": 440,
            "tokens": 3329,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/examples/StateSelectorExample.tsx": {
            "lines": 298,
            "tokens": 2133,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/examples/StatePersistenceExample.tsx": {
            "lines": 330,
            "tokens": 2522,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/errorHandling/GlobalErrorBoundary.tsx": {
            "lines": 152,
            "tokens": 977,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/errorHandling/ErrorFallback.tsx": {
            "lines": 106,
            "tokens": 637,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/errorHandling/ErrorBoundary.tsx": {
            "lines": 152,
            "tokens": 1000,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/contexts/ThresholdContext.tsx": {
            "lines": 285,
            "tokens": 2203,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/contexts/ThemeContext.tsx": {
            "lines": 139,
            "tokens": 941,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/contexts/ShipContext.tsx": {
            "lines": 320,
            "tokens": 2269,
            "sources": 1,
            "clones": 2,
            "duplicatedLines": 36,
            "duplicatedTokens": 306,
            "percentage": 11.25,
            "percentageTokens": 13.49,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/contexts/ResourceRatesContext.tsx": {
            "lines": 327,
            "tokens": 2825,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/contexts/ModuleContext.tsx": {
            "lines": 761,
            "tokens": 6049,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/contexts/GameContext.tsx": {
            "lines": 711,
            "tokens": 5733,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/contexts/ClassificationContext.tsx": {
            "lines": 617,
            "tokens": 4344,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/main.tsx": {
            "lines": 18,
            "tokens": 115,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/App.tsx": {
            "lines": 458,
            "tokens": 3550,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          }
        },
        "total": {
          "lines": 114119,
          "tokens": 879390,
          "sources": 365,
          "clones": 255,
          "duplicatedLines": 4290,
          "duplicatedTokens": 37486,
          "percentage": 3.76,
          "percentageTokens": 4.26,
          "newDuplicatedLines": 0,
          "newClones": 0
        }
      },
      "typescript": {
        "sources": {
          "src/components/exploration/visualizations/charts/index.ts": {
            "lines": 25,
            "tokens": 131,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/exploration/unified/core/index.ts": {
            "lines": 20,
            "tokens": 94,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/utils/performance/network/NetworkDegradationSimulator.ts": {
            "lines": 849,
            "tokens": 5762,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/utils/performance/multitab/MultitabCommunicationChannel.ts": {
            "lines": 451,
            "tokens": 2905,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/utils/performance/longsession/LongSessionMemoryTracker.ts": {
            "lines": 663,
            "tokens": 4385,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/utils/performance/benchmarks/PerformanceBudgets.ts": {
            "lines": 243,
            "tokens": 1201,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/utils/performance/benchmarks/PerformanceBenchmarkTools.ts": {
            "lines": 964,
            "tokens": 6428,
            "sources": 1,
            "clones": 6,
            "duplicatedLines": 110,
            "duplicatedTokens": 976,
            "percentage": 11.41,
            "percentageTokens": 15.18,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/utils/performance/benchmarks/DynamicBudgetAdjustment.ts": {
            "lines": 718,
            "tokens": 4312,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/ui/components/Card/index.ts": {
            "lines": 53,
            "tokens": 53,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/ui/components/Button/index.ts": {
            "lines": 46,
            "tokens": 53,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/types/exploration/unified/index.ts": {
            "lines": 10,
            "tokens": 24,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/types/exploration/unified/ExplorationTypes.ts": {
            "lines": 697,
            "tokens": 3652,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/types/exploration/unified/ExplorationTypeUtils.ts": {
            "lines": 498,
            "tokens": 3718,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/types/events/__tests__/StandardizedEvents.test.ts": {
            "lines": 123,
            "tokens": 1059,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/ui/profiling/index.ts": {
            "lines": 3,
            "tokens": 22,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/ui/performance/performanceTypes.ts": {
            "lines": 57,
            "tokens": 237,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/ui/performance/index.ts": {
            "lines": 20,
            "tokens": 140,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/ui/optimized/index.ts": {
            "lines": 25,
            "tokens": 114,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/ui/modules/index.ts": {
            "lines": 20,
            "tokens": 151,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/ui/game/index.ts": {
            "lines": 12,
            "tokens": 63,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/ui/errors/index.ts": {
            "lines": 62,
            "tokens": 289,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/exploration/unified/index.ts": {
            "lines": 16,
            "tokens": 59,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/utils/workers/ResourceFlowWorkerUtil.ts": {
            "lines": 338,
            "tokens": 2250,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/utils/weapons/weaponTypeConversions.ts": {
            "lines": 58,
            "tokens": 518,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/utils/weapons/weaponEffectUtils.ts": {
            "lines": 457,
            "tokens": 3191,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/utils/typeGuards/resourceTypeGuards.ts": {
            "lines": 467,
            "tokens": 3242,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/utils/state/statePersistence.ts": {
            "lines": 590,
            "tokens": 3995,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/utils/state/stateMigration.ts": {
            "lines": 538,
            "tokens": 3752,
            "sources": 1,
            "clones": 2,
            "duplicatedLines": 14,
            "duplicatedTokens": 154,
            "percentage": 2.6,
            "percentageTokens": 4.1,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/utils/state/contextSelectors.ts": {
            "lines": 261,
            "tokens": 2047,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/utils/spatial/SpatialPartitioning.ts": {
            "lines": 383,
            "tokens": 3012,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/utils/ships/shipUtils.ts": {
            "lines": 160,
            "tokens": 1477,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/utils/ships/shipClassUtils.ts": {
            "lines": 17,
            "tokens": 113,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/utils/services/ServiceAccess.ts": {
            "lines": 139,
            "tokens": 744,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/utils/resources/resourceUtils.ts": {
            "lines": 13,
            "tokens": 79,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/utils/resources/ResourceTypeMigration.ts": {
            "lines": 286,
            "tokens": 1946,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/utils/resources/ResourceTypeConverter.ts": {
            "lines": 158,
            "tokens": 1062,
            "sources": 1,
            "clones": 2,
            "duplicatedLines": 40,
            "duplicatedTokens": 327,
            "percentage": 25.32,
            "percentageTokens": 30.79,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/utils/profiling/index.ts": {
            "lines": 11,
            "tokens": 67,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/utils/profiling/enhancedComponentProfiler.ts": {
            "lines": 885,
            "tokens": 5436,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/utils/profiling/componentProfiler.ts": {
            "lines": 261,
            "tokens": 1771,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/utils/profiling/applicationProfiler.ts": {
            "lines": 254,
            "tokens": 1528,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/utils/performance/hookPerformanceMonitor.ts": {
            "lines": 352,
            "tokens": 2126,
            "sources": 1,
            "clones": 4,
            "duplicatedLines": 66,
            "duplicatedTokens": 448,
            "percentage": 18.75,
            "percentageTokens": 21.07,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/utils/performance/animationFrameManagerInstance.ts": {
            "lines": 11,
            "tokens": 75,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/utils/performance/D3PerformanceProfiler.ts": {
            "lines": 764,
            "tokens": 5578,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/utils/performance/D3PerformanceOptimizations.ts": {
            "lines": 369,
            "tokens": 2626,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/utils/performance/D3AnimationProfiler.ts": {
            "lines": 772,
            "tokens": 5436,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/utils/performance/D3AccessorBenchmark.ts": {
            "lines": 473,
            "tokens": 3334,
            "sources": 1,
            "clones": 6,
            "duplicatedLines": 50,
            "duplicatedTokens": 556,
            "percentage": 10.57,
            "percentageTokens": 16.68,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/utils/performance/ComponentOptimizer.ts": {
            "lines": 414,
            "tokens": 2951,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/utils/modules/moduleValidation.ts": {
            "lines": 792,
            "tokens": 5654,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/utils/logging/loggerService.ts": {
            "lines": 132,
            "tokens": 996,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/utils/events/rxjsIntegration.ts": {
            "lines": 191,
            "tokens": 1222,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 13,
            "duplicatedTokens": 102,
            "percentage": 6.81,
            "percentageTokens": 8.35,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/utils/events/eventTypeGuards.ts": {
            "lines": 49,
            "tokens": 446,
            "sources": 1,
            "clones": 2,
            "duplicatedLines": 22,
            "duplicatedTokens": 258,
            "percentage": 44.9,
            "percentageTokens": 57.85,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/utils/events/EventThrottling.ts": {
            "lines": 454,
            "tokens": 2674,
            "sources": 1,
            "clones": 4,
            "duplicatedLines": 98,
            "duplicatedTokens": 730,
            "percentage": 21.59,
            "percentageTokens": 27.3,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/utils/events/EventPrioritizer.ts": {
            "lines": 590,
            "tokens": 3529,
            "sources": 1,
            "clones": 2,
            "duplicatedLines": 46,
            "duplicatedTokens": 364,
            "percentage": 7.8,
            "percentageTokens": 10.31,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/utils/events/EventFiltering.ts": {
            "lines": 516,
            "tokens": 3622,
            "sources": 1,
            "clones": 2,
            "duplicatedLines": 10,
            "duplicatedTokens": 158,
            "percentage": 1.94,
            "percentageTokens": 4.36,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/utils/events/EventFilter.ts": {
            "lines": 426,
            "tokens": 3024,
            "sources": 1,
            "clones": 2,
            "duplicatedLines": 22,
            "duplicatedTokens": 198,
            "percentage": 5.16,
            "percentageTokens": 6.55,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/utils/events/EventDevTools.ts": {
            "lines": 504,
            "tokens": 2913,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/utils/events/EventDataTypes.ts": {
            "lines": 274,
            "tokens": 1892,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/utils/events/EventCommunication.ts": {
            "lines": 407,
            "tokens": 2883,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/utils/events/EventBatchingRxJS.ts": {
            "lines": 356,
            "tokens": 2232,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/utils/events/EventBatcher.ts": {
            "lines": 448,
            "tokens": 2750,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 13,
            "duplicatedTokens": 102,
            "percentage": 2.9,
            "percentageTokens": 3.71,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/utils/dataTransforms/scientificTransforms.ts": {
            "lines": 571,
            "tokens": 4411,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/utils/dataTransforms/index.ts": {
            "lines": 121,
            "tokens": 507,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/utils/dataTransforms/filterTransforms.ts": {
            "lines": 679,
            "tokens": 4806,
            "sources": 1,
            "clones": 3,
            "duplicatedLines": 29,
            "duplicatedTokens": 288,
            "percentage": 4.27,
            "percentageTokens": 5.99,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/utils/dataTransforms/chartTransforms.ts": {
            "lines": 842,
            "tokens": 6603,
            "sources": 1,
            "clones": 3,
            "duplicatedLines": 29,
            "duplicatedTokens": 288,
            "percentage": 3.44,
            "percentageTokens": 4.36,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/utils/combat/scanRadiusUtils.ts": {
            "lines": 205,
            "tokens": 1428,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/ui/theme/defaultTheme.ts": {
            "lines": 186,
            "tokens": 1235,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 6,
            "duplicatedTokens": 71,
            "percentage": 3.23,
            "percentageTokens": 5.75,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/ui/components/index.ts": {
            "lines": 55,
            "tokens": 30,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/types/weapons/WeaponUpgrades.ts": {
            "lines": 50,
            "tokens": 201,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/types/weapons/WeaponTypes.ts": {
            "lines": 294,
            "tokens": 1508,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/types/visualizations/FlowTypes.ts": {
            "lines": 44,
            "tokens": 216,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/types/visualizations/D3ZoomTypes.ts": {
            "lines": 384,
            "tokens": 2309,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/types/visualizations/D3Validators.ts": {
            "lines": 524,
            "tokens": 3862,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/types/visualizations/D3ValidationHooks.ts": {
            "lines": 451,
            "tokens": 3102,
            "sources": 1,
            "clones": 2,
            "duplicatedLines": 30,
            "duplicatedTokens": 234,
            "percentage": 6.65,
            "percentageTokens": 7.54,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/types/visualizations/D3Types.ts": {
            "lines": 114,
            "tokens": 730,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/types/visualizations/D3SelectionTypes.ts": {
            "lines": 660,
            "tokens": 4719,
            "sources": 1,
            "clones": 4,
            "duplicatedLines": 26,
            "duplicatedTokens": 506,
            "percentage": 3.94,
            "percentageTokens": 10.72,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/types/visualizations/D3DragTypes.ts": {
            "lines": 313,
            "tokens": 2234,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/types/visualizations/D3AnimationTypes.ts": {
            "lines": 333,
            "tokens": 2092,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/types/visualization/index.ts": {
            "lines": 7,
            "tokens": 10,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/types/visualization/CommonTypes.ts": {
            "lines": 425,
            "tokens": 2015,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 24,
            "duplicatedTokens": 113,
            "percentage": 5.65,
            "percentageTokens": 5.61,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/types/ui/typeGuards.ts": {
            "lines": 307,
            "tokens": 2290,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/types/ui/UITypes.ts": {
            "lines": 387,
            "tokens": 1079,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/types/ui/ThemeTypes.ts": {
            "lines": 281,
            "tokens": 1624,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/types/ui/EventTypes.ts": {
            "lines": 313,
            "tokens": 1936,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/types/ui/ComponentTypes.ts": {
            "lines": 275,
            "tokens": 1284,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/types/system/SystemTypes.ts": {
            "lines": 23,
            "tokens": 68,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/types/state/TypeSafeStateManagement.ts": {
            "lines": 387,
            "tokens": 3103,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/types/ships/ShipTypes.ts": {
            "lines": 63,
            "tokens": 321,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/types/ships/Ship.ts": {
            "lines": 25,
            "tokens": 202,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/types/ships/PlayerShipTypes.ts": {
            "lines": 71,
            "tokens": 454,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/types/ships/FactionTypes.ts": {
            "lines": 95,
            "tokens": 575,
            "sources": 1,
            "clones": 2,
            "duplicatedLines": 36,
            "duplicatedTokens": 216,
            "percentage": 37.89,
            "percentageTokens": 37.57,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/types/ships/FactionShipTypes.ts": {
            "lines": 196,
            "tokens": 1300,
            "sources": 1,
            "clones": 2,
            "duplicatedLines": 36,
            "duplicatedTokens": 216,
            "percentage": 18.37,
            "percentageTokens": 16.62,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/types/ships/CommonShipTypes.ts": {
            "lines": 196,
            "tokens": 1249,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 21,
            "duplicatedTokens": 107,
            "percentage": 10.71,
            "percentageTokens": 8.57,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/types/shared/index.ts": {
            "lines": 124,
            "tokens": 841,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/types/resources/ResourceTypes.ts": {
            "lines": 616,
            "tokens": 3919,
            "sources": 1,
            "clones": 2,
            "duplicatedLines": 42,
            "duplicatedTokens": 230,
            "percentage": 6.82,
            "percentageTokens": 5.87,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/types/resources/ResourceTypeUtils.ts": {
            "lines": 295,
            "tokens": 1982,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/types/resources/ResourceTypeConverter.ts": {
            "lines": 12,
            "tokens": 81,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/types/resources/ResourceSerializationTypes.ts": {
            "lines": 141,
            "tokens": 955,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/types/resources/ResourcePoolTypes.ts": {
            "lines": 141,
            "tokens": 849,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 20,
            "duplicatedTokens": 117,
            "percentage": 14.18,
            "percentageTokens": 13.78,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/types/resources/ResourceFlowTypes.ts": {
            "lines": 17,
            "tokens": 123,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/types/resources/ResourceConversionTypes.ts": {
            "lines": 160,
            "tokens": 882,
            "sources": 1,
            "clones": 2,
            "duplicatedLines": 42,
            "duplicatedTokens": 230,
            "percentage": 26.25,
            "percentageTokens": 26.08,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/types/resources/FlowNodeTypes.ts": {
            "lines": 78,
            "tokens": 447,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/types/officers/OfficerTypes.ts": {
            "lines": 229,
            "tokens": 1218,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/types/modules/ModuleTypes.ts": {
            "lines": 138,
            "tokens": 853,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/types/mining/MiningTypes.ts": {
            "lines": 57,
            "tokens": 318,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/types/managers/SharedManagerTypes.ts": {
            "lines": 274,
            "tokens": 2175,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/types/managers/MockManagerFactory.ts": {
            "lines": 174,
            "tokens": 1426,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/types/exploration/ExplorationTypes.ts": {
            "lines": 93,
            "tokens": 591,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/types/exploration/DataAnalysisTypes.ts": {
            "lines": 319,
            "tokens": 2233,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/types/exploration/ClassificationTypes.ts": {
            "lines": 109,
            "tokens": 912,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/types/exploration/AnalysisComponentTypes.ts": {
            "lines": 275,
            "tokens": 1568,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 24,
            "duplicatedTokens": 113,
            "percentage": 8.73,
            "percentageTokens": 7.21,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/types/events/moduleEventBus.d.ts": {
            "lines": 4,
            "tokens": 30,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/types/events/StandardizedEvents.ts": {
            "lines": 194,
            "tokens": 1349,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/types/events/ShipEvents.ts": {
            "lines": 184,
            "tokens": 729,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/types/events/SharedEventTypes.ts": {
            "lines": 247,
            "tokens": 1639,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/types/events/OfficerEvents.ts": {
            "lines": 90,
            "tokens": 442,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/types/events/ModuleEvents.ts": {
            "lines": 100,
            "tokens": 489,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/types/events/ModuleEventTypes.ts": {
            "lines": 85,
            "tokens": 371,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/types/events/FactionEvents.ts": {
            "lines": 172,
            "tokens": 860,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/types/events/ExplorationEvents.ts": {
            "lines": 12,
            "tokens": 96,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/types/events/EventTypes.ts": {
            "lines": 831,
            "tokens": 6050,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/types/events/EventEmitterInterface.ts": {
            "lines": 127,
            "tokens": 468,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/types/events/EnvironmentalHazardEvents.ts": {
            "lines": 29,
            "tokens": 146,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/types/events/CombatEvents.ts": {
            "lines": 161,
            "tokens": 561,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/types/debug/DebugTypes.ts": {
            "lines": 67,
            "tokens": 450,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/types/core/Position.ts": {
            "lines": 86,
            "tokens": 721,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/types/core/GameTypes.ts": {
            "lines": 85,
            "tokens": 568,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/types/config/TypeSafeConfig.ts": {
            "lines": 549,
            "tokens": 4292,
            "sources": 1,
            "clones": 4,
            "duplicatedLines": 70,
            "duplicatedTokens": 566,
            "percentage": 12.75,
            "percentageTokens": 13.19,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/types/common/VectorTypes.ts": {
            "lines": 200,
            "tokens": 1931,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/types/combat/SalvageTypes.ts": {
            "lines": 39,
            "tokens": 341,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/types/combat/HazardTypes.ts": {
            "lines": 33,
            "tokens": 275,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 15,
            "duplicatedTokens": 130,
            "percentage": 45.45,
            "percentageTokens": 47.27,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/types/combat/CombatTypes.ts": {
            "lines": 148,
            "tokens": 1045,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/types/buildings/ShipHangarTypes.ts": {
            "lines": 260,
            "tokens": 1574,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 21,
            "duplicatedTokens": 107,
            "percentage": 8.08,
            "percentageTokens": 6.8,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/types/buildings/ModuleTypes.ts": {
            "lines": 158,
            "tokens": 977,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/tests/setup/testingLibrary.setup.ts": {
            "lines": 65,
            "tokens": 288,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/tests/performance/MultitabPerformanceTestSuite.ts": {
            "lines": 388,
            "tokens": 3028,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/tests/performance/LongSessionMemoryTestSuite.ts": {
            "lines": 761,
            "tokens": 6681,
            "sources": 1,
            "clones": 4,
            "duplicatedLines": 64,
            "duplicatedTokens": 498,
            "percentage": 8.41,
            "percentageTokens": 7.45,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/systems/exploration/DiscoveryClassification.ts": {
            "lines": 488,
            "tokens": 3855,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/services/telemetry/UserBehaviorCorrelationAnalysis.ts": {
            "lines": 603,
            "tokens": 4986,
            "sources": 1,
            "clones": 2,
            "duplicatedLines": 12,
            "duplicatedTokens": 184,
            "percentage": 1.99,
            "percentageTokens": 3.69,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/services/telemetry/SessionPerformanceTracker.ts": {
            "lines": 611,
            "tokens": 4388,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/resource/subsystems/ResourceTransferSubsystem.ts": {
            "lines": 283,
            "tokens": 1898,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 19,
            "duplicatedTokens": 117,
            "percentage": 6.71,
            "percentageTokens": 6.16,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/resource/subsystems/ResourceThresholdSubsystem.ts": {
            "lines": 525,
            "tokens": 3655,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 19,
            "duplicatedTokens": 117,
            "percentage": 3.62,
            "percentageTokens": 3.2,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/resource/subsystems/ResourceStorageSubsystem.ts": {
            "lines": 930,
            "tokens": 6653,
            "sources": 1,
            "clones": 14,
            "duplicatedLines": 274,
            "duplicatedTokens": 2141,
            "percentage": 29.46,
            "percentageTokens": 32.18,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/managers/weapons/WeaponUpgradeManager.ts": {
            "lines": 383,
            "tokens": 3327,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/managers/weapons/WeaponEffectManager.ts": {
            "lines": 391,
            "tokens": 3538,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/managers/ships/StandardShipHangarManager.ts": {
            "lines": 369,
            "tokens": 2364,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/managers/ships/ShipManagerImpl.ts": {
            "lines": 92,
            "tokens": 692,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/managers/resource/ResourceThresholdManager.ts": {
            "lines": 586,
            "tokens": 4107,
            "sources": 1,
            "clones": 4,
            "duplicatedLines": 56,
            "duplicatedTokens": 384,
            "percentage": 9.56,
            "percentageTokens": 9.35,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/managers/resource/ResourceStorageManager.ts": {
            "lines": 669,
            "tokens": 4627,
            "sources": 1,
            "clones": 14,
            "duplicatedLines": 276,
            "duplicatedTokens": 2171,
            "percentage": 41.26,
            "percentageTokens": 46.92,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/managers/resource/ResourcePoolManager.ts": {
            "lines": 754,
            "tokens": 6244,
            "sources": 1,
            "clones": 6,
            "duplicatedLines": 142,
            "duplicatedTokens": 1702,
            "percentage": 18.83,
            "percentageTokens": 27.26,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/managers/resource/ResourcePerformanceMonitor.ts": {
            "lines": 235,
            "tokens": 1646,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/managers/resource/ResourceIntegration.ts": {
            "lines": 564,
            "tokens": 4005,
            "sources": 1,
            "clones": 2,
            "duplicatedLines": 42,
            "duplicatedTokens": 310,
            "percentage": 7.45,
            "percentageTokens": 7.74,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/managers/resource/ResourceFlowTypes.ts": {
            "lines": 104,
            "tokens": 512,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/managers/resource/ResourceExchangeManager.ts": {
            "lines": 664,
            "tokens": 4533,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/managers/resource/ResourceCostManager.ts": {
            "lines": 364,
            "tokens": 2699,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 30,
            "duplicatedTokens": 153,
            "percentage": 8.24,
            "percentageTokens": 5.67,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/managers/resource/ResourceConversionManager.ts": {
            "lines": 685,
            "tokens": 5028,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/managers/resource/AdaptivePerformanceManager.ts": {
            "lines": 505,
            "tokens": 3647,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/managers/module/SubModuleManager.ts": {
            "lines": 913,
            "tokens": 6260,
            "sources": 1,
            "clones": 19,
            "duplicatedLines": 246,
            "duplicatedTokens": 2072,
            "percentage": 26.94,
            "percentageTokens": 33.1,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/managers/module/OfficerManager.ts": {
            "lines": 650,
            "tokens": 5051,
            "sources": 1,
            "clones": 2,
            "duplicatedLines": 26,
            "duplicatedTokens": 190,
            "percentage": 4,
            "percentageTokens": 3.76,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/managers/module/ModuleUpgradeManager.ts": {
            "lines": 649,
            "tokens": 4286,
            "sources": 1,
            "clones": 4,
            "duplicatedLines": 64,
            "duplicatedTokens": 456,
            "percentage": 9.86,
            "percentageTokens": 10.64,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/managers/module/ModuleStatusManager.ts": {
            "lines": 690,
            "tokens": 4872,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 10,
            "duplicatedTokens": 88,
            "percentage": 1.45,
            "percentageTokens": 1.81,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/managers/module/ModuleManagerWrapper.ts": {
            "lines": 242,
            "tokens": 1722,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/managers/module/ModuleManager.ts": {
            "lines": 362,
            "tokens": 2471,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/managers/module/ModuleAttachmentManager.ts": {
            "lines": 465,
            "tokens": 3138,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/managers/module/BaseModuleManager.ts": {
            "lines": 450,
            "tokens": 2741,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/managers/mining/MiningShipManagerImpl.ts": {
            "lines": 480,
            "tokens": 4215,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/managers/mining/MiningResourceIntegration.ts": {
            "lines": 301,
            "tokens": 2220,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/managers/game/techTreeManager.ts": {
            "lines": 551,
            "tokens": 3871,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/managers/game/salvageManager.ts": {
            "lines": 149,
            "tokens": 1476,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/managers/game/gameManager.ts": {
            "lines": 218,
            "tokens": 1297,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/managers/game/assetManager.ts": {
            "lines": 183,
            "tokens": 1364,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/managers/game/animationManager.ts": {
            "lines": 143,
            "tokens": 1182,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/managers/game/ParticleSystemManager.ts": {
            "lines": 254,
            "tokens": 2101,
            "sources": 1,
            "clones": 3,
            "duplicatedLines": 51,
            "duplicatedTokens": 580,
            "percentage": 20.08,
            "percentageTokens": 27.61,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/managers/game/GameLoopManager.ts": {
            "lines": 479,
            "tokens": 3380,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/managers/game/AutomationManager.ts": {
            "lines": 785,
            "tokens": 5745,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/managers/game/AsteroidFieldManager.ts": {
            "lines": 644,
            "tokens": 5639,
            "sources": 1,
            "clones": 3,
            "duplicatedLines": 25,
            "duplicatedTokens": 280,
            "percentage": 3.88,
            "percentageTokens": 4.97,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/managers/factions/factionManager.ts": {
            "lines": 186,
            "tokens": 1644,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/managers/factions/FactionRelationshipManager.ts": {
            "lines": 569,
            "tokens": 4409,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/managers/factions/FactionBehaviorManager.ts": {
            "lines": 241,
            "tokens": 1214,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/managers/exploration/ReconShipManagerImpl.ts": {
            "lines": 384,
            "tokens": 3038,
            "sources": 1,
            "clones": 2,
            "duplicatedLines": 18,
            "duplicatedTokens": 180,
            "percentage": 4.69,
            "percentageTokens": 5.92,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/managers/exploration/ExplorationManagerImpl.ts": {
            "lines": 392,
            "tokens": 2556,
            "sources": 1,
            "clones": 3,
            "duplicatedLines": 72,
            "duplicatedTokens": 538,
            "percentage": 18.37,
            "percentageTokens": 21.05,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/managers/exploration/ExplorationManager.ts": {
            "lines": 639,
            "tokens": 4342,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 18,
            "duplicatedTokens": 120,
            "percentage": 2.82,
            "percentageTokens": 2.76,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/managers/effects/ParticleSystemManager.ts": {
            "lines": 377,
            "tokens": 3417,
            "sources": 1,
            "clones": 3,
            "duplicatedLines": 51,
            "duplicatedTokens": 580,
            "percentage": 13.53,
            "percentageTokens": 16.97,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/managers/effects/EffectLifecycleManager.ts": {
            "lines": 169,
            "tokens": 1389,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/managers/combat/WarShipManagerImpl.ts": {
            "lines": 514,
            "tokens": 4643,
            "sources": 1,
            "clones": 2,
            "duplicatedLines": 24,
            "duplicatedTokens": 220,
            "percentage": 4.67,
            "percentageTokens": 4.74,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/managers/combat/ThreatAssessmentManager.ts": {
            "lines": 670,
            "tokens": 4803,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 19,
            "duplicatedTokens": 136,
            "percentage": 2.84,
            "percentageTokens": 2.83,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/managers/combat/ObjectDetectionSystem.ts": {
            "lines": 506,
            "tokens": 3712,
            "sources": 1,
            "clones": 3,
            "duplicatedLines": 45,
            "duplicatedTokens": 322,
            "percentage": 8.89,
            "percentageTokens": 8.67,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/managers/combat/EnvironmentalHazardManager.ts": {
            "lines": 949,
            "tokens": 7095,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/managers/combat/CombatMechanicsSystem.ts": {
            "lines": 807,
            "tokens": 6086,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/managers/combat/CombatManager.ts": {
            "lines": 473,
            "tokens": 2766,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/managers/colony/ColonyManagerImpl.ts": {
            "lines": 614,
            "tokens": 4932,
            "sources": 1,
            "clones": 2,
            "duplicatedLines": 26,
            "duplicatedTokens": 202,
            "percentage": 4.23,
            "percentageTokens": 4.1,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/managers/automation/GlobalAutomationManager.ts": {
            "lines": 793,
            "tokens": 5537,
            "sources": 1,
            "clones": 2,
            "duplicatedLines": 12,
            "duplicatedTokens": 188,
            "percentage": 1.51,
            "percentageTokens": 3.4,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/managers/ai/BehaviorTreeManager.ts": {
            "lines": 473,
            "tokens": 4035,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/lib/visualization/ParticleSystem.ts": {
            "lines": 982,
            "tokens": 8296,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/lib/visualization/ChartCoordinationManager.ts": {
            "lines": 230,
            "tokens": 1645,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/lib/services/ServiceRegistry.ts": {
            "lines": 221,
            "tokens": 1528,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/lib/services/BaseService.ts": {
            "lines": 113,
            "tokens": 719,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/lib/registry/ServiceRegistry.ts": {
            "lines": 326,
            "tokens": 2292,
            "sources": 1,
            "clones": 2,
            "duplicatedLines": 20,
            "duplicatedTokens": 178,
            "percentage": 6.13,
            "percentageTokens": 7.77,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/lib/patterns/Singleton.ts": {
            "lines": 75,
            "tokens": 312,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/lib/optimization/WebGLShaderManager.ts": {
            "lines": 762,
            "tokens": 4467,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/lib/optimization/RenderBatcher.ts": {
            "lines": 226,
            "tokens": 1731,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 12,
            "duplicatedTokens": 94,
            "percentage": 5.31,
            "percentageTokens": 5.43,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/lib/optimization/RenderBatcher.d.ts": {
            "lines": 39,
            "tokens": 381,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 12,
            "duplicatedTokens": 94,
            "percentage": 30.77,
            "percentageTokens": 24.67,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/lib/optimization/QuadTree.ts": {
            "lines": 169,
            "tokens": 1589,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/lib/optimization/EntityPool.ts": {
            "lines": 175,
            "tokens": 1138,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/lib/modules/ModuleEvents.ts": {
            "lines": 347,
            "tokens": 1051,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/lib/modules/BaseTypedEventEmitter.ts": {
            "lines": 105,
            "tokens": 886,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/lib/managers/ServiceRegistry.ts": {
            "lines": 311,
            "tokens": 2172,
            "sources": 1,
            "clones": 2,
            "duplicatedLines": 10,
            "duplicatedTokens": 170,
            "percentage": 3.22,
            "percentageTokens": 7.83,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/lib/managers/BaseManager.ts": {
            "lines": 411,
            "tokens": 2564,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/lib/events/UnifiedEventSystem.ts": {
            "lines": 485,
            "tokens": 3338,
            "sources": 1,
            "clones": 6,
            "duplicatedLines": 62,
            "duplicatedTokens": 616,
            "percentage": 12.78,
            "percentageTokens": 18.45,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/lib/events/ModuleEventBus.ts": {
            "lines": 173,
            "tokens": 1338,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 6,
            "duplicatedTokens": 94,
            "percentage": 3.47,
            "percentageTokens": 7.03,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/lib/events/EventEmitter.ts": {
            "lines": 535,
            "tokens": 3337,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/lib/events/EventBusTypes.ts": {
            "lines": 18,
            "tokens": 108,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/lib/events/EventBatcher.ts": {
            "lines": 303,
            "tokens": 1517,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/lib/events/BaseTypedEventEmitter.ts": {
            "lines": 89,
            "tokens": 455,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/lib/events/BaseEventEmitter.ts": {
            "lines": 145,
            "tokens": 791,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 6,
            "duplicatedTokens": 94,
            "percentage": 4.14,
            "percentageTokens": 11.88,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/lib/automation/ConditionChecker.ts": {
            "lines": 341,
            "tokens": 2194,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/lib/ai/shipMovement.ts": {
            "lines": 203,
            "tokens": 1622,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/lib/ai/shipBehavior.ts": {
            "lines": 206,
            "tokens": 1773,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/lib/ai/ResourceConsumptionPredictor.ts": {
            "lines": 456,
            "tokens": 3691,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/hooks/visualization/useChartCoordination.ts": {
            "lines": 137,
            "tokens": 1004,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/hooks/ui/useVPRSystem.ts": {
            "lines": 184,
            "tokens": 1562,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/hooks/ui/useVPRInteractivity.ts": {
            "lines": 141,
            "tokens": 1085,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/hooks/ui/useVPR.ts": {
            "lines": 96,
            "tokens": 670,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/hooks/ui/useTooltip.ts": {
            "lines": 43,
            "tokens": 378,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/hooks/ui/useTheme.ts": {
            "lines": 251,
            "tokens": 1702,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/hooks/ui/useProfilingOverlay.ts": {
            "lines": 161,
            "tokens": 1013,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/hooks/ui/useMediaQuery.ts": {
            "lines": 110,
            "tokens": 413,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/hooks/ui/useDebugOverlay.ts": {
            "lines": 394,
            "tokens": 3746,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/hooks/ui/useComponentRegistration.ts": {
            "lines": 116,
            "tokens": 474,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/hooks/ui/useComponentProfiler.ts": {
            "lines": 94,
            "tokens": 674,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/hooks/ui/useComponentLifecycle.ts": {
            "lines": 297,
            "tokens": 1645,
            "sources": 1,
            "clones": 6,
            "duplicatedLines": 90,
            "duplicatedTokens": 750,
            "percentage": 30.3,
            "percentageTokens": 45.59,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/hooks/ui/useBreakpoint.ts": {
            "lines": 152,
            "tokens": 966,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/hooks/ui/index.ts": {
            "lines": 43,
            "tokens": 250,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/hooks/ships/useShipEffects.ts": {
            "lines": 77,
            "tokens": 708,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/hooks/ships/useShipClassManager.ts": {
            "lines": 158,
            "tokens": 1255,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/hooks/ships/useShipActions.ts": {
            "lines": 139,
            "tokens": 1151,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/hooks/services/useService.ts": {
            "lines": 50,
            "tokens": 380,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/hooks/resources/useResourceTracking.ts": {
            "lines": 745,
            "tokens": 5883,
            "sources": 1,
            "clones": 6,
            "duplicatedLines": 86,
            "duplicatedTokens": 696,
            "percentage": 11.54,
            "percentageTokens": 11.83,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/hooks/resources/useResourceSystem.ts": {
            "lines": 282,
            "tokens": 1924,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/hooks/resources/useResourceState.ts": {
            "lines": 325,
            "tokens": 2005,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/hooks/performance/useSessionPerformance.ts": {
            "lines": 151,
            "tokens": 996,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/hooks/performance/useOptimizedCallback.ts": {
            "lines": 102,
            "tokens": 522,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/hooks/performance/useMemoWithDeepCompare.ts": {
            "lines": 85,
            "tokens": 391,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/hooks/modules/useSubModules.ts": {
            "lines": 274,
            "tokens": 2129,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/hooks/modules/useModuleUpgrade.ts": {
            "lines": 234,
            "tokens": 1782,
            "sources": 1,
            "clones": 3,
            "duplicatedLines": 31,
            "duplicatedTokens": 286,
            "percentage": 13.25,
            "percentageTokens": 16.05,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/hooks/modules/useModuleStatus.ts": {
            "lines": 346,
            "tokens": 2789,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 9,
            "duplicatedTokens": 86,
            "percentage": 2.6,
            "percentageTokens": 3.08,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/hooks/modules/useModuleState.ts": {
            "lines": 563,
            "tokens": 3383,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/hooks/modules/useModuleEvents.ts": {
            "lines": 201,
            "tokens": 1392,
            "sources": 1,
            "clones": 2,
            "duplicatedLines": 30,
            "duplicatedTokens": 318,
            "percentage": 14.93,
            "percentageTokens": 22.84,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/hooks/modules/useModuleAutomation.ts": {
            "lines": 726,
            "tokens": 5148,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/hooks/integration/useResourceSystemIntegration.ts": {
            "lines": 342,
            "tokens": 2626,
            "sources": 1,
            "clones": 10,
            "duplicatedLines": 92,
            "duplicatedTokens": 928,
            "percentage": 26.9,
            "percentageTokens": 35.34,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/hooks/integration/useModuleSystemIntegration.ts": {
            "lines": 283,
            "tokens": 2181,
            "sources": 1,
            "clones": 8,
            "duplicatedLines": 66,
            "duplicatedTokens": 694,
            "percentage": 23.32,
            "percentageTokens": 31.82,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/hooks/integration/useManagerRegistryIntegration.ts": {
            "lines": 310,
            "tokens": 2327,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/hooks/integration/useEventSystemIntegration.ts": {
            "lines": 188,
            "tokens": 1322,
            "sources": 1,
            "clones": 2,
            "duplicatedLines": 24,
            "duplicatedTokens": 178,
            "percentage": 12.77,
            "percentageTokens": 13.46,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/hooks/integration/index.ts": {
            "lines": 32,
            "tokens": 96,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/hooks/game/useScalingSystem.ts": {
            "lines": 75,
            "tokens": 517,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/hooks/game/useGlobalEvents.ts": {
            "lines": 45,
            "tokens": 424,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/hooks/game/useGameState.ts": {
            "lines": 418,
            "tokens": 2831,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/hooks/game/useAssets.ts": {
            "lines": 60,
            "tokens": 533,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/hooks/game/useAnimation.ts": {
            "lines": 52,
            "tokens": 410,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/hooks/factory/index.ts": {
            "lines": 37,
            "tokens": 28,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/hooks/factory/createStateHook.ts": {
            "lines": 216,
            "tokens": 1299,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/hooks/factory/createLifecycleHook.ts": {
            "lines": 312,
            "tokens": 1938,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/hooks/factory/createDataFetchHook.ts": {
            "lines": 179,
            "tokens": 1120,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/hooks/factions/useFleetAI.ts": {
            "lines": 849,
            "tokens": 8348,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 8,
            "duplicatedTokens": 97,
            "percentage": 0.94,
            "percentageTokens": 1.16,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/hooks/factions/useFactionAI.ts": {
            "lines": 109,
            "tokens": 841,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/hooks/factions/useEnemyAI.ts": {
            "lines": 233,
            "tokens": 2173,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 8,
            "duplicatedTokens": 97,
            "percentage": 3.43,
            "percentageTokens": 4.46,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/hooks/factions/useDiplomacy.ts": {
            "lines": 64,
            "tokens": 523,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/hooks/factions/useAdaptiveAI.ts": {
            "lines": 193,
            "tokens": 1807,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/hooks/events/useSystemEvents.ts": {
            "lines": 90,
            "tokens": 579,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/hooks/events/useModuleEvents.ts": {
            "lines": 28,
            "tokens": 230,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/hooks/events/useEventSubscription.ts": {
            "lines": 283,
            "tokens": 1674,
            "sources": 1,
            "clones": 2,
            "duplicatedLines": 34,
            "duplicatedTokens": 260,
            "percentage": 12.01,
            "percentageTokens": 15.53,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/hooks/events/useEventFiltering.ts": {
            "lines": 194,
            "tokens": 1297,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/hooks/events/useEventBatching.ts": {
            "lines": 283,
            "tokens": 1527,
            "sources": 1,
            "clones": 4,
            "duplicatedLines": 88,
            "duplicatedTokens": 432,
            "percentage": 31.1,
            "percentageTokens": 28.29,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/hooks/errors/useErrorHandler.ts": {
            "lines": 197,
            "tokens": 1237,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/hooks/errors/index.ts": {
            "lines": 18,
            "tokens": 62,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/hooks/combat/useCombatSystem.ts": {
            "lines": 239,
            "tokens": 1929,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/hooks/combat/useCombatAI.ts": {
            "lines": 262,
            "tokens": 2340,
            "sources": 1,
            "clones": 4,
            "duplicatedLines": 64,
            "duplicatedTokens": 602,
            "percentage": 24.43,
            "percentageTokens": 25.73,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/hooks/automation/useGlobalAutomation.ts": {
            "lines": 401,
            "tokens": 2757,
            "sources": 1,
            "clones": 2,
            "duplicatedLines": 32,
            "duplicatedTokens": 230,
            "percentage": 7.98,
            "percentageTokens": 8.34,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/hooks/automation/useAutomation.ts": {
            "lines": 109,
            "tokens": 804,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/factories/ships/ShipClassFactory.ts": {
            "lines": 126,
            "tokens": 960,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/errorHandling/utils/migration.ts": {
            "lines": 179,
            "tokens": 1273,
            "sources": 1,
            "clones": 2,
            "duplicatedLines": 16,
            "duplicatedTokens": 210,
            "percentage": 8.94,
            "percentageTokens": 16.5,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/effects/util_effects/effectUtils.ts": {
            "lines": 268,
            "tokens": 1705,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/effects/types_effects/shipEffects.ts": {
            "lines": 95,
            "tokens": 688,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/effects/types_effects/WeaponEffects.ts": {
            "lines": 63,
            "tokens": 283,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/effects/types_effects/EnvironmentalHazardEffects.ts": {
            "lines": 154,
            "tokens": 734,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/effects/types_effects/EffectTypes.ts": {
            "lines": 135,
            "tokens": 609,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/effects/types_effects/AdvancedWeaponEffects.ts": {
            "lines": 265,
            "tokens": 1611,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/effects/component_effects/VisualEffect.ts": {
            "lines": 74,
            "tokens": 694,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/effects/component_effects/ShieldImpactEffect.ts": {
            "lines": 273,
            "tokens": 2519,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/effects/component_effects/EngineTrailEffect.ts": {
            "lines": 183,
            "tokens": 1760,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/config/ships/spaceRatsShips.ts": {
            "lines": 808,
            "tokens": 5337,
            "sources": 1,
            "clones": 6,
            "duplicatedLines": 86,
            "duplicatedTokens": 610,
            "percentage": 10.64,
            "percentageTokens": 11.43,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/config/ships/shipStats.ts": {
            "lines": 55,
            "tokens": 405,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/config/ships/lostNovaShips.ts": {
            "lines": 809,
            "tokens": 5341,
            "sources": 1,
            "clones": 12,
            "duplicatedLines": 175,
            "duplicatedTokens": 1239,
            "percentage": 21.63,
            "percentageTokens": 23.2,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/config/ships/index.ts": {
            "lines": 14,
            "tokens": 132,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/config/ships/equatorHorizonShips.ts": {
            "lines": 949,
            "tokens": 6336,
            "sources": 1,
            "clones": 6,
            "duplicatedLines": 93,
            "duplicatedTokens": 653,
            "percentage": 9.8,
            "percentageTokens": 10.31,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/config/resource/ResourceConfig.ts": {
            "lines": 165,
            "tokens": 1619,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/config/modules/upgradePathsConfig.ts": {
            "lines": 327,
            "tokens": 2041,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/config/modules/defaultModuleConfigs.ts": {
            "lines": 220,
            "tokens": 1709,
            "sources": 1,
            "clones": 6,
            "duplicatedLines": 60,
            "duplicatedTokens": 522,
            "percentage": 27.27,
            "percentageTokens": 30.54,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/config/factions/factions.ts": {
            "lines": 110,
            "tokens": 758,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/config/factions/factionConfig.ts": {
            "lines": 192,
            "tokens": 1265,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/config/combat/weaponConfig.ts": {
            "lines": 670,
            "tokens": 4355,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/config/combat/combatConfig.ts": {
            "lines": 216,
            "tokens": 1684,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/config/buildings/defaultBuildings.ts": {
            "lines": 86,
            "tokens": 742,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/config/automation/hangarRules.ts": {
            "lines": 247,
            "tokens": 1483,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/config/automation/explorationRules.ts": {
            "lines": 193,
            "tokens": 1127,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/config/automation/combatRules.ts": {
            "lines": 262,
            "tokens": 1556,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/config/automation/colonyRules.ts": {
            "lines": 447,
            "tokens": 2764,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/ui/tooltip-context.ts": {
            "lines": 23,
            "tokens": 237,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/ui/index.ts": {
            "lines": 103,
            "tokens": 349,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/workers/worker.ts": {
            "lines": 79,
            "tokens": 743,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/workers/combatWorker.ts": {
            "lines": 217,
            "tokens": 1650,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/workers/ResourceFlowWorker.ts": {
            "lines": 496,
            "tokens": 3961,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/workers/DataProcessingWorker.ts": {
            "lines": 340,
            "tokens": 2692,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/visualization/index.ts": {
            "lines": 57,
            "tokens": 67,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/utils/vpr-diagnostic.ts": {
            "lines": 138,
            "tokens": 868,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/utils/typeConversions.ts": {
            "lines": 362,
            "tokens": 2880,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/utils/preload.ts": {
            "lines": 58,
            "tokens": 441,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/utils/idGenerator.ts": {
            "lines": 51,
            "tokens": 389,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/utils/geometry.ts": {
            "lines": 107,
            "tokens": 1070,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/utils/cn.ts": {
            "lines": 12,
            "tokens": 63,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/utils/ResourceTypeMigration.ts": {
            "lines": 252,
            "tokens": 1427,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/utils/ResourceTypeConverter.ts": {
            "lines": 337,
            "tokens": 2216,
            "sources": 1,
            "clones": 2,
            "duplicatedLines": 40,
            "duplicatedTokens": 327,
            "percentage": 11.87,
            "percentageTokens": 14.76,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/types/types-fix.d.ts": {
            "lines": 29,
            "tokens": 187,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/types/test-utils.d.ts": {
            "lines": 44,
            "tokens": 494,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/types/global.d.ts": {
            "lines": 43,
            "tokens": 235,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 9,
            "duplicatedTokens": 117,
            "percentage": 20.93,
            "percentageTokens": 49.79,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/types/geometry.ts": {
            "lines": 65,
            "tokens": 221,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/types/declarations.d.ts": {
            "lines": 14,
            "tokens": 113,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/types/TypeUtils.ts": {
            "lines": 235,
            "tokens": 1793,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/tests/vitest.d.ts": {
            "lines": 10,
            "tokens": 79,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/tests/types.d.ts": {
            "lines": 32,
            "tokens": 141,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/tests/setupTests.ts": {
            "lines": 11,
            "tokens": 39,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/tests/setup.ts": {
            "lines": 80,
            "tokens": 555,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/styles/themeUtils.ts": {
            "lines": 276,
            "tokens": 1744,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/styles/mediaQueries.ts": {
            "lines": 191,
            "tokens": 862,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 6,
            "duplicatedTokens": 71,
            "percentage": 3.14,
            "percentageTokens": 8.24,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/services/WorkerService.ts": {
            "lines": 303,
            "tokens": 2665,
            "sources": 1,
            "clones": 2,
            "duplicatedLines": 20,
            "duplicatedTokens": 202,
            "percentage": 6.6,
            "percentageTokens": 7.58,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/services/WebGLService.ts": {
            "lines": 824,
            "tokens": 6118,
            "sources": 1,
            "clones": 2,
            "duplicatedLines": 32,
            "duplicatedTokens": 290,
            "percentage": 3.88,
            "percentageTokens": 4.74,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/services/RecoveryService.ts": {
            "lines": 189,
            "tokens": 1448,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 10,
            "duplicatedTokens": 107,
            "percentage": 5.29,
            "percentageTokens": 7.39,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/services/RealTimeDataService.ts": {
            "lines": 358,
            "tokens": 3477,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/services/EventPropagationService.ts": {
            "lines": 234,
            "tokens": 2029,
            "sources": 1,
            "clones": 4,
            "duplicatedLines": 44,
            "duplicatedTokens": 489,
            "percentage": 18.8,
            "percentageTokens": 24.1,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/services/ErrorLoggingService.ts": {
            "lines": 217,
            "tokens": 1691,
            "sources": 1,
            "clones": 2,
            "duplicatedLines": 12,
            "duplicatedTokens": 156,
            "percentage": 5.53,
            "percentageTokens": 9.23,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/services/DataProcessingService.ts": {
            "lines": 240,
            "tokens": 1755,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/services/ComponentRegistryService.ts": {
            "lines": 223,
            "tokens": 1946,
            "sources": 1,
            "clones": 3,
            "duplicatedLines": 30,
            "duplicatedTokens": 340,
            "percentage": 13.45,
            "percentageTokens": 17.47,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/services/AnomalyDetectionService.ts": {
            "lines": 169,
            "tokens": 1583,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/services/APIService.ts": {
            "lines": 285,
            "tokens": 2453,
            "sources": 1,
            "clones": 4,
            "duplicatedLines": 38,
            "duplicatedTokens": 320,
            "percentage": 13.33,
            "percentageTokens": 13.05,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/resource/ResourceSystem.ts": {
            "lines": 553,
            "tokens": 3793,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/registry/ResourceRegistryIntegration.ts": {
            "lines": 363,
            "tokens": 1966,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/registry/ResourceRegistry.ts": {
            "lines": 891,
            "tokens": 5743,
            "sources": 1,
            "clones": 4,
            "duplicatedLines": 52,
            "duplicatedTokens": 448,
            "percentage": 5.84,
            "percentageTokens": 7.8,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/managers/ManagerRegistry.ts": {
            "lines": 246,
            "tokens": 1458,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/initialization/serviceRegistration.ts": {
            "lines": 153,
            "tokens": 686,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 9,
            "duplicatedTokens": 117,
            "percentage": 5.88,
            "percentageTokens": 17.06,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/initialization/moduleUpgradeInit.ts": {
            "lines": 13,
            "tokens": 72,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/initialization/moduleFrameworkInit.ts": {
            "lines": 430,
            "tokens": 2916,
            "sources": 1,
            "clones": 4,
            "duplicatedLines": 74,
            "duplicatedTokens": 654,
            "percentage": 17.21,
            "percentageTokens": 22.43,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/initialization/gameSystemsIntegration.ts": {
            "lines": 575,
            "tokens": 4022,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/initialization/eventSystemInit.ts": {
            "lines": 245,
            "tokens": 1635,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/initialization/automationSystemInit.ts": {
            "lines": 173,
            "tokens": 1088,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/hooks/useWorker.ts": {
            "lines": 78,
            "tokens": 686,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/hooks/useWebGL.ts": {
            "lines": 144,
            "tokens": 1338,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/hooks/useTypedApi.ts": {
            "lines": 445,
            "tokens": 3252,
            "sources": 1,
            "clones": 6,
            "duplicatedLines": 98,
            "duplicatedTokens": 826,
            "percentage": 22.02,
            "percentageTokens": 25.4,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/hooks/useStreamedData.ts": {
            "lines": 97,
            "tokens": 937,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/hooks/useRealTimeData.ts": {
            "lines": 130,
            "tokens": 1123,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/hooks/usePaginatedData.ts": {
            "lines": 119,
            "tokens": 1056,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/hooks/useMemoryManager.ts": {
            "lines": 397,
            "tokens": 2613,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/hooks/useGPUCompute.ts": {
            "lines": 138,
            "tokens": 1294,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/errorHandling/index.ts": {
            "lines": 105,
            "tokens": 229,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/contexts/ThresholdTypes.ts": {
            "lines": 106,
            "tokens": 901,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/config/factions.ts": {
            "lines": 160,
            "tokens": 977,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/config/ShipBlueprints.ts": {
            "lines": 329,
            "tokens": 2392,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/config/OfficerConfig.ts": {
            "lines": 93,
            "tokens": 516,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/api/TypeSafeApiClient.ts": {
            "lines": 498,
            "tokens": 3559,
            "sources": 1,
            "clones": 8,
            "duplicatedLines": 110,
            "duplicatedTokens": 1152,
            "percentage": 22.09,
            "percentageTokens": 32.37,
            "newDuplicatedLines": 0,
            "newClones": 0
          }
        },
        "total": {
          "lines": 104512,
          "tokens": 732933,
          "sources": 367,
          "clones": 154,
          "duplicatedLines": 2210,
          "duplicatedTokens": 18839,
          "percentage": 2.11,
          "percentageTokens": 2.57,
          "newDuplicatedLines": 0,
          "newClones": 0
        }
      },
      "css": {
        "sources": {
          "src/components/ui/visualization/FlowDiagram.tsx": {
            "lines": 11,
            "tokens": 33,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/ui/performance/VisualizationPerformanceComparison.tsx": {
            "lines": 154,
            "tokens": 513,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/ui/performance/UserBehaviorCorrelationView.tsx": {
            "lines": 153,
            "tokens": 557,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/ui/performance/PerformanceRegressionReport.tsx": {
            "lines": 147,
            "tokens": 498,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 26,
            "duplicatedTokens": 93,
            "percentage": 17.69,
            "percentageTokens": 18.67,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/ui/performance/PerformanceBudgetTracker.tsx": {
            "lines": 200,
            "tokens": 669,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/ui/performance/PerformanceBenchmarkDashboard.tsx": {
            "lines": 231,
            "tokens": 798,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/ui/performance/OptimizedFlowDiagram.tsx": {
            "lines": 57,
            "tokens": 214,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/ui/performance/MLPerformancePrediction.tsx": {
            "lines": 136,
            "tokens": 454,
            "sources": 1,
            "clones": 2,
            "duplicatedLines": 48,
            "duplicatedTokens": 142,
            "percentage": 35.29,
            "percentageTokens": 31.28,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/ui/performance/InterpolationMemoizationDemo.tsx": {
            "lines": 202,
            "tokens": 699,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/ui/performance/DynamicBudgetAdjustmentPanel.tsx": {
            "lines": 350,
            "tokens": 1188,
            "sources": 1,
            "clones": 1,
            "duplicatedLines": 26,
            "duplicatedTokens": 93,
            "percentage": 7.43,
            "percentageTokens": 7.83,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/ui/performance/D3PerformanceProfilerView.tsx": {
            "lines": 100,
            "tokens": 330,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/ui/performance/AnimationPerformanceProfilerDemo.tsx": {
            "lines": 352,
            "tokens": 1236,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/ui/performance/AnimationFrameManagerDemo.tsx": {
            "lines": 273,
            "tokens": 913,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/ui/performance/AdvancedMetricAnalysis.tsx": {
            "lines": 161,
            "tokens": 537,
            "sources": 1,
            "clones": 2,
            "duplicatedLines": 48,
            "duplicatedTokens": 142,
            "percentage": 29.81,
            "percentageTokens": 26.44,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/pages/performance/MultitabPerformanceTestPage.tsx": {
            "lines": 109,
            "tokens": 336,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/pages/performance/LongSessionMemoryPage.tsx": {
            "lines": 353,
            "tokens": 1293,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/components/performance/LongSessionMemoryVisualizer.tsx": {
            "lines": 222,
            "tokens": 796,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          },
          "src/pages/PerformanceAnalysisDashboard.tsx": {
            "lines": 130,
            "tokens": 482,
            "sources": 1,
            "clones": 0,
            "duplicatedLines": 0,
            "duplicatedTokens": 0,
            "percentage": 0,
            "percentageTokens": 0,
            "newDuplicatedLines": 0,
            "newClones": 0
          }
        },
        "total": {
          "lines": 3341,
          "tokens": 11546,
          "sources": 18,
          "clones": 3,
          "duplicatedLines": 74,
          "duplicatedTokens": 235,
          "percentage": 2.21,
          "percentageTokens": 2.04,
          "newDuplicatedLines": 0,
          "newClones": 0
        }
      }
    },
    "total": {
      "lines": 256281,
      "tokens": 1903627,
      "sources": 1066,
      "clones": 442,
      "duplicatedLines": 7649,
      "duplicatedTokens": 65334,
      "percentage": 2.98,
      "percentageTokens": 3.43,
      "newDuplicatedLines": 0,
      "newClones": 0
    }
  },
  "duplicates": [
    {
      "format": "tsx",
      "lines": 9,
      "fragment": ") * 100}%` }}\n            />\n          </div>\n        </div>\n\n        <div>\n          <div className=\"mb-1 flex justify-between text-sm\">\n            <span className=\"text-gray-400\">Shield Power</span>\n            <span className=\"text-gray-300\">{Math.round((shield",
      "tokens": 0,
      "firstFile": {
        "name": "src/components/ships/player/variants/warships/StarSchooner.tsx",
        "start": 71,
        "end": 79,
        "startLoc": {
          "line": 71,
          "column": 9,
          "position": 558
        },
        "endLoc": {
          "line": 79,
          "column": 7,
          "position": 633
        }
      },
      "secondFile": {
        "name": "src/components/ships/player/variants/warships/WarShip.tsx",
        "start": 122,
        "end": 131,
        "startLoc": {
          "line": 122,
          "column": 8,
          "position": 1058
        },
        "endLoc": {
          "line": 131,
          "column": 5,
          "position": 1135
        }
      }
    },
    {
      "format": "tsx",
      "lines": 16,
      "fragment": ">\n              <div className=\"mb-2 flex items-center justify-between\">\n                <div className=\"text-sm font-medium text-white\">{weapon.name}</div>\n                <div\n                  className={`text-xs ${\n                    weapon.status === 'ready'\n                      ? 'text-green-400'\n                      : weapon.status === 'charging'\n                        ? 'text-yellow-400'\n                        : 'text-red-400'\n                  }`}\n                >\n                  {weapon.status.charAt(0).toUpperCase() + weapon.status.slice(1)}\n                </div>\n              </div>\n              <div className=\"text-xs text-gray-400",
      "tokens": 0,
      "firstFile": {
        "name": "src/components/ships/player/variants/warships/StarSchooner.tsx",
        "start": 104,
        "end": 119,
        "startLoc": {
          "line": 104,
          "column": 13,
          "position": 842
        },
        "endLoc": {
          "line": 119,
          "column": 22,
          "position": 960
        }
      },
      "secondFile": {
        "name": "src/components/ships/player/variants/warships/WarShip.tsx",
        "start": 148,
        "end": 163,
        "startLoc": {
          "line": 148,
          "column": 2,
          "position": 1308
        },
        "endLoc": {
          "line": 163,
          "column": 56,
          "position": 1426
        }
      }
    },
    {
      "format": "javascript",
      "lines": 59,
      "fragment": "={`rounded-full px-3 py-1 text-sm ${\n            status === 'engaging'\n              ? 'bg-red-900/50 text-red-400'\n              : status === 'retreating'\n                ? 'bg-yellow-900/50 text-yellow-400'\n                : status === 'damaged'\n                  ? 'bg-red-900/50 text-red-400'\n                  : 'bg-green-900/50 text-green-400'\n          }`}\n        >\n          {status.charAt(0).toUpperCase() + status.slice(1)}\n        </div>\n      </div>\n\n      {/* Combat Status */}\n      <div className=\"mb-6 grid grid-cols-2 gap-4\">\n        <div>\n          <div className=\"mb-1 flex justify-between text-sm\">\n            <span className=\"text-gray-400\">Hull Integrity</span>\n            <span className={hull < maxHull * 0.3 ? 'text-red-400' : 'text-gray-300'}>\n              {Math.round((hull / maxHull) * 100)}%\n            </span>\n          </div>\n          <div className=\"h-2 overflow-hidden rounded-full bg-gray-700\">\n            <div\n              className={`h-full rounded-full transition-all ${\n                hull < maxHull * 0.3 ? 'bg-red-500' : 'bg-green-500'\n              }`}\n              style={{ width: `${(hull / maxHull) * 100}%` }}\n            />\n          </div>\n        </div>\n\n        <div>\n          <div className=\"mb-1 flex justify-between text-sm\">\n            <span className=\"text-gray-400\">Shield Power</span>\n            <span className=\"text-gray-300\">{Math.round((shield / maxShield) * 100)}%</span>\n          </div>\n          <div className=\"h-2 overflow-hidden rounded-full bg-gray-700\">\n            <div\n              className=\"h-full rounded-full bg-blue-500 transition-all\"\n              style={{ width: `${(shield / maxShield) * 100}%` }}\n            />\n          </div>\n        </div>\n      </div>\n\n      {/* Weapon Systems */}\n      <div className=\"mb-6 space-y-4\">\n        <h4 className=\"text-sm font-medium text-gray-300\">Machine Guns</h4>\n        <div className=\"grid grid-cols-2 gap-3\">\n          {weapons.map(weapon => (\n            <button\n              key={weapon.id}\n              onClick={() => onFire(weapon.id)}\n              disabled={weapon.status !== 'ready'}\n              className={`rounded-lg p-3 transition-colors ${\n                weapon.status === 'ready'\n                  ? 'border border-cyan-500/30 bg-cyan-500/20 hover:bg-cyan-500/30'",
      "tokens": 0,
      "firstFile": {
        "name": "src/components/ships/player/variants/warships/Spitflare.tsx",
        "start": 41,
        "end": 99,
        "startLoc": {
          "line": 41,
          "column": 10,
          "position": 301
        },
        "endLoc": {
          "line": 99,
          "column": 64,
          "position": 809
        }
      },
      "secondFile": {
        "name": "src/components/ships/player/variants/warships/StarSchooner.tsx",
        "start": 43,
        "end": 101,
        "startLoc": {
          "line": 43,
          "column": 10,
          "position": 322
        },
        "endLoc": {
          "line": 101,
          "column": 70,
          "position": 832
        }
      }
    },
    {
      "format": "javascript",
      "lines": 32,
      "fragment": "\n                  : 'cursor-not-allowed border border-gray-600/30 bg-gray-700/50'\n              }`}\n            >\n              <div className=\"mb-2 flex items-center justify-between\">\n                <div className=\"text-sm font-medium text-white\">{weapon.name}</div>\n                <div\n                  className={`text-xs ${\n                    weapon.status === 'ready'\n                      ? 'text-green-400'\n                      : weapon.status === 'charging'\n                        ? 'text-yellow-400'\n                        : 'text-red-400'\n                  }`}\n                >\n                  {weapon.status.charAt(0).toUpperCase() + weapon.status.slice(1)}\n                </div>\n              </div>\n              <div className=\"text-xs text-gray-400\">Damage: {weapon.damage}</div>\n            </button>\n          ))}\n        </div>\n      </div>\n\n      {/* Combat Actions */}\n      <div className=\"grid grid-cols-2 gap-3\">\n        <button\n          onClick={() => onFire(weapons[0].id)}\n          disabled={!weapons.some(w => w.status === 'ready')}\n          className={`flex items-center justify-center space-x-2 rounded-lg px-4 py-2 text-sm ${\n            weapons.some(w => w.status === 'ready')\n              ? 'bg-cyan-500/20 text-cyan-200 hover:bg-cyan-500/30'",
      "tokens": 0,
      "firstFile": {
        "name": "src/components/ships/player/variants/warships/Spitflare.tsx",
        "start": 99,
        "end": 130,
        "startLoc": {
          "line": 99,
          "column": 64,
          "position": 810
        },
        "endLoc": {
          "line": 130,
          "column": 52,
          "position": 1052
        }
      },
      "secondFile": {
        "name": "src/components/ships/player/variants/warships/StarSchooner.tsx",
        "start": 101,
        "end": 132,
        "startLoc": {
          "line": 101,
          "column": 70,
          "position": 833
        },
        "endLoc": {
          "line": 132,
          "column": 58,
          "position": 1075
        }
      }
    },
    {
      "format": "tsx",
      "lines": 53,
      "fragment": "</div>\n        </div>\n        <div\n          className={`rounded-full px-3 py-1 text-sm ${\n            status === 'engaging'\n              ? 'bg-red-900/50 text-red-400'\n              : status === 'retreating'\n                ? 'bg-yellow-900/50 text-yellow-400'\n                : status === 'damaged'\n                  ? 'bg-red-900/50 text-red-400'\n                  : 'bg-green-900/50 text-green-400'\n          }`}\n        >\n          {status.charAt(0).toUpperCase() + status.slice(1)}\n        </div>\n      </div>\n\n      {/* Combat Status */}\n      <div className=\"mb-6 grid grid-cols-2 gap-4\">\n        <div>\n          <div className=\"mb-1 flex justify-between text-sm\">\n            <span className=\"text-gray-400\">Hull Integrity</span>\n            <span className={hull < maxHull * 0.3 ? 'text-red-400' : 'text-gray-300'}>\n              {Math.round((hull / maxHull) * 100)}%\n            </span>\n          </div>\n          <div className=\"h-2 overflow-hidden rounded-full bg-gray-700\">\n            <div\n              className={`h-full rounded-full transition-all ${\n                hull < maxHull * 0.3 ? 'bg-red-500' : 'bg-green-500'\n              }`}\n              style={{ width: `${(hull / maxHull) * 100}%` }}\n            />\n          </div>\n        </div>\n\n        <div>\n          <div className=\"mb-1 flex justify-between text-sm\">\n            <span className=\"text-gray-400\">Shield Power</span>\n            <span className=\"text-gray-300\">{Math.round((shield / maxShield) * 100)}%</span>\n          </div>\n          <div className=\"h-2 overflow-hidden rounded-full bg-gray-700\">\n            <div\n              className=\"h-full rounded-full bg-blue-500 transition-all\"\n              style={{ width: `${(shield / maxShield) * 100}%` }}\n            />\n          </div>\n        </div>\n      </div>\n\n      {/* Weapon Systems */}\n      <div className=\"mb-6 space-y-4\">\n        <h4 className=\"text-sm font-medium text-gray-300\">Machine",
      "tokens": 0,
      "firstFile": {
        "name": "src/components/ships/player/variants/warships/Spitflare.tsx",
        "start": 38,
        "end": 90,
        "startLoc": {
          "line": 38,
          "column": 8,
          "position": 287
        },
        "endLoc": {
          "line": 90,
          "column": 8,
          "position": 726
        }
      },
      "secondFile": {
        "name": "src/components/ships/player/variants/warships/StarSchooner.tsx",
        "start": 40,
        "end": 92,
        "startLoc": {
          "line": 40,
          "column": 7,
          "position": 308
        },
        "endLoc": {
          "line": 92,
          "column": 5,
          "position": 747
        }
      }
    },
    {
      "format": "tsx",
      "lines": 46,
      "fragment": "</h4>\n        <div className=\"grid grid-cols-2 gap-3\">\n          {weapons.map(weapon => (\n            <button\n              key={weapon.id}\n              onClick={() => onFire(weapon.id)}\n              disabled={weapon.status !== 'ready'}\n              className={`rounded-lg p-3 transition-colors ${\n                weapon.status === 'ready'\n                  ? 'border border-cyan-500/30 bg-cyan-500/20 hover:bg-cyan-500/30'\n                  : 'cursor-not-allowed border border-gray-600/30 bg-gray-700/50'\n              }`}\n            >\n              <div className=\"mb-2 flex items-center justify-between\">\n                <div className=\"text-sm font-medium text-white\">{weapon.name}</div>\n                <div\n                  className={`text-xs ${\n                    weapon.status === 'ready'\n                      ? 'text-green-400'\n                      : weapon.status === 'charging'\n                        ? 'text-yellow-400'\n                        : 'text-red-400'\n                  }`}\n                >\n                  {weapon.status.charAt(0).toUpperCase() + weapon.status.slice(1)}\n                </div>\n              </div>\n              <div className=\"text-xs text-gray-400\">Damage: {weapon.damage}</div>\n            </button>\n          ))}\n        </div>\n      </div>\n\n      {/* Combat Actions */}\n      <div className=\"grid grid-cols-2 gap-3\">\n        <button\n          onClick={() => onFire(weapons[0].id)}\n          disabled={!weapons.some(w => w.status === 'ready')}\n          className={`flex items-center justify-center space-x-2 rounded-lg px-4 py-2 text-sm ${\n            weapons.some(w => w.status === 'ready')\n              ? 'bg-cyan-500/20 text-cyan-200 hover:bg-cyan-500/30'\n              : 'cursor-not-allowed bg-gray-700 text-gray-500'\n          }`}\n        >\n          <Crosshair className=\"h-4 w-4\" />\n          <span>Fire Weapons",
      "tokens": 0,
      "firstFile": {
        "name": "src/components/ships/player/variants/warships/Spitflare.tsx",
        "start": 90,
        "end": 135,
        "startLoc": {
          "line": 90,
          "column": 5,
          "position": 729
        },
        "endLoc": {
          "line": 135,
          "column": 8,
          "position": 1082
        }
      },
      "secondFile": {
        "name": "src/components/ships/player/variants/warships/StarSchooner.tsx",
        "start": 92,
        "end": 137,
        "startLoc": {
          "line": 92,
          "column": 7,
          "position": 752
        },
        "endLoc": {
          "line": 137,
          "column": 5,
          "position": 1105
        }
      }
    },
    {
      "format": "tsx",
      "lines": 8,
      "fragment": "{/* Ship Header */}\n      <div className=\"mb-6 flex items-start justify-between\">\n        <div>\n          <h3 className=\"text-lg font-medium text-white\">{ship.name}</h3>\n          <div className=\"flex items-center text-sm text-gray-400\">\n            <span>Tier {ship.tier}</span>\n            <span className=\"mx-2\">•</span>\n            <span className=\"capitalize\">{ship.type",
      "tokens": 0,
      "firstFile": {
        "name": "src/components/ships/player/variants/warships/PlayerWarShipCombat.tsx",
        "start": 65,
        "end": 72,
        "startLoc": {
          "line": 65,
          "column": 7,
          "position": 484
        },
        "endLoc": {
          "line": 72,
          "column": 5,
          "position": 577
        }
      },
      "secondFile": {
        "name": "src/components/ships/player/variants/warships/WarShip.tsx",
        "start": 83,
        "end": 90,
        "startLoc": {
          "line": 83,
          "column": 7,
          "position": 682
        },
        "endLoc": {
          "line": 90,
          "column": 7,
          "position": 775
        }
      }
    },
    {
      "format": "tsx",
      "lines": 11,
      "fragment": "status.slice(1)}\n        </div>\n      </div>\n\n      {/* Combat Status */}\n      <div className=\"mb-6 grid grid-cols-2 gap-4\">\n        <div>\n          <div className=\"mb-1 flex justify-between text-sm\">\n            <span className=\"text-gray-400\">Hull Integrity</span>\n            <span className={ship.hull < ship.maxHull * 0.3 ? 'text-red-400' : 'text-gray-300'}>\n              {Math.round((ship",
      "tokens": 0,
      "firstFile": {
        "name": "src/components/ships/player/variants/warships/PlayerWarShipCombat.tsx",
        "start": 86,
        "end": 96,
        "startLoc": {
          "line": 86,
          "column": 2,
          "position": 678
        },
        "endLoc": {
          "line": 96,
          "column": 5,
          "position": 781
        }
      },
      "secondFile": {
        "name": "src/components/ships/player/variants/warships/StarSchooner.tsx",
        "start": 53,
        "end": 63,
        "startLoc": {
          "line": 53,
          "column": 2,
          "position": 380
        },
        "endLoc": {
          "line": 63,
          "column": 5,
          "position": 479
        }
      }
    },
    {
      "format": "tsx",
      "lines": 41,
      "fragment": "}\n      <div className=\"mb-6 grid grid-cols-2 gap-4\">\n        <div>\n          <div className=\"mb-1 flex justify-between text-sm\">\n            <span className=\"text-gray-400\">Hull Integrity</span>\n            <span className={ship.hull < ship.maxHull * 0.3 ? 'text-red-400' : 'text-gray-300'}>\n              {Math.round((ship.hull / ship.maxHull) * 100)}%\n            </span>\n          </div>\n          <div className=\"h-2 overflow-hidden rounded-full bg-gray-700\">\n            <div\n              className={`h-full rounded-full transition-all ${\n                ship.hull < ship.maxHull * 0.3 ? 'bg-red-500' : 'bg-green-500'\n              }`}\n              style={{ width: `${(ship.hull / ship.maxHull) * 100}%` }}\n            />\n          </div>\n        </div>\n\n        <div>\n          <div className=\"mb-1 flex justify-between text-sm\">\n            <span className=\"text-gray-400\">Shield Power</span>\n            <span className=\"text-gray-300\">\n              {Math.round((ship.shield / ship.maxShield) * 100)}%\n            </span>\n          </div>\n          <div className=\"h-2 overflow-hidden rounded-full bg-gray-700\">\n            <div\n              className=\"h-full rounded-full bg-blue-500 transition-all\"\n              style={{ width: `${(ship.shield / ship.maxShield) * 100}%` }}\n            />\n          </div>\n        </div>\n      </div>\n\n      {/* Weapon Systems */}\n      <div className=\"mb-6 space-y-4\">\n        <h4 className=\"text-sm font-medium text-gray-300\">Weapon Systems</h4>\n        <div className=\"grid grid-cols-2 gap-3\">\n          {ship.weapons.map(weapon => (\n            <",
      "tokens": 0,
      "firstFile": {
        "name": "src/components/ships/player/variants/warships/PlayerWarShipCombat.tsx",
        "start": 90,
        "end": 130,
        "startLoc": {
          "line": 90,
          "column": 20,
          "position": 700
        },
        "endLoc": {
          "line": 130,
          "column": 2,
          "position": 1106
        }
      },
      "secondFile": {
        "name": "src/components/ships/player/variants/warships/WarShip.tsx",
        "start": 108,
        "end": 148,
        "startLoc": {
          "line": 108,
          "column": 27,
          "position": 886
        },
        "endLoc": {
          "line": 148,
          "column": 2,
          "position": 1292
        }
      }
    },
    {
      "format": "tsx",
      "lines": 19,
      "fragment": "<div className=\"mb-2 flex items-center justify-between\">\n                <div className=\"text-sm font-medium text-white\">{weapon.name}</div>\n                <div\n                  className={`text-xs ${\n                    weapon.status === 'ready'\n                      ? 'text-green-400'\n                      : weapon.status === 'charging'\n                        ? 'text-yellow-400'\n                        : 'text-red-400'\n                  }`}\n                >\n                  {weapon.status.charAt(0).toUpperCase() + weapon.status.slice(1)}\n                </div>\n              </div>\n              <div className=\"flex items-center justify-between text-xs text-gray-400\">\n                <span>Range: {weapon.range}ly</span>\n                <span>DMG: {weapon.damage}</span>\n              </div>\n            </button",
      "tokens": 0,
      "firstFile": {
        "name": "src/components/ships/player/variants/warships/PlayerWarShipCombat.tsx",
        "start": 140,
        "end": 158,
        "startLoc": {
          "line": 140,
          "column": 15,
          "position": 1196
        },
        "endLoc": {
          "line": 158,
          "column": 7,
          "position": 1355
        }
      },
      "secondFile": {
        "name": "src/components/ships/player/variants/warships/WarShip.tsx",
        "start": 149,
        "end": 167,
        "startLoc": {
          "line": 149,
          "column": 15,
          "position": 1311
        },
        "endLoc": {
          "line": 167,
          "column": 4,
          "position": 1470
        }
      }
    },
    {
      "format": "tsx",
      "lines": 12,
      "fragment": ">\n          ))}\n        </div>\n      </div>\n\n      {/* Special Abilities */}\n      {ship.specialAbilities && ship.specialAbilities.length > 0 && (\n        <div className=\"mb-6\">\n          <h4 className=\"mb-3 text-sm font-medium text-gray-300\">Special Abilities</h4>\n          <div className=\"space-y-2\">\n            {ship.specialAbilities.map(ability => (\n              <button",
      "tokens": 0,
      "firstFile": {
        "name": "src/components/ships/player/variants/warships/PlayerWarShipCombat.tsx",
        "start": 158,
        "end": 169,
        "startLoc": {
          "line": 158,
          "column": 7,
          "position": 1356
        },
        "endLoc": {
          "line": 169,
          "column": 7,
          "position": 1456
        }
      },
      "secondFile": {
        "name": "src/components/ships/player/variants/warships/WarShip.tsx",
        "start": 167,
        "end": 178,
        "startLoc": {
          "line": 167,
          "column": 4,
          "position": 1471
        },
        "endLoc": {
          "line": 178,
          "column": 4,
          "position": 1571
        }
      }
    },
    {
      "format": "tsx",
      "lines": 16,
      "fragment": "<Crosshair className=\"h-4 w-4\" />\n          <span>Fire Weapons</span>\n        </button>\n        <button\n          onClick={onRetreat}\n          disabled={ship.status === 'damaged'}\n          className={`flex items-center justify-center space-x-2 rounded-lg bg-gray-700 px-4 py-2 text-sm hover:bg-gray-600 ${\n            ship.status === 'damaged' ? 'cursor-not-allowed opacity-50' : ''\n          }`}\n        >\n          <Shield className=\"h-4 w-4\" />\n          <span>Retreat</span>\n        </button>\n      </div>\n\n      {",
      "tokens": 0,
      "firstFile": {
        "name": "src/components/ships/player/variants/warships/PlayerWarShipCombat.tsx",
        "start": 205,
        "end": 220,
        "startLoc": {
          "line": 205,
          "column": 11,
          "position": 1773
        },
        "endLoc": {
          "line": 220,
          "column": 2,
          "position": 1880
        }
      },
      "secondFile": {
        "name": "src/components/ships/player/variants/warships/Spitflare.tsx",
        "start": 134,
        "end": 148,
        "startLoc": {
          "line": 134,
          "column": 11,
          "position": 1065
        },
        "endLoc": {
          "line": 148,
          "column": 3,
          "position": 1167
        }
      }
    },
    {
      "format": "javascript",
      "lines": 59,
      "fragment": "={`rounded-full px-3 py-1 text-sm ${\n            status === 'engaging'\n              ? 'bg-red-900/50 text-red-400'\n              : status === 'retreating'\n                ? 'bg-yellow-900/50 text-yellow-400'\n                : status === 'damaged'\n                  ? 'bg-red-900/50 text-red-400'\n                  : 'bg-green-900/50 text-green-400'\n          }`}\n        >\n          {status.charAt(0).toUpperCase() + status.slice(1)}\n        </div>\n      </div>\n\n      {/* Combat Status */}\n      <div className=\"mb-6 grid grid-cols-2 gap-4\">\n        <div>\n          <div className=\"mb-1 flex justify-between text-sm\">\n            <span className=\"text-gray-400\">Hull Integrity</span>\n            <span className={hull < maxHull * 0.3 ? 'text-red-400' : 'text-gray-300'}>\n              {Math.round((hull / maxHull) * 100)}%\n            </span>\n          </div>\n          <div className=\"h-2 overflow-hidden rounded-full bg-gray-700\">\n            <div\n              className={`h-full rounded-full transition-all ${\n                hull < maxHull * 0.3 ? 'bg-red-500' : 'bg-green-500'\n              }`}\n              style={{ width: `${(hull / maxHull) * 100}%` }}\n            />\n          </div>\n        </div>\n\n        <div>\n          <div className=\"mb-1 flex justify-between text-sm\">\n            <span className=\"text-gray-400\">Shield Power</span>\n            <span className=\"text-gray-300\">{Math.round((shield / maxShield) * 100)}%</span>\n          </div>\n          <div className=\"h-2 overflow-hidden rounded-full bg-gray-700\">\n            <div\n              className=\"h-full rounded-full bg-blue-500 transition-all\"\n              style={{ width: `${(shield / maxShield) * 100}%` }}\n            />\n          </div>\n        </div>\n      </div>\n\n      {/* Weapon Systems */}\n      <div className=\"mb-6 space-y-4\">\n        <h4 className=\"text-sm font-medium text-gray-300\">Weapon Systems</h4>\n        <div className=\"grid grid-cols-2 gap-3\">\n          {weapons.map(weapon => (\n            <button\n              key={weapon.id}\n              onClick={() => onFire(weapon.id)}\n              disabled={weapon.status !== 'ready'}\n              className={`rounded-lg p-3 transition-colors ${\n                weapon.status === 'ready'\n                  ? 'border border-violet-500/30 bg-violet-500/20 hover:bg-violet-500/30'",
      "tokens": 0,
      "firstFile": {
        "name": "src/components/ships/player/variants/warships/OrionFrigate.tsx",
        "start": 50,
        "end": 108,
        "startLoc": {
          "line": 50,
          "column": 10,
          "position": 365
        },
        "endLoc": {
          "line": 108,
          "column": 70,
          "position": 873
        }
      },
      "secondFile": {
        "name": "src/components/ships/player/variants/warships/StarSchooner.tsx",
        "start": 43,
        "end": 101,
        "startLoc": {
          "line": 43,
          "column": 10,
          "position": 322
        },
        "endLoc": {
          "line": 101,
          "column": 70,
          "position": 832
        }
      }
    },
    {
      "format": "javascript",
      "lines": 22,
      "fragment": "}`}\n        >\n          <div className=\"mb-1 flex items-center justify-between\">\n            <span className=\"text-sm font-medium text-white\">{specialAbility.name}</span>\n            {specialAbility.active ? (\n              <span className=\"text-xs text-green-400\">Active</span>\n            ) : (\n              <span className=\"text-xs text-gray-400\">{specialAbility.cooldown}s</span>\n            )}\n          </div>\n          <p className=\"text-xs text-gray-400\">{specialAbility.description}</p>\n        </button>\n      </div>\n\n      {/* Combat Actions */}\n      <div className=\"grid grid-cols-2 gap-3\">\n        <button\n          onClick={() => onFire(weapons[0].id)}\n          disabled={!weapons.some(w => w.status === 'ready')}\n          className={`flex items-center justify-center space-x-2 rounded-lg px-4 py-2 text-sm ${\n            weapons.some(w => w.status === 'ready')\n              ? 'bg-violet-500/20 text-violet-200 hover:bg-violet-500/30'",
      "tokens": 0,
      "firstFile": {
        "name": "src/components/ships/player/variants/warships/OrionFrigate.tsx",
        "start": 141,
        "end": 162,
        "startLoc": {
          "line": 141,
          "column": 11,
          "position": 1087
        },
        "endLoc": {
          "line": 162,
          "column": 58,
          "position": 1293
        }
      },
      "secondFile": {
        "name": "src/components/ships/player/variants/warships/StarSchooner.tsx",
        "start": 114,
        "end": 132,
        "startLoc": {
          "line": 114,
          "column": 19,
          "position": 910
        },
        "endLoc": {
          "line": 132,
          "column": 58,
          "position": 1075
        }
      }
    },
    {
      "format": "tsx",
      "lines": 53,
      "fragment": "</div>\n        </div>\n        <div\n          className={`rounded-full px-3 py-1 text-sm ${\n            status === 'engaging'\n              ? 'bg-red-900/50 text-red-400'\n              : status === 'retreating'\n                ? 'bg-yellow-900/50 text-yellow-400'\n                : status === 'damaged'\n                  ? 'bg-red-900/50 text-red-400'\n                  : 'bg-green-900/50 text-green-400'\n          }`}\n        >\n          {status.charAt(0).toUpperCase() + status.slice(1)}\n        </div>\n      </div>\n\n      {/* Combat Status */}\n      <div className=\"mb-6 grid grid-cols-2 gap-4\">\n        <div>\n          <div className=\"mb-1 flex justify-between text-sm\">\n            <span className=\"text-gray-400\">Hull Integrity</span>\n            <span className={hull < maxHull * 0.3 ? 'text-red-400' : 'text-gray-300'}>\n              {Math.round((hull / maxHull) * 100)}%\n            </span>\n          </div>\n          <div className=\"h-2 overflow-hidden rounded-full bg-gray-700\">\n            <div\n              className={`h-full rounded-full transition-all ${\n                hull < maxHull * 0.3 ? 'bg-red-500' : 'bg-green-500'\n              }`}\n              style={{ width: `${(hull / maxHull) * 100}%` }}\n            />\n          </div>\n        </div>\n\n        <div>\n          <div className=\"mb-1 flex justify-between text-sm\">\n            <span className=\"text-gray-400\">Shield Power</span>\n            <span className=\"text-gray-300\">{Math.round((shield / maxShield) * 100)}%</span>\n          </div>\n          <div className=\"h-2 overflow-hidden rounded-full bg-gray-700\">\n            <div\n              className=\"h-full rounded-full bg-blue-500 transition-all\"\n              style={{ width: `${(shield / maxShield) * 100}%` }}\n            />\n          </div>\n        </div>\n      </div>\n\n      {/* Weapon Systems */}\n      <div className=\"mb-6 space-y-4\">\n        <h4 className=\"text-sm font-medium text-gray-300\">Weapon",
      "tokens": 0,
      "firstFile": {
        "name": "src/components/ships/player/variants/warships/OrionFrigate.tsx",
        "start": 47,
        "end": 99,
        "startLoc": {
          "line": 47,
          "column": 8,
          "position": 351
        },
        "endLoc": {
          "line": 99,
          "column": 7,
          "position": 790
        }
      },
      "secondFile": {
        "name": "src/components/ships/player/variants/warships/StarSchooner.tsx",
        "start": 40,
        "end": 92,
        "startLoc": {
          "line": 40,
          "column": 7,
          "position": 308
        },
        "endLoc": {
          "line": 92,
          "column": 5,
          "position": 747
        }
      }
    },
    {
      "format": "tsx",
      "lines": 11,
      "fragment": ") * 100}%` }}\n            />\n          </div>\n        </div>\n      </div>\n\n      {/* Weapon Systems */}\n      <div className=\"mb-6 space-y-4\">\n        <h4 className=\"text-sm font-medium text-gray-300\">Weapon Systems</h4>\n        <div className=\"grid grid-cols-2 gap-3\">\n          {weapons",
      "tokens": 0,
      "firstFile": {
        "name": "src/components/ships/player/variants/warships/OrionFrigate.tsx",
        "start": 91,
        "end": 101,
        "startLoc": {
          "line": 91,
          "column": 11,
          "position": 733
        },
        "endLoc": {
          "line": 101,
          "column": 8,
          "position": 810
        }
      },
      "secondFile": {
        "name": "src/components/ships/player/variants/warships/WarShip.tsx",
        "start": 137,
        "end": 147,
        "startLoc": {
          "line": 137,
          "column": 10,
          "position": 1202
        },
        "endLoc": {
          "line": 147,
          "column": 5,
          "position": 1279
        }
      }
    },
    {
      "format": "tsx",
      "lines": 34,
      "fragment": "</h4>\n        <div className=\"grid grid-cols-2 gap-3\">\n          {weapons.map(weapon => (\n            <button\n              key={weapon.id}\n              onClick={() => onFire(weapon.id)}\n              disabled={weapon.status !== 'ready'}\n              className={`rounded-lg p-3 transition-colors ${\n                weapon.status === 'ready'\n                  ? 'border border-violet-500/30 bg-violet-500/20 hover:bg-violet-500/30'\n                  : 'cursor-not-allowed border border-gray-600/30 bg-gray-700/50'\n              }`}\n            >\n              <div className=\"mb-2 flex items-center justify-between\">\n                <div className=\"text-sm font-medium text-white\">{weapon.name}</div>\n                <div\n                  className={`text-xs ${\n                    weapon.status === 'ready'\n                      ? 'text-green-400'\n                      : weapon.status === 'charging'\n                        ? 'text-yellow-400'\n                        : 'text-red-400'\n                  }`}\n                >\n                  {weapon.status.charAt(0).toUpperCase() + weapon.status.slice(1)}\n                </div>\n              </div>\n              <div className=\"text-xs text-gray-400\">Damage: {weapon.damage}</div>\n            </button>\n          ))}\n        </div>\n      </div>\n\n      {/* Special Ability */",
      "tokens": 0,
      "firstFile": {
        "name": "src/components/ships/player/variants/warships/OrionFrigate.tsx",
        "start": 99,
        "end": 132,
        "startLoc": {
          "line": 99,
          "column": 8,
          "position": 793
        },
        "endLoc": {
          "line": 132,
          "column": 22,
          "position": 1039
        }
      },
      "secondFile": {
        "name": "src/components/ships/player/variants/warships/StarSchooner.tsx",
        "start": 92,
        "end": 125,
        "startLoc": {
          "line": 92,
          "column": 7,
          "position": 752
        },
        "endLoc": {
          "line": 125,
          "column": 21,
          "position": 998
        }
      }
    },
    {
      "format": "tsx",
      "lines": 31,
      "fragment": ">\n      </div>\n\n      {/* Combat Actions */}\n      <div className=\"grid grid-cols-2 gap-3\">\n        <button\n          onClick={() => onFire(weapons[0].id)}\n          disabled={!weapons.some(w => w.status === 'ready')}\n          className={`flex items-center justify-center space-x-2 rounded-lg px-4 py-2 text-sm ${\n            weapons.some(w => w.status === 'ready')\n              ? 'bg-violet-500/20 text-violet-200 hover:bg-violet-500/30'\n              : 'cursor-not-allowed bg-gray-700 text-gray-500'\n          }`}\n        >\n          <Crosshair className=\"h-4 w-4\" />\n          <span>Fire Weapons</span>\n        </button>\n        <button\n          onClick={onRetreat}\n          disabled={status === 'damaged'}\n          className={`flex items-center justify-center space-x-2 rounded-lg bg-gray-700 px-4 py-2 text-sm hover:bg-gray-600 ${\n            status === 'damaged' ? 'cursor-not-allowed opacity-50' : ''\n          }`}\n        >\n          <Shield className=\"h-4 w-4\" />\n          <span>Retreat</span>\n        </button>\n      </div>\n    </div>\n  );\n}",
      "tokens": 0,
      "firstFile": {
        "name": "src/components/ships/player/variants/warships/OrionFrigate.tsx",
        "start": 152,
        "end": 182,
        "startLoc": {
          "line": 152,
          "column": 7,
          "position": 1206
        },
        "endLoc": {
          "line": 182,
          "column": 2,
          "position": 1416
        }
      },
      "secondFile": {
        "name": "src/components/ships/player/variants/warships/Spitflare.tsx",
        "start": 120,
        "end": 150,
        "startLoc": {
          "line": 120,
          "column": 4,
          "position": 965
        },
        "endLoc": {
          "line": 150,
          "column": 2,
          "position": 1175
        }
      }
    },
    {
      "format": "javascript",
      "lines": 59,
      "fragment": "={`rounded-full px-3 py-1 text-sm ${\n            status === 'engaging'\n              ? 'bg-red-900/50 text-red-400'\n              : status === 'retreating'\n                ? 'bg-yellow-900/50 text-yellow-400'\n                : status === 'damaged'\n                  ? 'bg-red-900/50 text-red-400'\n                  : 'bg-green-900/50 text-green-400'\n          }`}\n        >\n          {status.charAt(0).toUpperCase() + status.slice(1)}\n        </div>\n      </div>\n\n      {/* Combat Status */}\n      <div className=\"mb-6 grid grid-cols-2 gap-4\">\n        <div>\n          <div className=\"mb-1 flex justify-between text-sm\">\n            <span className=\"text-gray-400\">Hull Integrity</span>\n            <span className={hull < maxHull * 0.3 ? 'text-red-400' : 'text-gray-300'}>\n              {Math.round((hull / maxHull) * 100)}%\n            </span>\n          </div>\n          <div className=\"h-2 overflow-hidden rounded-full bg-gray-700\">\n            <div\n              className={`h-full rounded-full transition-all ${\n                hull < maxHull * 0.3 ? 'bg-red-500' : 'bg-green-500'\n              }`}\n              style={{ width: `${(hull / maxHull) * 100}%` }}\n            />\n          </div>\n        </div>\n\n        <div>\n          <div className=\"mb-1 flex justify-between text-sm\">\n            <span className=\"text-gray-400\">Shield Power</span>\n            <span className=\"text-gray-300\">{Math.round((shield / maxShield) * 100)}%</span>\n          </div>\n          <div className=\"h-2 overflow-hidden rounded-full bg-gray-700\">\n            <div\n              className=\"h-full rounded-full bg-blue-500 transition-all\"\n              style={{ width: `${(shield / maxShield) * 100}%` }}\n            />\n          </div>\n        </div>\n      </div>\n\n      {/* Docking Status */}\n      <div className=\"mb-6\">\n        <div className=\"mb-3 flex items-center justify-between\">\n          <h4 className=\"text-sm font-medium text-gray-300\">Docking Bays</h4>\n          <div className=\"text-sm text-gray-400\">\n            {occupiedBays}/{dockingBays.length} Occupied\n          </div>\n        </div>\n        <div className=\"grid grid-cols-3 gap-2\">\n          {dockingBays.map(bay => (\n            <button\n              key={bay",
      "tokens": 0,
      "firstFile": {
        "name": "src/components/ships/player/variants/warships/MotherEarthRevenge.tsx",
        "start": 63,
        "end": 121,
        "startLoc": {
          "line": 63,
          "column": 10,
          "position": 497
        },
        "endLoc": {
          "line": 121,
          "column": 4,
          "position": 1004
        }
      },
      "secondFile": {
        "name": "src/components/ships/player/variants/warships/StarSchooner.tsx",
        "start": 43,
        "end": 96,
        "startLoc": {
          "line": 43,
          "column": 10,
          "position": 322
        },
        "endLoc": {
          "line": 96,
          "column": 7,
          "position": 786
        }
      }
    },
    {
      "format": "javascript",
      "lines": 24,
      "fragment": "}`}\n            >\n              <div className=\"mb-1 flex items-center justify-between\">\n                <span className=\"text-sm font-medium text-white\">{ability.name}</span>\n                {ability.active ? (\n                  <span className=\"text-xs text-green-400\">Active</span>\n                ) : (\n                  <span className=\"text-xs text-gray-400\">{ability.cooldown}s</span>\n                )}\n              </div>\n              <p className=\"text-xs text-gray-400\">{ability.description}</p>\n            </button>\n          ))}\n        </div>\n      </div>\n\n      {/* Combat Actions */}\n      <div className=\"grid grid-cols-2 gap-3\">\n        <button\n          onClick={() => onFire(weapons[0].id)}\n          disabled={!weapons.some(w => w.status === 'ready')}\n          className={`flex items-center justify-center space-x-2 rounded-lg px-4 py-2 text-sm ${\n            weapons.some(w => w.status === 'ready')\n              ? 'bg-rose-500/20 text-rose-200 hover:bg-rose-500/30'",
      "tokens": 0,
      "firstFile": {
        "name": "src/components/ships/player/variants/warships/MotherEarthRevenge.tsx",
        "start": 200,
        "end": 223,
        "startLoc": {
          "line": 200,
          "column": 15,
          "position": 1604
        },
        "endLoc": {
          "line": 223,
          "column": 52,
          "position": 1820
        }
      },
      "secondFile": {
        "name": "src/components/ships/player/variants/warships/StarSchooner.tsx",
        "start": 114,
        "end": 132,
        "startLoc": {
          "line": 114,
          "column": 19,
          "position": 910
        },
        "endLoc": {
          "line": 132,
          "column": 58,
          "position": 1075
        }
      }
    },
    {
      "format": "tsx",
      "lines": 51,
      "fragment": "</div>\n        </div>\n        <div\n          className={`rounded-full px-3 py-1 text-sm ${\n            status === 'engaging'\n              ? 'bg-red-900/50 text-red-400'\n              : status === 'retreating'\n                ? 'bg-yellow-900/50 text-yellow-400'\n                : status === 'damaged'\n                  ? 'bg-red-900/50 text-red-400'\n                  : 'bg-green-900/50 text-green-400'\n          }`}\n        >\n          {status.charAt(0).toUpperCase() + status.slice(1)}\n        </div>\n      </div>\n\n      {/* Combat Status */}\n      <div className=\"mb-6 grid grid-cols-2 gap-4\">\n        <div>\n          <div className=\"mb-1 flex justify-between text-sm\">\n            <span className=\"text-gray-400\">Hull Integrity</span>\n            <span className={hull < maxHull * 0.3 ? 'text-red-400' : 'text-gray-300'}>\n              {Math.round((hull / maxHull) * 100)}%\n            </span>\n          </div>\n          <div className=\"h-2 overflow-hidden rounded-full bg-gray-700\">\n            <div\n              className={`h-full rounded-full transition-all ${\n                hull < maxHull * 0.3 ? 'bg-red-500' : 'bg-green-500'\n              }`}\n              style={{ width: `${(hull / maxHull) * 100}%` }}\n            />\n          </div>\n        </div>\n\n        <div>\n          <div className=\"mb-1 flex justify-between text-sm\">\n            <span className=\"text-gray-400\">Shield Power</span>\n            <span className=\"text-gray-300\">{Math.round((shield / maxShield) * 100)}%</span>\n          </div>\n          <div className=\"h-2 overflow-hidden rounded-full bg-gray-700\">\n            <div\n              className=\"h-full rounded-full bg-blue-500 transition-all\"\n              style={{ width: `${(shield / maxShield) * 100}%` }}\n            />\n          </div>\n        </div>\n      </div>\n\n      {/* Docking Status */",
      "tokens": 0,
      "firstFile": {
        "name": "src/components/ships/player/variants/warships/MotherEarthRevenge.tsx",
        "start": 60,
        "end": 110,
        "startLoc": {
          "line": 60,
          "column": 5,
          "position": 483
        },
        "endLoc": {
          "line": 110,
          "column": 21,
          "position": 898
        }
      },
      "secondFile": {
        "name": "src/components/ships/player/variants/warships/StarSchooner.tsx",
        "start": 40,
        "end": 90,
        "startLoc": {
          "line": 40,
          "column": 7,
          "position": 308
        },
        "endLoc": {
          "line": 90,
          "column": 21,
          "position": 723
        }
      }
    },
    {
      "format": "tsx",
      "lines": 34,
      "fragment": "</h4>\n        <div className=\"grid grid-cols-2 gap-3\">\n          {weapons.map(weapon => (\n            <button\n              key={weapon.id}\n              onClick={() => onFire(weapon.id)}\n              disabled={weapon.status !== 'ready'}\n              className={`rounded-lg p-3 transition-colors ${\n                weapon.status === 'ready'\n                  ? 'border border-rose-500/30 bg-rose-500/20 hover:bg-rose-500/30'\n                  : 'cursor-not-allowed border border-gray-600/30 bg-gray-700/50'\n              }`}\n            >\n              <div className=\"mb-2 flex items-center justify-between\">\n                <div className=\"text-sm font-medium text-white\">{weapon.name}</div>\n                <div\n                  className={`text-xs ${\n                    weapon.status === 'ready'\n                      ? 'text-green-400'\n                      : weapon.status === 'charging'\n                        ? 'text-yellow-400'\n                        : 'text-red-400'\n                  }`}\n                >\n                  {weapon.status.charAt(0).toUpperCase() + weapon.status.slice(1)}\n                </div>\n              </div>\n              <div className=\"text-xs text-gray-400\">Damage: {weapon.damage}</div>\n            </button>\n          ))}\n        </div>\n      </div>\n\n      {/* Special Abilities */",
      "tokens": 0,
      "firstFile": {
        "name": "src/components/ships/player/variants/warships/MotherEarthRevenge.tsx",
        "start": 154,
        "end": 187,
        "startLoc": {
          "line": 154,
          "column": 8,
          "position": 1252
        },
        "endLoc": {
          "line": 187,
          "column": 24,
          "position": 1498
        }
      },
      "secondFile": {
        "name": "src/components/ships/player/variants/warships/StarSchooner.tsx",
        "start": 92,
        "end": 125,
        "startLoc": {
          "line": 92,
          "column": 7,
          "position": 752
        },
        "endLoc": {
          "line": 125,
          "column": 21,
          "position": 998
        }
      }
    },
    {
      "format": "tsx",
      "lines": 15,
      "fragment": "<div className=\"mb-1 flex items-center justify-between\">\n                <span className=\"text-sm font-medium text-white\">{ability.name}</span>\n                {ability.active ? (\n                  <span className=\"text-xs text-green-400\">Active</span>\n                ) : (\n                  <span className=\"text-xs text-gray-400\">{ability.cooldown}s</span>\n                )}\n              </div>\n              <p className=\"text-xs text-gray-400\">{ability.description}</p>\n            </button>\n          ))}\n        </div>\n      </div>\n\n      {",
      "tokens": 0,
      "firstFile": {
        "name": "src/components/ships/player/variants/warships/MotherEarthRevenge.tsx",
        "start": 202,
        "end": 216,
        "startLoc": {
          "line": 202,
          "column": 15,
          "position": 1611
        },
        "endLoc": {
          "line": 216,
          "column": 2,
          "position": 1742
        }
      },
      "secondFile": {
        "name": "src/components/ships/player/variants/warships/PlayerWarShipCombat.tsx",
        "start": 179,
        "end": 192,
        "startLoc": {
          "line": 179,
          "column": 17,
          "position": 1528
        },
        "endLoc": {
          "line": 192,
          "column": 2,
          "position": 1658
        }
      }
    },
    {
      "format": "tsx",
      "lines": 14,
      "fragment": "alerts.map((alert, index) => (\n            <div\n              key={index}\n              className=\"flex items-start space-x-2 rounded-lg border border-red-700/30 bg-red-900/20 p-3\"\n            >\n              <AlertTriangle className=\"mt-0.5 h-4 w-4 flex-shrink-0 text-red-500\" />\n              <span className=\"text-sm text-red-200\">{alert}</span>\n            </div>\n          ))}\n        </div>\n      )}\n    </div>\n  );\n}",
      "tokens": 0,
      "firstFile": {
        "name": "src/components/ships/player/variants/warships/MotherEarthRevenge.tsx",
        "start": 245,
        "end": 258,
        "startLoc": {
          "line": 245,
          "column": 2,
          "position": 1973
        },
        "endLoc": {
          "line": 258,
          "column": 2,
          "position": 2063
        }
      },
      "secondFile": {
        "name": "src/components/ships/player/variants/warships/WarShip.tsx",
        "start": 226,
        "end": 239,
        "startLoc": {
          "line": 226,
          "column": 2,
          "position": 1945
        },
        "endLoc": {
          "line": 239,
          "column": 2,
          "position": 2035
        }
      }
    },
    {
      "format": "javascript",
      "lines": 83,
      "fragment": "={`rounded-full px-3 py-1 text-sm ${\n            status === 'engaging'\n              ? 'bg-red-900/50 text-red-400'\n              : status === 'retreating'\n                ? 'bg-yellow-900/50 text-yellow-400'\n                : status === 'damaged'\n                  ? 'bg-red-900/50 text-red-400'\n                  : 'bg-green-900/50 text-green-400'\n          }`}\n        >\n          {status.charAt(0).toUpperCase() + status.slice(1)}\n        </div>\n      </div>\n\n      {/* Combat Status */}\n      <div className=\"mb-6 grid grid-cols-2 gap-4\">\n        <div>\n          <div className=\"mb-1 flex justify-between text-sm\">\n            <span className=\"text-gray-400\">Hull Integrity</span>\n            <span className={hull < maxHull * 0.3 ? 'text-red-400' : 'text-gray-300'}>\n              {Math.round((hull / maxHull) * 100)}%\n            </span>\n          </div>\n          <div className=\"h-2 overflow-hidden rounded-full bg-gray-700\">\n            <div\n              className={`h-full rounded-full transition-all ${\n                hull < maxHull * 0.3 ? 'bg-red-500' : 'bg-green-500'\n              }`}\n              style={{ width: `${(hull / maxHull) * 100}%` }}\n            />\n          </div>\n          {/* Repair Rate Indicator */}\n          {repairRate > 0 && (\n            <div className=\"mt-1 flex items-center text-xs text-emerald-400\">\n              <Zap className=\"mr-1 h-3 w-3\" />\n              Repairing: +{repairRate}/s\n            </div>\n          )}\n        </div>\n\n        <div>\n          <div className=\"mb-1 flex justify-between text-sm\">\n            <span className=\"text-gray-400\">Shield Power</span>\n            <span className=\"text-gray-300\">{Math.round((shield / maxShield) * 100)}%</span>\n          </div>\n          <div className=\"h-2 overflow-hidden rounded-full bg-gray-700\">\n            <div\n              className=\"h-full rounded-full bg-blue-500 transition-all\"\n              style={{ width: `${(shield / maxShield) * 100}%` }}\n            />\n          </div>\n        </div>\n      </div>\n\n      {/* Fighter Status */}\n      <div className=\"mb-6\">\n        <div className=\"mb-3 flex items-center justify-between\">\n          <h4 className=\"text-sm font-medium text-gray-300\">Fighter Squadron</h4>\n          <div className=\"text-sm text-gray-400\">\n            {fighters.length}/{maxFighters} Total\n          </div>\n        </div>\n        <div className=\"mb-3 grid grid-cols-4 gap-2\">\n          <div className=\"rounded-lg bg-gray-700/50 p-2\">\n            <div className=\"text-xs text-gray-300\">Deployed</div>\n            <div className=\"text-lg font-medium text-fuchsia-400\">{deployedFighters}</div>\n          </div>\n          <div className=\"rounded-lg bg-gray-700/50 p-2\">\n            <div className=\"text-xs text-gray-300\">Docked</div>\n            <div className=\"text-lg font-medium text-fuchsia-400\">{dockedFighters}</div>\n          </div>\n          <div className=\"rounded-lg bg-gray-700/50 p-2\">\n            <div className=\"text-xs text-gray-300\">Returning</div>\n            <div className=\"text-lg font-medium text-fuchsia-400\">{returningFighters}</div>\n          </div>\n          <div className=\"rounded-lg bg-gray-700/50 p-2\">\n            <div className=\"text-xs text-gray-300\">Lost</div>\n            <div className=\"text-lg font-medium text-red-400\">{lostFighters}</div>\n          </div>\n        </div>\n        <div className=\"grid grid-cols-2 gap-3\">\n          <button\n            onClick={onDeployFighters",
      "tokens": 0,
      "firstFile": {
        "name": "src/components/ships/player/variants/warships/MidwayCarrier.tsx",
        "start": 71,
        "end": 153,
        "startLoc": {
          "line": 71,
          "column": 10,
          "position": 602
        },
        "endLoc": {
          "line": 153,
          "column": 17,
          "position": 1365
        }
      },
      "secondFile": {
        "name": "src/components/ships/player/variants/warships/StarSchooner.tsx",
        "start": 43,
        "end": 96,
        "startLoc": {
          "line": 43,
          "column": 10,
          "position": 322
        },
        "endLoc": {
          "line": 96,
          "column": 7,
          "position": 786
        }
      }
    },
    {
      "format": "javascript",
      "lines": 36,
      "fragment": "\n                  : 'cursor-not-allowed border border-gray-600/30 bg-gray-700/50'\n              }`}\n            >\n              <div className=\"mb-2 flex items-center justify-between\">\n                <div className=\"text-sm font-medium text-white\">{weapon.name}</div>\n                <div\n                  className={`text-xs ${\n                    weapon.status === 'ready'\n                      ? 'text-green-400'\n                      : weapon.status === 'charging'\n                        ? 'text-yellow-400'\n                        : 'text-red-400'\n                  }`}\n                >\n                  {weapon.status.charAt(0).toUpperCase() + weapon.status.slice(1)}\n                </div>\n              </div>\n              <div className=\"text-xs text-gray-400\">Damage: {weapon.damage}</div>\n            </button>\n          ))}\n        </div>\n      </div>\n\n      {/* Special Abilities */}\n      <div className=\"mb-6\">\n        <h4 className=\"mb-3 text-sm font-medium text-gray-300\">Special Abilities</h4>\n        <div className=\"space-y-2\">\n          {specialAbilities.map(ability => (\n            <button\n              key={ability.name}\n              onClick={() => onActivateAbility(ability.name)}\n              disabled={ability.active}\n              className={`w-full rounded-lg p-3 text-left transition-colors ${\n                ability.active\n                  ? 'border border-fuchsia-500/30 bg-fuchsia-500/20'",
      "tokens": 0,
      "firstFile": {
        "name": "src/components/ships/player/variants/warships/MidwayCarrier.tsx",
        "start": 188,
        "end": 223,
        "startLoc": {
          "line": 188,
          "column": 73,
          "position": 1621
        },
        "endLoc": {
          "line": 223,
          "column": 49,
          "position": 1886
        }
      },
      "secondFile": {
        "name": "src/components/ships/player/variants/warships/MotherEarthRevenge.tsx",
        "start": 163,
        "end": 198,
        "startLoc": {
          "line": 163,
          "column": 64,
          "position": 1333
        },
        "endLoc": {
          "line": 198,
          "column": 43,
          "position": 1598
        }
      }
    },
    {
      "format": "javascript",
      "lines": 26,
      "fragment": "\n                  : 'bg-gray-700/50 hover:bg-gray-600/50'\n              }`}\n            >\n              <div className=\"mb-1 flex items-center justify-between\">\n                <span className=\"text-sm font-medium text-white\">{ability.name}</span>\n                {ability.active ? (\n                  <span className=\"text-xs text-green-400\">Active</span>\n                ) : (\n                  <span className=\"text-xs text-gray-400\">{ability.cooldown}s</span>\n                )}\n              </div>\n              <p className=\"text-xs text-gray-400\">{ability.description}</p>\n            </button>\n          ))}\n        </div>\n      </div>\n\n      {/* Combat Actions */}\n      <div className=\"grid grid-cols-2 gap-3\">\n        <button\n          onClick={() => onFire(weapons[0].id)}\n          disabled={!weapons.some(w => w.status === 'ready')}\n          className={`flex items-center justify-center space-x-2 rounded-lg px-4 py-2 text-sm ${\n            weapons.some(w => w.status === 'ready')\n              ? 'bg-fuchsia-500/20 text-fuchsia-200 hover:bg-fuchsia-500/30'",
      "tokens": 0,
      "firstFile": {
        "name": "src/components/ships/player/variants/warships/MidwayCarrier.tsx",
        "start": 223,
        "end": 248,
        "startLoc": {
          "line": 223,
          "column": 49,
          "position": 1887
        },
        "endLoc": {
          "line": 248,
          "column": 61,
          "position": 2108
        }
      },
      "secondFile": {
        "name": "src/components/ships/player/variants/warships/MotherEarthRevenge.tsx",
        "start": 198,
        "end": 132,
        "startLoc": {
          "line": 198,
          "column": 43,
          "position": 1599
        },
        "endLoc": {
          "line": 132,
          "column": 58,
          "position": 1075
        }
      }
    },
    {
      "format": "tsx",
      "lines": 35,
      "fragment": "Capital Ship</div>\n        </div>\n        <div\n          className={`rounded-full px-3 py-1 text-sm ${\n            status === 'engaging'\n              ? 'bg-red-900/50 text-red-400'\n              : status === 'retreating'\n                ? 'bg-yellow-900/50 text-yellow-400'\n                : status === 'damaged'\n                  ? 'bg-red-900/50 text-red-400'\n                  : 'bg-green-900/50 text-green-400'\n          }`}\n        >\n          {status.charAt(0).toUpperCase() + status.slice(1)}\n        </div>\n      </div>\n\n      {/* Combat Status */}\n      <div className=\"mb-6 grid grid-cols-2 gap-4\">\n        <div>\n          <div className=\"mb-1 flex justify-between text-sm\">\n            <span className=\"text-gray-400\">Hull Integrity</span>\n            <span className={hull < maxHull * 0.3 ? 'text-red-400' : 'text-gray-300'}>\n              {Math.round((hull / maxHull) * 100)}%\n            </span>\n          </div>\n          <div className=\"h-2 overflow-hidden rounded-full bg-gray-700\">\n            <div\n              className={`h-full rounded-full transition-all ${\n                hull < maxHull * 0.3 ? 'bg-red-500' : 'bg-green-500'\n              }`}\n              style={{ width: `${(hull / maxHull) * 100}%` }}\n            />\n          </div>\n          {",
      "tokens": 0,
      "firstFile": {
        "name": "src/components/ships/player/variants/warships/MidwayCarrier.tsx",
        "start": 68,
        "end": 102,
        "startLoc": {
          "line": 68,
          "column": 2,
          "position": 585
        },
        "endLoc": {
          "line": 102,
          "column": 2,
          "position": 859
        }
      },
      "secondFile": {
        "name": "src/components/ships/player/variants/warships/MotherEarthRevenge.tsx",
        "start": 60,
        "end": 74,
        "startLoc": {
          "line": 60,
          "column": 2,
          "position": 480
        },
        "endLoc": {
          "line": 74,
          "column": 3,
          "position": 579
        }
      }
    },
    {
      "format": "tsx",
      "lines": 17,
      "fragment": "</div>\n\n        <div>\n          <div className=\"mb-1 flex justify-between text-sm\">\n            <span className=\"text-gray-400\">Shield Power</span>\n            <span className=\"text-gray-300\">{Math.round((shield / maxShield) * 100)}%</span>\n          </div>\n          <div className=\"h-2 overflow-hidden rounded-full bg-gray-700\">\n            <div\n              className=\"h-full rounded-full bg-blue-500 transition-all\"\n              style={{ width: `${(shield / maxShield) * 100}%` }}\n            />\n          </div>\n        </div>\n      </div>\n\n      {/* Fighter Status */",
      "tokens": 0,
      "firstFile": {
        "name": "src/components/ships/player/variants/warships/MidwayCarrier.tsx",
        "start": 109,
        "end": 125,
        "startLoc": {
          "line": 109,
          "column": 9,
          "position": 919
        },
        "endLoc": {
          "line": 125,
          "column": 21,
          "position": 1063
        }
      },
      "secondFile": {
        "name": "src/components/ships/player/variants/warships/StarSchooner.tsx",
        "start": 74,
        "end": 90,
        "startLoc": {
          "line": 74,
          "column": 9,
          "position": 579
        },
        "endLoc": {
          "line": 90,
          "column": 21,
          "position": 723
        }
      }
    },
    {
      "format": "tsx",
      "lines": 75,
      "fragment": "Systems</h4>\n        <div className=\"grid grid-cols-2 gap-3\">\n          {weapons.map(weapon => (\n            <button\n              key={weapon.id}\n              onClick={() => onFire(weapon.id)}\n              disabled={weapon.status !== 'ready'}\n              className={`rounded-lg p-3 transition-colors ${\n                weapon.status === 'ready'\n                  ? 'border border-fuchsia-500/30 bg-fuchsia-500/20 hover:bg-fuchsia-500/30'\n                  : 'cursor-not-allowed border border-gray-600/30 bg-gray-700/50'\n              }`}\n            >\n              <div className=\"mb-2 flex items-center justify-between\">\n                <div className=\"text-sm font-medium text-white\">{weapon.name}</div>\n                <div\n                  className={`text-xs ${\n                    weapon.status === 'ready'\n                      ? 'text-green-400'\n                      : weapon.status === 'charging'\n                        ? 'text-yellow-400'\n                        : 'text-red-400'\n                  }`}\n                >\n                  {weapon.status.charAt(0).toUpperCase() + weapon.status.slice(1)}\n                </div>\n              </div>\n              <div className=\"text-xs text-gray-400\">Damage: {weapon.damage}</div>\n            </button>\n          ))}\n        </div>\n      </div>\n\n      {/* Special Abilities */}\n      <div className=\"mb-6\">\n        <h4 className=\"mb-3 text-sm font-medium text-gray-300\">Special Abilities</h4>\n        <div className=\"space-y-2\">\n          {specialAbilities.map(ability => (\n            <button\n              key={ability.name}\n              onClick={() => onActivateAbility(ability.name)}\n              disabled={ability.active}\n              className={`w-full rounded-lg p-3 text-left transition-colors ${\n                ability.active\n                  ? 'border border-fuchsia-500/30 bg-fuchsia-500/20'\n                  : 'bg-gray-700/50 hover:bg-gray-600/50'\n              }`}\n            >\n              <div className=\"mb-1 flex items-center justify-between\">\n                <span className=\"text-sm font-medium text-white\">{ability.name}</span>\n                {ability.active ? (\n                  <span className=\"text-xs text-green-400\">Active</span>\n                ) : (\n                  <span className=\"text-xs text-gray-400\">{ability.cooldown}s</span>\n                )}\n              </div>\n              <p className=\"text-xs text-gray-400\">{ability.description}</p>\n            </button>\n          ))}\n        </div>\n      </div>\n\n      {/* Combat Actions */}\n      <div className=\"grid grid-cols-2 gap-3\">\n        <button\n          onClick={() => onFire(weapons[0].id)}\n          disabled={!weapons.some(w => w.status === 'ready')}\n          className={`flex items-center justify-center space-x-2 rounded-lg px-4 py-2 text-sm ${\n            weapons.some(w => w.status === 'ready')\n              ? 'bg-fuchsia-500/20 text-fuchsia-200 hover:bg-fuchsia-500/30'\n              : 'cursor-not-allowed bg-gray-700 text-gray-500'\n          }`}\n        >\n          <Crosshair className=\"h-4 w-4\" />\n          <span>Fire Defenses",
      "tokens": 0,
      "firstFile": {
        "name": "src/components/ships/player/variants/warships/MidwayCarrier.tsx",
        "start": 179,
        "end": 253,
        "startLoc": {
          "line": 179,
          "column": 2,
          "position": 1539
        },
        "endLoc": {
          "line": 253,
          "column": 9,
          "position": 2138
        }
      },
      "secondFile": {
        "name": "src/components/ships/player/variants/warships/OrionFrigate.tsx",
        "start": 99,
        "end": 228,
        "startLoc": {
          "line": 99,
          "column": 2,
          "position": 792
        },
        "endLoc": {
          "line": 228,
          "column": 8,
          "position": 1850
        }
      }
    },
    {
      "format": "tsx",
      "lines": 16,
      "fragment": ";\n      default:\n        return 'blue';\n    }\n  };\n\n  const color = getShipTypeColor(ship.type);\n\n  return (\n    <div className={`bg-${color}-900/20 border border-${color}-700/30 rounded-lg p-6`}>\n      {/* Ship Header */}\n      <div className=\"mb-6 flex items-start justify-between\">\n        <div>\n          <h3 className=\"text-lg font-medium text-white\">{ship.name}</h3>\n          <div className=\"flex items-center text-sm text-gray-400\">\n            <span>{",
      "tokens": 0,
      "firstFile": {
        "name": "src/components/ships/player/variants/reconships/ReconShipControl.tsx",
        "start": 50,
        "end": 65,
        "startLoc": {
          "line": 50,
          "column": 9,
          "position": 383
        },
        "endLoc": {
          "line": 65,
          "column": 2,
          "position": 498
        }
      },
      "secondFile": {
        "name": "src/components/ships/player/variants/warships/PlayerWarShipCombat.tsx",
        "start": 55,
        "end": 70,
        "startLoc": {
          "line": 55,
          "column": 10,
          "position": 423
        },
        "endLoc": {
          "line": 70,
          "column": 5,
          "position": 538
        }
      }
    },
    {
      "format": "tsx",
      "lines": 14,
      "fragment": "alerts.map((alert, index) => (\n            <div\n              key={index}\n              className=\"flex items-start space-x-2 rounded-lg border border-yellow-700/30 bg-yellow-900/20 p-3\"\n            >\n              <AlertTriangle className=\"mt-0.5 h-4 w-4 flex-shrink-0 text-yellow-500\" />\n              <span className=\"text-sm text-yellow-200\">{alert}</span>\n            </div>\n          ))}\n        </div>\n      )}\n    </div>\n  );\n}",
      "tokens": 0,
      "firstFile": {
        "name": "src/components/ships/player/variants/miningships/VoidDredgerMiner.tsx",
        "start": 158,
        "end": 171,
        "startLoc": {
          "line": 158,
          "column": 2,
          "position": 1299
        },
        "endLoc": {
          "line": 171,
          "column": 2,
          "position": 1389
        }
      },
      "secondFile": {
        "name": "src/components/ships/player/variants/reconships/ReconShipControl.tsx",
        "start": 222,
        "end": 235,
        "startLoc": {
          "line": 222,
          "column": 2,
          "position": 1878
        },
        "endLoc": {
          "line": 235,
          "column": 2,
          "position": 1968
        }
      }
    },
    {
      "format": "tsx",
      "lines": 20,
      "fragment": ") {\n  const getShipTypeColor = (type: string) => {\n    switch (type) {\n      case 'spitflare':\n        return 'cyan';\n      case 'starSchooner':\n        return 'indigo';\n      case 'orionFrigate':\n        return 'violet';\n      case 'harbringerGalleon':\n        return 'purple';\n      case 'midwayCarrier':\n        return 'fuchsia';\n      default:\n        return 'blue';\n    }\n  };\n\n  const color = getShipTypeColor(ship.type);\n  const",
      "tokens": 0,
      "firstFile": {
        "name": "src/components/ships/player/customization/PlayerShipUpgradeSystem.tsx",
        "start": 49,
        "end": 68,
        "startLoc": {
          "line": 49,
          "column": 23,
          "position": 350
        },
        "endLoc": {
          "line": 68,
          "column": 6,
          "position": 475
        }
      },
      "secondFile": {
        "name": "src/components/ships/player/variants/warships/PlayerWarShipCombat.tsx",
        "start": 43,
        "end": 63,
        "startLoc": {
          "line": 43,
          "column": 19,
          "position": 334
        },
        "endLoc": {
          "line": 63,
          "column": 7,
          "position": 460
        }
      }
    },
    {
      "format": "javascript",
      "lines": 47,
      "fragment": "} className=\"rounded-lg bg-gray-700/50 p-3\">\n              <div className=\"mb-2 text-sm capitalize text-gray-400\">{stat}</div>\n              <div className=\"flex items-center justify-between\">\n                <div className=\"text-white\">{values.current}</div>\n                <div className=\"flex items-center text-sm\">\n                  <ArrowRight className=\"mx-2 h-4 w-4 text-indigo-400\" />\n                  <span className=\"text-indigo-400\">\n                    {values.upgraded} ({getStatDifference(values.current, values.upgraded)})\n                  </span>\n                </div>\n              </div>\n            </div>\n          ))}\n        </div>\n      </div>\n\n      {/* Resource Costs */}\n      <div className=\"mb-6\">\n        <h4 className=\"mb-3 text-sm font-medium text-gray-300\">Resource Requirements</h4>\n        <div className=\"space-y-2\">\n          {ship.resourceCost.map((resource, index) => (\n            <div\n              key={index}\n              className=\"flex items-center justify-between rounded-lg bg-gray-700/50 p-3\"\n            >\n              <span className=\"text-sm text-gray-300\">{resource.type}</span>\n              <div\n                className={`text-sm ${\n                  resource.available >= resource.amount ? 'text-green-400' : 'text-red-400'\n                }`}\n              >\n                {resource.available} / {resource.amount}\n              </div>\n            </div>\n          ))}\n        </div>\n      </div>\n\n      {/* Upgrade Button */}\n      <button\n        onClick={onUpgrade}\n        disabled={!canUpgrade}\n        className={`flex w-full items-center justify-center space-x-2 rounded-lg px-4 py-3 ${\n          canUpgrade\n            ? 'bg-indigo-600 text-white hover:bg-indigo-700'\n            : 'cursor-not-allowed bg-gray-700 text-gray-500'\n        }`}",
      "tokens": 0,
      "firstFile": {
        "name": "src/components/ships/player/customization/PlayerShipUpgrade.tsx",
        "start": 96,
        "end": 142,
        "startLoc": {
          "line": 96,
          "column": 5,
          "position": 905
        },
        "endLoc": {
          "line": 142,
          "column": 2,
          "position": 1263
        }
      },
      "secondFile": {
        "name": "src/components/ships/player/customization/PlayerShipUpgradeSystem.tsx",
        "start": 152,
        "end": 191,
        "startLoc": {
          "line": 152,
          "column": 17,
          "position": 1351
        },
        "endLoc": {
          "line": 191,
          "column": 2,
          "position": 1623
        }
      }
    },
    {
      "format": "tsx",
      "lines": 11,
      "fragment": "const allRequirementsMet = ship.requirements.every(req => req.met);\n  const sufficientResources = ship.resourceCost.every(cost => cost.available >= cost.amount);\n  const canUpgrade = ship.upgradeAvailable && allRequirementsMet && sufficientResources;\n\n  const getStatDifference = (current: number, upgraded: number) => {\n    const diff = upgraded - current;\n    return diff > 0 ? `+${diff}` : diff.toString();\n  };\n\n  return (\n    <div className=",
      "tokens": 0,
      "firstFile": {
        "name": "src/components/ships/player/customization/PlayerShipUpgrade.tsx",
        "start": 40,
        "end": 50,
        "startLoc": {
          "line": 40,
          "column": 3,
          "position": 287
        },
        "endLoc": {
          "line": 50,
          "column": 2,
          "position": 438
        }
      },
      "secondFile": {
        "name": "src/components/ships/player/customization/PlayerShipUpgradeSystem.tsx",
        "start": 68,
        "end": 78,
        "startLoc": {
          "line": 68,
          "column": 3,
          "position": 475
        },
        "endLoc": {
          "line": 78,
          "column": 2,
          "position": 638
        }
      }
    },
    {
      "format": "tsx",
      "lines": 42,
      "fragment": ">\n      {/* Header */}\n      <div className=\"mb-6 flex items-center justify-between\">\n        <div>\n          <h3 className=\"text-lg font-medium text-white\">{ship.name}</h3>\n          <div className=\"text-sm text-gray-400\">\n            Tier {ship.tier} → {ship.tier + 1}\n          </div>\n        </div>\n        <div className=\"rounded-lg bg-indigo-500/20 p-2\">\n          <Rocket className=\"h-6 w-6 text-indigo-400\" />\n        </div>\n      </div>\n\n      {/* Upgrade Requirements */}\n      <div className=\"mb-6\">\n        <h4 className=\"mb-3 text-sm font-medium text-gray-300\">Requirements</h4>\n        <div className=\"space-y-2\">\n          {ship.requirements.map((req, index) => (\n            <div\n              key={index}\n              className={`flex items-center justify-between rounded-lg p-3 ${\n                req.met ? 'border border-green-700/30 bg-green-900/20' : 'bg-gray-700/50'\n              }`}\n            >\n              <div className=\"flex items-center space-x-2\">\n                {req.type === 'tech' && <Crosshair className=\"h-4 w-4 text-gray-400\" />}\n                {req.type === 'resource' && <Shield className=\"h-4 w-4 text-gray-400\" />}\n                {req.type === 'facility' && <Rocket className=\"h-4 w-4 text-gray-400\" />}\n                <span className=\"text-sm text-gray-300\">{req.name}</span>\n              </div>\n              {req.met ? (\n                <div className=\"text-xs text-green-400\">Met</div>\n              ) : (\n                <Lock className=\"h-4 w-4 text-gray-500\" />\n              )}\n            </div>\n          ))}\n        </div>\n      </div>\n\n      {/* Stat Comparisons */",
      "tokens": 0,
      "firstFile": {
        "name": "src/components/ships/player/customization/PlayerShipUpgrade.tsx",
        "start": 50,
        "end": 91,
        "startLoc": {
          "line": 50,
          "column": 2,
          "position": 442
        },
        "endLoc": {
          "line": 91,
          "column": 23,
          "position": 831
        }
      },
      "secondFile": {
        "name": "src/components/ships/player/customization/PlayerShipUpgradeSystem.tsx",
        "start": 78,
        "end": 119,
        "startLoc": {
          "line": 78,
          "column": 2,
          "position": 638
        },
        "endLoc": {
          "line": 119,
          "column": 24,
          "position": 1027
        }
      }
    },
    {
      "format": "tsx",
      "lines": 9,
      "fragment": "}\n      <div className=\"mb-6\">\n        <h4 className=\"mb-3 text-sm font-medium text-gray-300\">Improvements</h4>\n        <div className=\"grid grid-cols-2 gap-3\">\n          {Object.entries(ship.stats).map(([stat, values]) => (\n            <div key={stat} className=\"rounded-lg bg-gray-700/50 p-3\">\n              <div className=\"mb-2 text-sm capitalize text-gray-400\">{stat}</div>\n              <div className=\"flex items-center justify-between\">\n                <div className=\"text-white\">{values.current}</",
      "tokens": 0,
      "firstFile": {
        "name": "src/components/ships/player/customization/PlayerShipUpgrade.tsx",
        "start": 91,
        "end": 99,
        "startLoc": {
          "line": 91,
          "column": 23,
          "position": 832
        },
        "endLoc": {
          "line": 99,
          "column": 3,
          "position": 957
        }
      },
      "secondFile": {
        "name": "src/components/ships/player/customization/PlayerShipUpgradeSystem.tsx",
        "start": 119,
        "end": 129,
        "startLoc": {
          "line": 119,
          "column": 24,
          "position": 1028
        },
        "endLoc": {
          "line": 129,
          "column": 2,
          "position": 1157
        }
      }
    },
    {
      "format": "tsx",
      "lines": 56,
      "fragment": ">\n            </div>\n          ))}\n        </div>\n      </div>\n\n      {/* Resource Costs */}\n      <div className=\"mb-6\">\n        <h4 className=\"mb-3 text-sm font-medium text-gray-300\">Resource Requirements</h4>\n        <div className=\"space-y-2\">\n          {ship.resourceCost.map((resource, index) => (\n            <div\n              key={index}\n              className=\"flex items-center justify-between rounded-lg bg-gray-700/50 p-3\"\n            >\n              <span className=\"text-sm text-gray-300\">{resource.type}</span>\n              <div\n                className={`text-sm ${\n                  resource.available >= resource.amount ? 'text-green-400' : 'text-red-400'\n                }`}\n              >\n                {resource.available} / {resource.amount}\n              </div>\n            </div>\n          ))}\n        </div>\n      </div>\n\n      {/* Upgrade Button */}\n      <button\n        onClick={onUpgrade}\n        disabled={!canUpgrade}\n        className={`flex w-full items-center justify-center space-x-2 rounded-lg px-4 py-3 ${\n          canUpgrade\n            ? 'bg-indigo-600 text-white hover:bg-indigo-700'\n            : 'cursor-not-allowed bg-gray-700 text-gray-500'\n        }`}\n      >\n        <Rocket className=\"h-5 w-5\" />\n        <span>Upgrade to Tier {ship.tier + 1}</span>\n      </button>\n\n      {/* Warnings */}\n      {!canUpgrade && (\n        <div className=\"mt-4 flex items-start space-x-2 rounded-lg border border-yellow-700/30 bg-yellow-900/20 p-3\">\n          <AlertTriangle className=\"h-5 w-5 flex-shrink-0 text-yellow-500\" />\n          <div className=\"text-sm text-yellow-200\">\n            {!ship.upgradeAvailable && 'Ship is not eligible for upgrade.'}\n            {!allRequirementsMet && 'Not all upgrade requirements are met.'}\n            {!sufficientResources && 'Insufficient resources for upgrade.'}\n          </div>\n        </div>\n      )}\n    </div>\n  );\n}",
      "tokens": 0,
      "firstFile": {
        "name": "src/components/ships/player/customization/PlayerShipUpgrade.tsx",
        "start": 106,
        "end": 161,
        "startLoc": {
          "line": 106,
          "column": 4,
          "position": 1031
        },
        "endLoc": {
          "line": 161,
          "column": 2,
          "position": 1411
        }
      },
      "secondFile": {
        "name": "src/components/ships/player/customization/PlayerShipUpgradeSystem.tsx",
        "start": 155,
        "end": 210,
        "startLoc": {
          "line": 155,
          "column": 2,
          "position": 1391
        },
        "endLoc": {
          "line": 210,
          "column": 2,
          "position": 1771
        }
      }
    },
    {
      "format": "tsx",
      "lines": 7,
      "fragment": "return (\n    <div className=\"rounded-lg bg-gray-800 p-6\">\n      {/* Header */}\n      <div className=\"mb-6 flex items-center justify-between\">\n        <div>\n          <h3 className=\"text-lg font-medium text-white\">{ship.name}</h3>\n          <div className=\"text-sm text-gray-400\">Tier {ship.tier} Customization",
      "tokens": 0,
      "firstFile": {
        "name": "src/components/ships/player/customization/PlayerShipCustomization.tsx",
        "start": 49,
        "end": 55,
        "startLoc": {
          "line": 49,
          "column": 3,
          "position": 353
        },
        "endLoc": {
          "line": 55,
          "column": 14,
          "position": 426
        }
      },
      "secondFile": {
        "name": "src/components/ships/player/customization/PlayerShipUpgrade.tsx",
        "start": 49,
        "end": 56,
        "startLoc": {
          "line": 49,
          "column": 3,
          "position": 429
        },
        "endLoc": {
          "line": 56,
          "column": 2,
          "position": 504
        }
      }
    },
    {
      "format": "tsx",
      "lines": 12,
      "fragment": ".stats).map(([stat, value]) => (\n                    <div key={stat} className=\"text-xs text-gray-400\">\n                      {stat}: {value}\n                    </div>\n                  ))}\n                </div>\n              </button>\n            ))}\n          </div>\n        </div>\n\n        {/* Engines */",
      "tokens": 0,
      "firstFile": {
        "name": "src/components/ships/player/customization/PlayerShipCustomization.tsx",
        "start": 212,
        "end": 223,
        "startLoc": {
          "line": 212,
          "column": 7,
          "position": 1681
        },
        "endLoc": {
          "line": 223,
          "column": 14,
          "position": 1765
        }
      },
      "secondFile": {
        "name": "src/components/ships/player/customization/PlayerShipCustomization.tsx",
        "start": 176,
        "end": 187,
        "startLoc": {
          "line": 176,
          "column": 7,
          "position": 1371
        },
        "endLoc": {
          "line": 187,
          "column": 14,
          "position": 1455
        }
      }
    },
    {
      "format": "tsx",
      "lines": 11,
      "fragment": ".stats).map(([stat, value]) => (\n                    <div key={stat} className=\"text-xs text-gray-400\">\n                      {stat}: {value}\n                    </div>\n                  ))}\n                </div>\n              </button>\n            ))}\n          </div>\n        </div>\n      </",
      "tokens": 0,
      "firstFile": {
        "name": "src/components/ships/player/customization/PlayerShipCustomization.tsx",
        "start": 248,
        "end": 258,
        "startLoc": {
          "line": 248,
          "column": 7,
          "position": 1985
        },
        "endLoc": {
          "line": 258,
          "column": 3,
          "position": 2067
        }
      },
      "secondFile": {
        "name": "src/components/ships/player/customization/PlayerShipCustomization.tsx",
        "start": 176,
        "end": 187,
        "startLoc": {
          "line": 176,
          "column": 7,
          "position": 1371
        },
        "endLoc": {
          "line": 187,
          "column": 2,
          "position": 1454
        }
      }
    },
    {
      "format": "tsx",
      "lines": 10,
      "fragment": ";\n\n  return (\n    <div className={`bg-${color}-900/20 border border-${color}-700/30 rounded-lg p-6 ${className}`}>\n      {/* Ship Header */}\n      <div className=\"mb-6 flex items-start justify-between\">\n        <div>\n          <h3 className=\"text-lg font-medium text-white\">{ship.name}</h3>\n          <div className=\"flex items-center text-sm text-gray-400\">\n            <span ",
      "tokens": 0,
      "firstFile": {
        "name": "src/components/ships/player/base/PlayerShipBase.tsx",
        "start": 27,
        "end": 36,
        "startLoc": {
          "line": 27,
          "column": 2,
          "position": 192
        },
        "endLoc": {
          "line": 36,
          "column": 2,
          "position": 277
        }
      },
      "secondFile": {
        "name": "src/components/ships/player/variants/warships/PlayerWarShipCombat.tsx",
        "start": 61,
        "end": 70,
        "startLoc": {
          "line": 61,
          "column": 2,
          "position": 456
        },
        "endLoc": {
          "line": 70,
          "column": 2,
          "position": 537
        }
      }
    },
    {
      "format": "tsx",
      "lines": 10,
      "fragment": "}}\n            />\n          </div>\n        </div>\n\n        <div>\n          <div className=\"mb-1 flex justify-between text-sm\">\n            <span className=\"text-gray-400\">Shield Power</span>\n            <span className=\"text-gray-300\">\n              {Math.round((ship.stats",
      "tokens": 0,
      "firstFile": {
        "name": "src/components/ships/player/base/PlayerShipBase.tsx",
        "start": 76,
        "end": 85,
        "startLoc": {
          "line": 76,
          "column": 15,
          "position": 639
        },
        "endLoc": {
          "line": 85,
          "column": 6,
          "position": 710
        }
      },
      "secondFile": {
        "name": "src/components/ships/player/variants/warships/WarShip.tsx",
        "start": 122,
        "end": 131,
        "startLoc": {
          "line": 122,
          "column": 2,
          "position": 1066
        },
        "endLoc": {
          "line": 131,
          "column": 7,
          "position": 1137
        }
      }
    },
    {
      "format": "tsx",
      "lines": 7,
      "fragment": "bg-${color}-500/20 border border-${color}-500/30`\n                    : 'bg-gray-700/50 hover:bg-gray-600/50'\n                }`}\n              >\n                <div className=\"mb-1 flex items-center justify-between\">\n                  <span className=\"text-sm font-medium text-white\">{ability.name}</span>\n                  <",
      "tokens": 0,
      "firstFile": {
        "name": "src/components/ships/player/base/PlayerShipBase.tsx",
        "start": 144,
        "end": 150,
        "startLoc": {
          "line": 144,
          "column": 24,
          "position": 1204
        },
        "endLoc": {
          "line": 150,
          "column": 2,
          "position": 1264
        }
      },
      "secondFile": {
        "name": "src/components/ships/player/variants/warships/PlayerWarShipCombat.tsx",
        "start": 175,
        "end": 181,
        "startLoc": {
          "line": 175,
          "column": 24,
          "position": 1498
        },
        "endLoc": {
          "line": 181,
          "column": 2,
          "position": 1558
        }
      }
    },
    {
      "format": "tsx",
      "lines": 7,
      "fragment": "}\n              >\n                <div className=\"mb-1 flex items-center justify-between\">\n                  <span className=\"text-sm font-medium text-white\">{ability.name}</span>\n                  <span className=\"text-xs text-gray-400\">{ability.cooldown}s</span>\n                </div>\n                <div",
      "tokens": 0,
      "firstFile": {
        "name": "src/components/ships/player/base/PlayerShipBase.tsx",
        "start": 146,
        "end": 152,
        "startLoc": {
          "line": 146,
          "column": 19,
          "position": 1228
        },
        "endLoc": {
          "line": 152,
          "column": 4,
          "position": 1290
        }
      },
      "secondFile": {
        "name": "src/components/ships/player/variants/warships/WarShip.tsx",
        "start": 184,
        "end": 190,
        "startLoc": {
          "line": 184,
          "column": 19,
          "position": 1611
        },
        "endLoc": {
          "line": 190,
          "column": 2,
          "position": 1673
        }
      }
    },
    {
      "format": "tsx",
      "lines": 11,
      "fragment": ";\n  status: ShipStatus;\n  health: number;\n  maxHealth: number;\n  shield: number;\n  maxShield: number;\n  weapons: WeaponMount[];\n  stats: FactionShipStats;\n  onFire: (weaponId: string) => void;\n  onEngage?: () => void;\n  onRetreat?",
      "tokens": 0,
      "firstFile": {
        "name": "src/components/ships/FactionShips/spaceRats/RatKing.tsx",
        "start": 12,
        "end": 22,
        "startLoc": {
          "line": 12,
          "column": 10,
          "position": 120
        },
        "endLoc": {
          "line": 22,
          "column": 2,
          "position": 204
        }
      },
      "secondFile": {
        "name": "src/components/ships/FactionShips/spaceRats/RogueNebula.tsx",
        "start": 10,
        "end": 20,
        "startLoc": {
          "line": 10,
          "column": 7,
          "position": 118
        },
        "endLoc": {
          "line": 20,
          "column": 2,
          "position": 202
        }
      }
    },
    {
      "format": "tsx",
      "lines": 13,
      "fragment": "{\n  id: string;\n  status: ShipStatus;\n  health: number;\n  maxHealth: number;\n  shield: number;\n  maxShield: number;\n  weapons: WeaponMount[];\n  stats: FactionShipStats;\n  onFire: (weaponId: string) => void;\n  onEngage?: () => void;\n  onRetreat: () => void;\n  onSpecialAbility?: ()",
      "tokens": 0,
      "firstFile": {
        "name": "src/components/ships/FactionShips/spaceRats/AsteroidMarauder.tsx",
        "start": 7,
        "end": 19,
        "startLoc": {
          "line": 7,
          "column": 2,
          "position": 70
        },
        "endLoc": {
          "line": 19,
          "column": 2,
          "position": 177
        }
      },
      "secondFile": {
        "name": "src/components/ships/FactionShips/spaceRats/RogueNebula.tsx",
        "start": 9,
        "end": 21,
        "startLoc": {
          "line": 9,
          "column": 2,
          "position": 111
        },
        "endLoc": {
          "line": 21,
          "column": 12,
          "position": 218
        }
      }
    },
    {
      "format": "tsx",
      "lines": 17,
      "fragment": "// Map the full ShipStatus to SpaceRatShip's more limited status type\n  const mapStatus = (status: ShipStatus): 'engaging' | 'patrolling' | 'retreating' | 'disabled' => {\n    switch (status) {\n      case 'damaged':\n        return 'disabled';\n      case 'idle':\n      case 'ready':\n        return 'patrolling';\n      case 'engaging':\n      case 'patrolling':\n      case 'retreating':\n      case 'disabled':\n        return status;\n    }\n  };\n\n  return",
      "tokens": 0,
      "firstFile": {
        "name": "src/components/ships/FactionShips/spaceRats/AsteroidMarauder.tsx",
        "start": 40,
        "end": 56,
        "startLoc": {
          "line": 40,
          "column": 3,
          "position": 287
        },
        "endLoc": {
          "line": 56,
          "column": 7,
          "position": 400
        }
      },
      "secondFile": {
        "name": "src/components/ships/FactionShips/spaceRats/RogueNebula.tsx",
        "start": 61,
        "end": 77,
        "startLoc": {
          "line": 61,
          "column": 3,
          "position": 484
        },
        "endLoc": {
          "line": 77,
          "column": 51,
          "position": 597
        }
      }
    },
    {
      "format": "tsx",
      "lines": 15,
      "fragment": "{/* Warning indicator for damaged state */}\n      {status === 'damaged' && (\n        <div className=\"absolute right-0 top-0 p-2\">\n          <AlertTriangle className=\"h-6 w-6 animate-pulse text-yellow-500\" />\n        </div>\n      )}\n\n      {/* Action Buttons */}\n      <div className=\"absolute bottom-4 left-4 right-4 flex gap-2\">\n        <button\n          onClick={onSpecialAbility}\n          disabled={\n            status === 'disabled' || status === 'damaged' || stats.energy <= stats.maxEnergy * 0.5\n          }\n          className=\"flex-1 rounded-lg bg-blue-500/20 px-4 py-2 text-blue-300 hover:bg-blue-500/30 disabled:opacity-50",
      "tokens": 0,
      "firstFile": {
        "name": "src/components/ships/FactionShips/spaceRats/AsteroidMarauder.tsx",
        "start": 79,
        "end": 93,
        "startLoc": {
          "line": 79,
          "column": 7,
          "position": 533
        },
        "endLoc": {
          "line": 93,
          "column": 98,
          "position": 639
        }
      },
      "secondFile": {
        "name": "src/components/ships/FactionShips/spaceRats/RogueNebula.tsx",
        "start": 119,
        "end": 135,
        "startLoc": {
          "line": 119,
          "column": 7,
          "position": 875
        },
        "endLoc": {
          "line": 135,
          "column": 123,
          "position": 995
        }
      }
    },
    {
      "format": "tsx",
      "lines": 18,
      "fragment": "{\n  id: string;\n  status: ShipStatus;\n  health: number;\n  maxHealth: number;\n  shield: number;\n  maxShield: number;\n  weapons: WeaponMount[];\n  stats: FactionShipStats;\n  onFire: (weaponId: string) => void;\n  onEngage?: () => void;\n  onRetreat: () => void;\n  onSpecialAbility?: () => void;\n  position: { x: number; y: number };\n  rotation: number;\n}\n\n// Helper function to create a FactionBehaviorConfig from string",
      "tokens": 0,
      "firstFile": {
        "name": "src/components/ships/FactionShips/lostNova/NullHunter.tsx",
        "start": 9,
        "end": 26,
        "startLoc": {
          "line": 9,
          "column": 2,
          "position": 102
        },
        "endLoc": {
          "line": 26,
          "column": 65,
          "position": 246
        }
      },
      "secondFile": {
        "name": "src/components/ships/FactionShips/spaceRats/RogueNebula.tsx",
        "start": 9,
        "end": 24,
        "startLoc": {
          "line": 9,
          "column": 2,
          "position": 111
        },
        "endLoc": {
          "line": 24,
          "column": 7,
          "position": 214
        }
      }
    },
    {
      "format": "tsx",
      "lines": 20,
      "fragment": "(false);\n    }\n  }, [status]);\n\n  const mapStatus = (status: ShipStatus) => {\n    switch (status) {\n      case 'engaging':\n        return 'engaging';\n      case 'patrolling':\n        return 'patrolling';\n      case 'retreating':\n        return 'retreating';\n      case 'disabled':\n        return 'disabled';\n      default:\n        return 'patrolling';\n    }\n  };\n\n  // Create a proper FactionBehaviorConfig for tactics",
      "tokens": 0,
      "firstFile": {
        "name": "src/components/ships/FactionShips/lostNova/NullHunter.tsx",
        "start": 56,
        "end": 75,
        "startLoc": {
          "line": 56,
          "column": 19,
          "position": 440
        },
        "endLoc": {
          "line": 75,
          "column": 53,
          "position": 553
        }
      },
      "secondFile": {
        "name": "src/components/ships/FactionShips/spaceRats/RatKing.tsx",
        "start": 52,
        "end": 71,
        "startLoc": {
          "line": 52,
          "column": 20,
          "position": 403
        },
        "endLoc": {
          "line": 71,
          "column": 7,
          "position": 516
        }
      }
    },
    {
      "format": "javascript",
      "lines": 18,
      "fragment": "={id}\n        name=\"Eclipse Scythe\"\n        type=\"eclipseScythe\"\n        status={mapStatus(status)}\n        health={health}\n        maxHealth={maxHealth}\n        shield={shield}\n        maxShield={maxShield}\n        weapons={weapons}\n        stats={stats}\n        position={position}\n        rotation={rotation}\n        tactics={tactics}\n        onEngage={onEngage}\n        onRetreat={onRetreat}\n        onFire={onFire}\n        onSpecialAbility={() => {\n          setShadowVeilActive",
      "tokens": 0,
      "firstFile": {
        "name": "src/components/ships/FactionShips/lostNova/EclipseScythe.tsx",
        "start": 79,
        "end": 96,
        "startLoc": {
          "line": 79,
          "column": 3,
          "position": 565
        },
        "endLoc": {
          "line": 96,
          "column": 20,
          "position": 673
        }
      },
      "secondFile": {
        "name": "src/components/ships/FactionShips/lostNova/NullHunter.tsx",
        "start": 81,
        "end": 98,
        "startLoc": {
          "line": 81,
          "column": 3,
          "position": 590
        },
        "endLoc": {
          "line": 98,
          "column": 19,
          "position": 698
        }
      }
    },
    {
      "format": "tsx",
      "lines": 9,
      "fragment": "} from 'lucide-react';\nimport { useEffect, useState } from 'react';\nimport { FactionShipStats } from '../../../../types/ships/FactionShipTypes';\nimport { FactionBehaviorConfig, FactionBehaviorType } from '../../../../types/ships/FactionTypes';\nimport { ShipStatus } from '../../../../types/ships/ShipTypes';\nimport { WeaponMount } from '../../../../types/weapons/WeaponTypes';\nimport { LostNovaShip } from '../../common/LostNovaShip';\n\ninterface EclipseScytheProps",
      "tokens": 0,
      "firstFile": {
        "name": "src/components/ships/FactionShips/lostNova/EclipseScythe.tsx",
        "start": 1,
        "end": 9,
        "startLoc": {
          "line": 1,
          "column": 2,
          "position": 6
        },
        "endLoc": {
          "line": 9,
          "column": 19,
          "position": 100
        }
      },
      "secondFile": {
        "name": "src/components/ships/FactionShips/lostNova/NullHunter.tsx",
        "start": 1,
        "end": 9,
        "startLoc": {
          "line": 1,
          "column": 2,
          "position": 6
        },
        "endLoc": {
          "line": 9,
          "column": 16,
          "position": 100
        }
      }
    },
    {
      "format": "tsx",
      "lines": 26,
      "fragment": "{\n  id: string;\n  status: ShipStatus;\n  health: number;\n  maxHealth: number;\n  shield: number;\n  maxShield: number;\n  weapons: WeaponMount[];\n  stats: FactionShipStats;\n  onFire: (weaponId: string) => void;\n  onEngage?: () => void;\n  onRetreat: () => void;\n  onSpecialAbility?: () => void;\n  position: { x: number; y: number };\n  rotation: number;\n}\n\n// Helper function to create a FactionBehaviorConfig from string\nconst createFactionBehavior = (behavior: string): FactionBehaviorConfig => {\n  return {\n    formation: 'standard',\n    behavior: behavior as FactionBehaviorType,\n  };\n};\n\nexport function EclipseScythe",
      "tokens": 0,
      "firstFile": {
        "name": "src/components/ships/FactionShips/lostNova/EclipseScythe.tsx",
        "start": 9,
        "end": 34,
        "startLoc": {
          "line": 9,
          "column": 2,
          "position": 102
        },
        "endLoc": {
          "line": 34,
          "column": 14,
          "position": 303
        }
      },
      "secondFile": {
        "name": "src/components/ships/FactionShips/spaceRats/RogueNebula.tsx",
        "start": 9,
        "end": 34,
        "startLoc": {
          "line": 9,
          "column": 2,
          "position": 111
        },
        "endLoc": {
          "line": 34,
          "column": 11,
          "position": 303
        }
      }
    },
    {
      "format": "tsx",
      "lines": 21,
      "fragment": "(false);\n    }\n  }, [status]);\n\n  const mapStatus = (status: ShipStatus) => {\n    switch (status) {\n      case 'engaging':\n        return 'engaging';\n      case 'patrolling':\n        return 'patrolling';\n      case 'retreating':\n        return 'retreating';\n      case 'disabled':\n        return 'disabled';\n      default:\n        return 'patrolling';\n    }\n  };\n\n  // Create a proper FactionBehaviorConfig for tactics\n  const tactics = createFactionBehavior('hit-and-run'",
      "tokens": 0,
      "firstFile": {
        "name": "src/components/ships/FactionShips/lostNova/EclipseScythe.tsx",
        "start": 54,
        "end": 74,
        "startLoc": {
          "line": 54,
          "column": 20,
          "position": 415
        },
        "endLoc": {
          "line": 74,
          "column": 14,
          "position": 539
        }
      },
      "secondFile": {
        "name": "src/components/ships/FactionShips/spaceRats/RatKing.tsx",
        "start": 52,
        "end": 76,
        "startLoc": {
          "line": 52,
          "column": 20,
          "position": 403
        },
        "endLoc": {
          "line": 76,
          "column": 13,
          "position": 564
        }
      }
    },
    {
      "format": "tsx",
      "lines": 8,
      "fragment": "} from 'lucide-react';\nimport { useEffect, useState } from 'react';\nimport { FactionShipStats } from '../../../../types/ships/FactionShipTypes';\nimport { FactionBehaviorConfig, FactionBehaviorType } from '../../../../types/ships/FactionTypes';\nimport { ShipStatus } from '../../../../types/ships/ShipTypes';\nimport { WeaponMount } from '../../../../types/weapons/WeaponTypes';\nimport { LostNovaShip } from '../../common/LostNovaShip';\nimport",
      "tokens": 0,
      "firstFile": {
        "name": "src/components/ships/FactionShips/lostNova/DarkMatterReaper.tsx",
        "start": 1,
        "end": 8,
        "startLoc": {
          "line": 1,
          "column": 2,
          "position": 6
        },
        "endLoc": {
          "line": 8,
          "column": 7,
          "position": 97
        }
      },
      "secondFile": {
        "name": "src/components/ships/FactionShips/lostNova/NullHunter.tsx",
        "start": 1,
        "end": 9,
        "startLoc": {
          "line": 1,
          "column": 2,
          "position": 6
        },
        "endLoc": {
          "line": 9,
          "column": 10,
          "position": 98
        }
      }
    },
    {
      "format": "tsx",
      "lines": 18,
      "fragment": "{\n  id: string;\n  status: ShipStatus;\n  health: number;\n  maxHealth: number;\n  shield: number;\n  maxShield: number;\n  weapons: WeaponMount[];\n  stats: FactionShipStats;\n  onFire: (weaponId: string) => void;\n  onEngage?: () => void;\n  onRetreat: () => void;\n  onSpecialAbility?: () => void;\n  position: { x: number; y: number };\n  rotation: number;\n}\n\n// Ship-specific stats - kept for future implementation of ship stat scaling",
      "tokens": 0,
      "firstFile": {
        "name": "src/components/ships/FactionShips/lostNova/DarkMatterReaper.tsx",
        "start": 10,
        "end": 27,
        "startLoc": {
          "line": 10,
          "column": 2,
          "position": 115
        },
        "endLoc": {
          "line": 27,
          "column": 77,
          "position": 259
        }
      },
      "secondFile": {
        "name": "src/components/ships/FactionShips/spaceRats/RogueNebula.tsx",
        "start": 9,
        "end": 24,
        "startLoc": {
          "line": 9,
          "column": 2,
          "position": 111
        },
        "endLoc": {
          "line": 24,
          "column": 7,
          "position": 214
        }
      }
    },
    {
      "format": "tsx",
      "lines": 19,
      "fragment": "]);\n\n  const mapStatus = (status: ShipStatus) => {\n    switch (status) {\n      case 'engaging':\n        return 'engaging';\n      case 'patrolling':\n        return 'patrolling';\n      case 'retreating':\n        return 'retreating';\n      case 'disabled':\n        return 'disabled';\n      default:\n        return 'patrolling';\n    }\n  };\n\n  // Create a proper FactionBehaviorConfig for tactics\n  const tactics = createFactionBehavior('stealth'",
      "tokens": 0,
      "firstFile": {
        "name": "src/components/ships/FactionShips/lostNova/DarkMatterReaper.tsx",
        "start": 99,
        "end": 117,
        "startLoc": {
          "line": 99,
          "column": 13,
          "position": 732
        },
        "endLoc": {
          "line": 117,
          "column": 10,
          "position": 842
        }
      },
      "secondFile": {
        "name": "src/components/ships/FactionShips/spaceRats/RatKing.tsx",
        "start": 54,
        "end": 76,
        "startLoc": {
          "line": 54,
          "column": 7,
          "position": 417
        },
        "endLoc": {
          "line": 76,
          "column": 13,
          "position": 564
        }
      }
    },
    {
      "format": "tsx",
      "lines": 21,
      "fragment": "(false);\n    }\n  }, [status]);\n\n  const mapStatus = (status: ShipStatus) => {\n    switch (status) {\n      case 'engaging':\n        return 'engaging';\n      case 'patrolling':\n        return 'patrolling';\n      case 'retreating':\n        return 'retreating';\n      case 'disabled':\n        return 'disabled';\n      default:\n        return 'patrolling';\n    }\n  };\n\n  return (\n    <div",
      "tokens": 0,
      "firstFile": {
        "name": "src/components/ships/FactionShips/equatorHorizon/StellarEquinox.tsx",
        "start": 45,
        "end": 65,
        "startLoc": {
          "line": 45,
          "column": 28,
          "position": 346
        },
        "endLoc": {
          "line": 65,
          "column": 4,
          "position": 465
        }
      },
      "secondFile": {
        "name": "src/components/ships/FactionShips/spaceRats/RatKing.tsx",
        "start": 52,
        "end": 72,
        "startLoc": {
          "line": 52,
          "column": 20,
          "position": 403
        },
        "endLoc": {
          "line": 72,
          "column": 13,
          "position": 522
        }
      }
    },
    {
      "format": "javascript",
      "lines": 17,
      "fragment": "={id}\n        name=\"Ethereal Galleon\"\n        type=\"etherealGalleon\"\n        status={mapStatus(status)}\n        health={health}\n        maxHealth={maxHealth}\n        shield={shield}\n        maxShield={maxShield}\n        weapons={weapons}\n        stats={stats}\n        position={position}\n        rotation={rotation}\n        onEngage={onEngage}\n        onRetreat={onRetreat}\n        onFire={onFire}\n        onSpecialAbility={() => {\n          setEtherealWindsActive",
      "tokens": 0,
      "firstFile": {
        "name": "src/components/ships/FactionShips/equatorHorizon/EtherealGalleon.tsx",
        "start": 67,
        "end": 83,
        "startLoc": {
          "line": 67,
          "column": 3,
          "position": 479
        },
        "endLoc": {
          "line": 83,
          "column": 23,
          "position": 581
        }
      },
      "secondFile": {
        "name": "src/components/ships/FactionShips/equatorHorizon/StellarEquinox.tsx",
        "start": 67,
        "end": 83,
        "startLoc": {
          "line": 67,
          "column": 3,
          "position": 479
        },
        "endLoc": {
          "line": 83,
          "column": 28,
          "position": 581
        }
      }
    },
    {
      "format": "tsx",
      "lines": 18,
      "fragment": "{\n  id: string;\n  status: ShipStatus;\n  health: number;\n  maxHealth: number;\n  shield: number;\n  maxShield: number;\n  weapons: WeaponMount[];\n  stats: FactionShipStats;\n  position: { x: number; y: number };\n  rotation: number;\n  onFire: (weaponId: string) => void;\n  onEngage?: () => void;\n  onRetreat: () => void;\n  onSpecialAbility?: () => void;\n}\n\nexport function EtherealGalleon",
      "tokens": 0,
      "firstFile": {
        "name": "src/components/ships/FactionShips/equatorHorizon/EtherealGalleon.tsx",
        "start": 8,
        "end": 25,
        "startLoc": {
          "line": 8,
          "column": 2,
          "position": 86
        },
        "endLoc": {
          "line": 25,
          "column": 16,
          "position": 234
        }
      },
      "secondFile": {
        "name": "src/components/ships/FactionShips/equatorHorizon/StellarEquinox.tsx",
        "start": 8,
        "end": 25,
        "startLoc": {
          "line": 8,
          "column": 2,
          "position": 86
        },
        "endLoc": {
          "line": 25,
          "column": 15,
          "position": 234
        }
      }
    },
    {
      "format": "tsx",
      "lines": 24,
      "fragment": "(false);\n    }\n  }, [status]);\n\n  const mapStatus = (status: ShipStatus) => {\n    switch (status) {\n      case 'engaging':\n        return 'engaging';\n      case 'patrolling':\n        return 'patrolling';\n      case 'retreating':\n        return 'retreating';\n      case 'disabled':\n        return 'disabled';\n      default:\n        return 'patrolling';\n    }\n  };\n\n  return (\n    <div className=\"relative\">\n      <EquatorHorizonShip\n        id={id}\n        name=\"Ethereal Galleon",
      "tokens": 0,
      "firstFile": {
        "name": "src/components/ships/FactionShips/equatorHorizon/EtherealGalleon.tsx",
        "start": 45,
        "end": 68,
        "startLoc": {
          "line": 45,
          "column": 23,
          "position": 346
        },
        "endLoc": {
          "line": 68,
          "column": 17,
          "position": 487
        }
      },
      "secondFile": {
        "name": "src/components/ships/FactionShips/spaceRats/RatKing.tsx",
        "start": 52,
        "end": 68,
        "startLoc": {
          "line": 52,
          "column": 20,
          "position": 403
        },
        "endLoc": {
          "line": 68,
          "column": 16,
          "position": 487
        }
      }
    },
    {
      "format": "javascript",
      "lines": 17,
      "fragment": "={id}\n        name=\"Celestial Arbiter\"\n        type=\"celestialArbiter\"\n        status={mapStatus(status)}\n        health={health}\n        maxHealth={maxHealth}\n        shield={shield}\n        maxShield={maxShield}\n        weapons={weapons}\n        stats={stats}\n        position={position}\n        rotation={rotation}\n        onEngage={onEngage}\n        onRetreat={onRetreat}\n        onFire={onFire}\n        onSpecialAbility={() => {\n          setCelestialJudgementActive",
      "tokens": 0,
      "firstFile": {
        "name": "src/components/ships/FactionShips/equatorHorizon/CelestialArbiter.tsx",
        "start": 67,
        "end": 83,
        "startLoc": {
          "line": 67,
          "column": 3,
          "position": 479
        },
        "endLoc": {
          "line": 83,
          "column": 28,
          "position": 581
        }
      },
      "secondFile": {
        "name": "src/components/ships/FactionShips/equatorHorizon/StellarEquinox.tsx",
        "start": 67,
        "end": 83,
        "startLoc": {
          "line": 67,
          "column": 3,
          "position": 479
        },
        "endLoc": {
          "line": 83,
          "column": 28,
          "position": 581
        }
      }
    },
    {
      "format": "tsx",
      "lines": 18,
      "fragment": "{\n  id: string;\n  status: ShipStatus;\n  health: number;\n  maxHealth: number;\n  shield: number;\n  maxShield: number;\n  weapons: WeaponMount[];\n  stats: FactionShipStats;\n  position: { x: number; y: number };\n  rotation: number;\n  onFire: (weaponId: string) => void;\n  onEngage?: () => void;\n  onRetreat: () => void;\n  onSpecialAbility?: () => void;\n}\n\nexport function CelestialArbiter",
      "tokens": 0,
      "firstFile": {
        "name": "src/components/ships/FactionShips/equatorHorizon/CelestialArbiter.tsx",
        "start": 8,
        "end": 25,
        "startLoc": {
          "line": 8,
          "column": 2,
          "position": 86
        },
        "endLoc": {
          "line": 25,
          "column": 17,
          "position": 234
        }
      },
      "secondFile": {
        "name": "src/components/ships/FactionShips/equatorHorizon/StellarEquinox.tsx",
        "start": 8,
        "end": 25,
        "startLoc": {
          "line": 8,
          "column": 2,
          "position": 86
        },
        "endLoc": {
          "line": 25,
          "column": 15,
          "position": 234
        }
      }
    },
    {
      "format": "tsx",
      "lines": 24,
      "fragment": "(false);\n    }\n  }, [status]);\n\n  const mapStatus = (status: ShipStatus) => {\n    switch (status) {\n      case 'engaging':\n        return 'engaging';\n      case 'patrolling':\n        return 'patrolling';\n      case 'retreating':\n        return 'retreating';\n      case 'disabled':\n        return 'disabled';\n      default:\n        return 'patrolling';\n    }\n  };\n\n  return (\n    <div className=\"relative\">\n      <EquatorHorizonShip\n        id={id}\n        name=\"Celestial Arbiter",
      "tokens": 0,
      "firstFile": {
        "name": "src/components/ships/FactionShips/equatorHorizon/CelestialArbiter.tsx",
        "start": 45,
        "end": 68,
        "startLoc": {
          "line": 45,
          "column": 28,
          "position": 346
        },
        "endLoc": {
          "line": 68,
          "column": 18,
          "position": 487
        }
      },
      "secondFile": {
        "name": "src/components/ships/FactionShips/spaceRats/RatKing.tsx",
        "start": 52,
        "end": 68,
        "startLoc": {
          "line": 52,
          "column": 20,
          "position": 403
        },
        "endLoc": {
          "line": 68,
          "column": 16,
          "position": 487
        }
      }
    },
    {
      "format": "tsx",
      "lines": 14,
      "fragment": "if (colorKey && point[colorKey] !== undefined) {\n        // Map the color value to the color scale\n        const colorValue = Number(point[colorKey]);\n        // Normalize to 0-1 range for color mapping\n        const normalizedValue =\n          (colorValue - dataBounds.yMin) / (dataBounds.yMax - dataBounds.yMin);\n        // Get color index based on the normalized value\n        const colorIndex = Math.floor(normalizedValue * (colors.length - 1));\n        return getColor(colorIndex, colors);\n      }\n      // Default color based on index\n      return getColor(index % colors.length, colors);\n    },\n    [colorKey, colors, dataBounds,",
      "tokens": 0,
      "firstFile": {
        "name": "src/components/exploration/visualizations/charts/ViewportOptimizedScatterPlot.tsx",
        "start": 268,
        "end": 281,
        "startLoc": {
          "line": 268,
          "column": 7,
          "position": 2157
        },
        "endLoc": {
          "line": 281,
          "column": 2,
          "position": 2310
        }
      },
      "secondFile": {
        "name": "src/components/exploration/visualizations/charts/ViewportOptimizedScatterPlot.tsx",
        "start": 238,
        "end": 251,
        "startLoc": {
          "line": 238,
          "column": 7,
          "position": 1881
        },
        "endLoc": {
          "line": 251,
          "column": 2,
          "position": 2034
        }
      }
    },
    {
      "format": "tsx",
      "lines": 11,
      "fragment": "const event = e as unknown as {\n            xAxis?: Array<{ domain: [number, number] }>;\n            yAxis?: Array<{ domain: [number, number] }>;\n          };\n\n          if (event && event?.xAxis && event?.yAxis && event?.xAxis[0] && event?.yAxis[0]) {\n            const domain = {\n              x: event?.xAxis[0].domain,\n              y: event?.yAxis[0].domain,\n            };\n            debouncedViewportChange",
      "tokens": 0,
      "firstFile": {
        "name": "src/components/exploration/visualizations/charts/ViewportOptimizedScatterPlot.tsx",
        "start": 292,
        "end": 302,
        "startLoc": {
          "line": 292,
          "column": 11,
          "position": 2408
        },
        "endLoc": {
          "line": 302,
          "column": 24,
          "position": 2562
        }
      },
      "secondFile": {
        "name": "src/components/exploration/visualizations/charts/VirtualizedLineChart.tsx",
        "start": 374,
        "end": 384,
        "startLoc": {
          "line": 374,
          "column": 11,
          "position": 2840
        },
        "endLoc": {
          "line": 384,
          "column": 11,
          "position": 2994
        }
      }
    },
    {
      "format": "tsx",
      "lines": 11,
      "fragment": "const originalItem = data?.find(\n          item =>\n            (item[xKey] === cell.originalX ||\n              (typeof item[xKey] === 'object' &&\n                (item[xKey] as Record<string, unknown>).x === cell.originalX)) &&\n            (item[yKey] === cell.originalY ||\n              (typeof item[yKey] === 'object' &&\n                (item[yKey] as Record<string, unknown>).y === cell.originalY))\n        );\n\n        if (originalItem)",
      "tokens": 0,
      "firstFile": {
        "name": "src/components/exploration/visualizations/charts/ViewportOptimizedHeatMap.tsx",
        "start": 359,
        "end": 369,
        "startLoc": {
          "line": 359,
          "column": 9,
          "position": 3112
        },
        "endLoc": {
          "line": 369,
          "column": 2,
          "position": 3257
        }
      },
      "secondFile": {
        "name": "src/components/exploration/visualizations/charts/ViewportOptimizedHeatMap.tsx",
        "start": 296,
        "end": 305,
        "startLoc": {
          "line": 296,
          "column": 11,
          "position": 2345
        },
        "endLoc": {
          "line": 305,
          "column": 3,
          "position": 2490
        }
      }
    },
    {
      "format": "javascript",
      "lines": 13,
      "fragment": "} />\n\n      {showLegend && <Legend />}\n\n      {/* Reference lines for thresholds or important values */}\n      {referenceLines.map((line, i) => (\n        <ReferenceLine\n          key={`ref-line-${i}`}\n          x={line.axis === 'x' ? line.value : undefined}\n          y={line.axis === 'y' ? line.value : undefined}\n          stroke={line.color || '#ff7300'}\n          label={\n            line",
      "tokens": 0,
      "firstFile": {
        "name": "src/components/exploration/visualizations/charts/ScatterPlot.tsx",
        "start": 253,
        "end": 265,
        "startLoc": {
          "line": 253,
          "column": 2,
          "position": 1932
        },
        "endLoc": {
          "line": 265,
          "column": 17,
          "position": 2036
        }
      },
      "secondFile": {
        "name": "src/components/exploration/visualizations/charts/VirtualizedLineChart.tsx",
        "start": 404,
        "end": 416,
        "startLoc": {
          "line": 404,
          "column": 3,
          "position": 3177
        },
        "endLoc": {
          "line": 416,
          "column": 19,
          "position": 3281
        }
      }
    },
    {
      "format": "tsx",
      "lines": 12,
      "fragment": ";\n\n        // Ensure x and y values are numbers\n        x = typeof x === 'number' ? x : (parseFloat(String(x)) ?? 0);\n        y = typeof y === 'number' ? y : (parseFloat(String(y)) ?? 0);\n        z = z && typeof z === 'number' ? z : z ? parseFloat(String(z)) || pointSize : pointSize;\n\n        return {\n          x,\n          y,\n          z,\n          name:",
      "tokens": 0,
      "firstFile": {
        "name": "src/components/exploration/visualizations/charts/ScatterPlot.tsx",
        "start": 174,
        "end": 185,
        "startLoc": {
          "line": 174,
          "column": 10,
          "position": 1177
        },
        "endLoc": {
          "line": 185,
          "column": 2,
          "position": 1317
        }
      },
      "secondFile": {
        "name": "src/components/exploration/visualizations/charts/ScatterPlot.tsx",
        "start": 150,
        "end": 161,
        "startLoc": {
          "line": 150,
          "column": 5,
          "position": 924
        },
        "endLoc": {
          "line": 161,
          "column": 2,
          "position": 1064
        }
      }
    },
    {
      "format": "tsx",
      "lines": 12,
      "fragment": "if (interactive) {\n      const zoom = d3\n        .zoom<SVGSVGElement, unknown>()\n        .scaleExtent([0.1, 4])\n        .on('zoom', event => {\n          container.attr('transform', event?.transform);\n        });\n\n      svg.call(zoom);\n    }\n\n    // Create D3 force simulation with proper typing",
      "tokens": 0,
      "firstFile": {
        "name": "src/components/exploration/visualizations/charts/ResourceDistributionChart.tsx",
        "start": 186,
        "end": 197,
        "startLoc": {
          "line": 186,
          "column": 5,
          "position": 1057
        },
        "endLoc": {
          "line": 197,
          "column": 49,
          "position": 1146
        }
      },
      "secondFile": {
        "name": "src/components/exploration/visualizations/charts/ResourceFlowDiagram.tsx",
        "start": 182,
        "end": 193,
        "startLoc": {
          "line": 182,
          "column": 5,
          "position": 1486
        },
        "endLoc": {
          "line": 193,
          "column": 50,
          "position": 1575
        }
      }
    },
    {
      "format": "tsx",
      "lines": 6,
      "fragment": ".toFixed(2)}</Typography>\n            <Typography variant=\"body2\">Predicted: {dataPoint.predicted.toFixed(2)}</Typography>\n            {dataPoint.error !== undefined && (\n              <Typography variant=\"body2\">Error: {dataPoint.error.toFixed(2)}</Typography>\n            )}\n          </",
      "tokens": 0,
      "firstFile": {
        "name": "src/components/exploration/visualizations/charts/PredictionVisualization.tsx",
        "start": 209,
        "end": 214,
        "startLoc": {
          "line": 209,
          "column": 7,
          "position": 1842
        },
        "endLoc": {
          "line": 214,
          "column": 3,
          "position": 1925
        }
      },
      "secondFile": {
        "name": "src/components/exploration/visualizations/charts/PredictionVisualization.tsx",
        "start": 181,
        "end": 186,
        "startLoc": {
          "line": 181,
          "column": 2,
          "position": 1518
        },
        "endLoc": {
          "line": 186,
          "column": 2,
          "position": 1601
        }
      }
    },
    {
      "format": "tsx",
      "lines": 11,
      "fragment": ") {\n    return (\n      <div\n        ref={containerRef}\n        className={`${className} flex flex-col items-center justify-center rounded border border-solid border-opacity-10`}\n        style={{\n          width: typeof width === 'number' ? `${width}px` : width,\n          height: typeof height === 'number' ? `${height}px` : height,\n        }}\n      >\n        <Alert",
      "tokens": 0,
      "firstFile": {
        "name": "src/components/exploration/visualizations/charts/MemoryOptimizedCanvasChart.tsx",
        "start": 548,
        "end": 558,
        "startLoc": {
          "line": 548,
          "column": 12,
          "position": 4076
        },
        "endLoc": {
          "line": 558,
          "column": 6,
          "position": 4172
        }
      },
      "secondFile": {
        "name": "src/components/exploration/visualizations/charts/MemoryOptimizedCanvasChart.tsx",
        "start": 529,
        "end": 539,
        "startLoc": {
          "line": 529,
          "column": 14,
          "position": 3912
        },
        "endLoc": {
          "line": 539,
          "column": 17,
          "position": 4008
        }
      }
    },
    {
      "format": "javascript",
      "lines": 17,
      "fragment": "}\n      />\n\n      <Tooltip content={customTooltip || <DefaultTooltip />} />\n\n      {showLegend && <Legend />}\n\n      {/* Reference lines for thresholds or important values */}\n      {referenceLines.map((line, i) => (\n        <ReferenceLine\n          key={`ref-line-${i}`}\n          x={line.axis === 'x' ? line.value : undefined}\n          y={line.axis === 'y' ? line.value : undefined}\n          stroke={line.color || '#ff7300'}\n          label={\n            line.label\n              ? {",
      "tokens": 0,
      "firstFile": {
        "name": "src/components/exploration/visualizations/charts/LineChart.tsx",
        "start": 158,
        "end": 174,
        "startLoc": {
          "line": 158,
          "column": 11,
          "position": 1032
        },
        "endLoc": {
          "line": 174,
          "column": 2,
          "position": 1160
        }
      },
      "secondFile": {
        "name": "src/components/exploration/visualizations/charts/VirtualizedLineChart.tsx",
        "start": 401,
        "end": 266,
        "startLoc": {
          "line": 401,
          "column": 2,
          "position": 3158
        },
        "endLoc": {
          "line": 266,
          "column": 2,
          "position": 2041
        }
      }
    },
    {
      "format": "tsx",
      "lines": 40,
      "fragment": "extends BaseChartProps {\n  /** Key for X-axis values */\n  xAxisKey: string;\n\n  /** Keys for Y-axis values (multiple series) */\n  yAxisKeys: string[];\n\n  /** Whether to apply date formatting to x-axis values */\n  dateFormat?: boolean;\n\n  /** Whether to connect null data points */\n  connectNulls?: boolean;\n\n  /** Curve type for the lines */\n  curveType?: 'linear' | 'monotone' | 'step' | 'stepAfter' | 'stepBefore' | 'natural';\n\n  /** Whether to show grid lines */\n  showGrid?: boolean;\n\n  /** Whether to fill area under lines */\n  fillArea?: boolean;\n\n  /** Stroke width for the lines */\n  strokeWidth?: number;\n\n  /** X-axis label */\n  xAxisLabel?: string;\n\n  /** Y-axis label */\n  yAxisLabel?: string;\n\n  /** Whether to show dots on data points */\n  showDots?: boolean;\n\n  /** Whether to show the legend */\n  showLegend?: boolean;\n\n  /** Reference lines to display (e.g., thresholds) */\n  referenceLines?: ReferenceLineType[];\n}",
      "tokens": 0,
      "firstFile": {
        "name": "src/components/exploration/visualizations/charts/LineChart.tsx",
        "start": 34,
        "end": 73,
        "startLoc": {
          "line": 34,
          "column": 2,
          "position": 190
        },
        "endLoc": {
          "line": 73,
          "column": 2,
          "position": 373
        }
      },
      "secondFile": {
        "name": "src/components/exploration/visualizations/charts/VirtualizedLineChart.tsx",
        "start": 58,
        "end": 98,
        "startLoc": {
          "line": 58,
          "column": 2,
          "position": 321
        },
        "endLoc": {
          "line": 98,
          "column": 67,
          "position": 506
        }
      }
    },
    {
      "format": "tsx",
      "lines": 23,
      "fragment": "({\n  data,\n  xAxisKey,\n  yAxisKeys,\n  width = '100%',\n  height = 400,\n  title,\n  colors = [],\n  dateFormat = false,\n  customTooltip,\n  theme = 'light',\n  connectNulls = true,\n  curveType = 'monotone',\n  showGrid = true,\n  fillArea = false,\n  strokeWidth = 2,\n  xAxisLabel,\n  yAxisLabel,\n  showDots = true,\n  showLegend = true,\n  referenceLines = [],\n  className = '',\n  animate = true",
      "tokens": 0,
      "firstFile": {
        "name": "src/components/exploration/visualizations/charts/LineChart.tsx",
        "start": 78,
        "end": 100,
        "startLoc": {
          "line": 78,
          "column": 10,
          "position": 383
        },
        "endLoc": {
          "line": 100,
          "column": 5,
          "position": 533
        }
      },
      "secondFile": {
        "name": "src/components/exploration/visualizations/charts/VirtualizedLineChart.tsx",
        "start": 112,
        "end": 134,
        "startLoc": {
          "line": 112,
          "column": 21,
          "position": 560
        },
        "endLoc": {
          "line": 134,
          "column": 6,
          "position": 710
        }
      }
    },
    {
      "format": "tsx",
      "lines": 24,
      "fragment": "\n      >\n        <RechartsLineChart data={[]} />\n      </BaseChart>\n    );\n  }\n\n  // Handle chart click\n  const handleChartClick = (chartData: Record<string, unknown> | undefined, index: number) => {\n    if (onElementClick && chartData) {\n      onElementClick(chartData, index);\n    }\n  };\n\n  // Handle dot click event\n  const handleDotClick = (event: DotClickEvent, index: number) => {\n    if (onElementClick && event && event?.payload) {\n      onElementClick(event?.payload, index);\n    }\n  };\n\n  // Create the chart content\n  const chartContent = (\n    <RechartsLineChart",
      "tokens": 0,
      "firstFile": {
        "name": "src/components/exploration/visualizations/charts/LineChart.tsx",
        "start": 119,
        "end": 142,
        "startLoc": {
          "line": 119,
          "column": 2,
          "position": 676
        },
        "endLoc": {
          "line": 142,
          "column": 18,
          "position": 855
        }
      },
      "secondFile": {
        "name": "src/components/exploration/visualizations/charts/VirtualizedLineChart.tsx",
        "start": 341,
        "end": 364,
        "startLoc": {
          "line": 341,
          "column": 2,
          "position": 2538
        },
        "endLoc": {
          "line": 364,
          "column": 20,
          "position": 2717
        }
      }
    },
    {
      "format": "tsx",
      "lines": 19,
      "fragment": "/>\n      ))}\n\n      {/* Render each data series as a line */}\n      {yAxisKeys.map((key, index) => (\n        <Line\n          key={key}\n          type={curveType}\n          dataKey={key}\n          stroke={getColor(index, colors)}\n          activeDot={\n            showDots\n              ? {\n                  r: 6,\n                  onClick: (e: DotClickEvent) => handleDotClick(e, index),\n                }\n              : false\n          }\n          dot={showDots}",
      "tokens": 0,
      "firstFile": {
        "name": "src/components/exploration/visualizations/charts/LineChart.tsx",
        "start": 180,
        "end": 198,
        "startLoc": {
          "line": 180,
          "column": 9,
          "position": 1189
        },
        "endLoc": {
          "line": 198,
          "column": 2,
          "position": 1315
        }
      },
      "secondFile": {
        "name": "src/components/exploration/visualizations/charts/VirtualizedLineChart.tsx",
        "start": 423,
        "end": 441,
        "startLoc": {
          "line": 423,
          "column": 11,
          "position": 3320
        },
        "endLoc": {
          "line": 441,
          "column": 3,
          "position": 3447
        }
      }
    },
    {
      "format": "tsx",
      "lines": 6,
      "fragment": "strokeWidth={strokeWidth}\n          connectNulls={connectNulls}\n          name={key.charAt(0).toUpperCase() + key.slice(1).replace(/([A-Z])/g, ' $1')}\n          fill={fillArea ? getColor(index, colors) + '33' : undefined} // Add transparency for fill\n          fillOpacity={fillArea ? 0.2 : 0}\n          isAnimationActive={animate}",
      "tokens": 0,
      "firstFile": {
        "name": "src/components/exploration/visualizations/charts/LineChart.tsx",
        "start": 199,
        "end": 204,
        "startLoc": {
          "line": 199,
          "column": 11,
          "position": 1318
        },
        "endLoc": {
          "line": 204,
          "column": 2,
          "position": 1411
        }
      },
      "secondFile": {
        "name": "src/components/exploration/visualizations/charts/VirtualizedLineChart.tsx",
        "start": 442,
        "end": 447,
        "startLoc": {
          "line": 442,
          "column": 13,
          "position": 3461
        },
        "endLoc": {
          "line": 447,
          "column": 3,
          "position": 3555
        }
      }
    },
    {
      "format": "tsx",
      "lines": 19,
      "fragment": ",\n  colors = [\n    '#0a2f5c', // Dark blue\n    '#0e4c92', // Navy blue\n    '#3373c4', // Medium blue\n    '#5a9bd4', // Light blue\n    '#7fc8f8', // Sky blue\n    '#a3d8f4', // Pale blue\n    '#c6e7f5', // Very pale blue\n    '#e1f3fb', // Almost white blue\n    '#feebe2', // Very pale red\n    '#fcc5c0', // Pale red\n    '#fa9fb5', // Light red\n    '#f768a1', // Pink\n    '#dd3497', // Medium pink\n    '#ae017e', // Dark pink\n    '#7a0177', // Very dark pink/purple\n  ],\n  cellSize",
      "tokens": 0,
      "firstFile": {
        "name": "src/components/exploration/visualizations/charts/HeatMap.tsx",
        "start": 75,
        "end": 93,
        "startLoc": {
          "line": 75,
          "column": 6,
          "position": 408
        },
        "endLoc": {
          "line": 93,
          "column": 9,
          "position": 512
        }
      },
      "secondFile": {
        "name": "src/components/exploration/visualizations/charts/ViewportOptimizedHeatMap.tsx",
        "start": 126,
        "end": 144,
        "startLoc": {
          "line": 126,
          "column": 2,
          "position": 705
        },
        "endLoc": {
          "line": 144,
          "column": 6,
          "position": 809
        }
      }
    },
    {
      "format": "tsx",
      "lines": 16,
      "fragment": ".split('.');\n        let current: unknown = item;\n        for (const part of parts) {\n          if (\n            current &&\n            typeof current === 'object' &&\n            part in (current as Record<string, unknown>)\n          ) {\n            current = (current as Record<string, unknown>)[part];\n          } else {\n            current = undefined;\n            break;\n          }\n        }\n        if (typeof current === 'number') {\n          y",
      "tokens": 0,
      "firstFile": {
        "name": "src/components/exploration/visualizations/charts/HeatMap.tsx",
        "start": 171,
        "end": 186,
        "startLoc": {
          "line": 171,
          "column": 5,
          "position": 1207
        },
        "endLoc": {
          "line": 186,
          "column": 2,
          "position": 1351
        }
      },
      "secondFile": {
        "name": "src/components/exploration/visualizations/charts/HeatMap.tsx",
        "start": 149,
        "end": 164,
        "startLoc": {
          "line": 149,
          "column": 5,
          "position": 990
        },
        "endLoc": {
          "line": 164,
          "column": 2,
          "position": 1134
        }
      }
    },
    {
      "format": "tsx",
      "lines": 16,
      "fragment": ".split('.');\n        let current: unknown = item;\n        for (const part of parts) {\n          if (\n            current &&\n            typeof current === 'object' &&\n            part in (current as Record<string, unknown>)\n          ) {\n            current = (current as Record<string, unknown>)[part];\n          } else {\n            current = undefined;\n            break;\n          }\n        }\n        if (typeof current === 'number') {\n          value",
      "tokens": 0,
      "firstFile": {
        "name": "src/components/exploration/visualizations/charts/HeatMap.tsx",
        "start": 195,
        "end": 210,
        "startLoc": {
          "line": 195,
          "column": 9,
          "position": 1440
        },
        "endLoc": {
          "line": 210,
          "column": 6,
          "position": 1584
        }
      },
      "secondFile": {
        "name": "src/components/exploration/visualizations/charts/HeatMap.tsx",
        "start": 149,
        "end": 164,
        "startLoc": {
          "line": 149,
          "column": 5,
          "position": 990
        },
        "endLoc": {
          "line": 164,
          "column": 2,
          "position": 1134
        }
      }
    },
    {
      "format": "tsx",
      "lines": 22,
      "fragment": "]\n  );\n\n  // Function to get color for a value\n  const getColorForValue = useCallback(\n    (value: number) => {\n      if (colorAccessor && data && processedData) {\n        // Find the original data point for this cell\n        const cell = processedData.find(c => c.value === value);\n        if (cell) {\n          // Find the original data item\n          const originalItem = data?.find(\n            item =>\n              (item[xKey] === cell.originalX ||\n                (typeof item[xKey] === 'object' &&\n                  (item[xKey] as Record<string, unknown>).x === cell.originalX)) &&\n              (item[yKey] === cell.originalY ||\n                (typeof item[yKey] === 'object' &&\n                  (item[yKey] as Record<string, unknown>).y === cell.originalY))\n          );\n          if (originalItem) {\n            return",
      "tokens": 0,
      "firstFile": {
        "name": "src/components/exploration/visualizations/charts/HeatMap.tsx",
        "start": 284,
        "end": 305,
        "startLoc": {
          "line": 284,
          "column": 11,
          "position": 2254
        },
        "endLoc": {
          "line": 305,
          "column": 7,
          "position": 2493
        }
      },
      "secondFile": {
        "name": "src/components/exploration/visualizations/charts/ViewportOptimizedHeatMap.tsx",
        "start": 286,
        "end": 370,
        "startLoc": {
          "line": 286,
          "column": 27,
          "position": 2257
        },
        "endLoc": {
          "line": 370,
          "column": 15,
          "position": 3262
        }
      }
    },
    {
      "format": "tsx",
      "lines": 16,
      "fragment": ") {\n            return colorAccessor(originalItem);\n          }\n        }\n      }\n\n      // Use gradient if no colorAccessor or original item not found\n      if (valueRange === 0) return colors[Math.floor(colors.length / 2)];\n      const normalizedValue = Math.max(0, Math.min(1, (value - effectiveMinValue) / valueRange));\n      const colorIndex = Math.min(colors.length - 1, Math.floor(normalizedValue * colors.length));\n      return colors[colorIndex];\n    },\n    [colorAccessor, data, processedData, xKey, yKey, valueRange, colors, effectiveMinValue]\n  );\n\n  // Handle click on a cell",
      "tokens": 0,
      "firstFile": {
        "name": "src/components/exploration/visualizations/charts/HeatMap.tsx",
        "start": 304,
        "end": 319,
        "startLoc": {
          "line": 304,
          "column": 13,
          "position": 2488
        },
        "endLoc": {
          "line": 319,
          "column": 26,
          "position": 2660
        }
      },
      "secondFile": {
        "name": "src/components/exploration/visualizations/charts/ViewportOptimizedHeatMap.tsx",
        "start": 305,
        "end": 320,
        "startLoc": {
          "line": 305,
          "column": 14,
          "position": 2493
        },
        "endLoc": {
          "line": 320,
          "column": 50,
          "position": 2665
        }
      }
    },
    {
      "format": "tsx",
      "lines": 19,
      "fragment": "]\n  );\n\n  // Handle click on a cell\n  const handleCellClick = useCallback(\n    (cell: HeatMapCell) => {\n      if (onElementClick) {\n        const originalItem = data?.find(\n          item =>\n            (item[xKey] === cell.originalX ||\n              (typeof item[xKey] === 'object' &&\n                (item[xKey] as Record<string, unknown>).x === cell.originalX)) &&\n            (item[yKey] === cell.originalY ||\n              (typeof item[yKey] === 'object' &&\n                (item[yKey] as Record<string, unknown>).y === cell.originalY))\n        );\n\n        if (originalItem) {\n          onElementClick(originalItem)",
      "tokens": 0,
      "firstFile": {
        "name": "src/components/exploration/visualizations/charts/HeatMap.tsx",
        "start": 316,
        "end": 334,
        "startLoc": {
          "line": 316,
          "column": 18,
          "position": 2652
        },
        "endLoc": {
          "line": 334,
          "column": 2,
          "position": 2847
        }
      },
      "secondFile": {
        "name": "src/components/exploration/visualizations/charts/ViewportOptimizedHeatMap.tsx",
        "start": 353,
        "end": 370,
        "startLoc": {
          "line": 353,
          "column": 13,
          "position": 3072
        },
        "endLoc": {
          "line": 370,
          "column": 2,
          "position": 3265
        }
      }
    },
    {
      "format": "tsx",
      "lines": 10,
      "fragment": "data?.forEach(item => {\n      const x = Number(item[xAxisKey] ?? 0);\n      const y = Number(item[yAxisKey] ?? 0);\n\n      // Skip points outside the visible range\n      if (x < domains.x[0] || x > domains.x[1] || y < domains.y[0] || y > domains.y[1]) {\n        return;\n      }\n\n      // Convert to normalized device coordinates (WebGL space: -1 to 1)",
      "tokens": 0,
      "firstFile": {
        "name": "src/components/exploration/visualizations/charts/CanvasScatterPlot.tsx",
        "start": 622,
        "end": 631,
        "startLoc": {
          "line": 622,
          "column": 5,
          "position": 5700
        },
        "endLoc": {
          "line": 631,
          "column": 67,
          "position": 5823
        }
      },
      "secondFile": {
        "name": "src/components/exploration/visualizations/charts/CanvasScatterPlot.tsx",
        "start": 550,
        "end": 559,
        "startLoc": {
          "line": 550,
          "column": 5,
          "position": 5043
        },
        "endLoc": {
          "line": 559,
          "column": 6,
          "position": 5166
        }
      }
    },
    {
      "format": "tsx",
      "lines": 6,
      "fragment": "| null>(null);\n  const [zoom, setZoom] = useState(1);\n  const [pan, setPan] = useState({ x: 0, y: 0 });\n  const [isDragging, setIsDragging] = useState(false);\n  const [dragStart, setDragStart] = useState({ x: 0, y: 0 });\n  const [animationProgress",
      "tokens": 0,
      "firstFile": {
        "name": "src/components/exploration/visualizations/charts/CanvasLineChart.tsx",
        "start": 207,
        "end": 212,
        "startLoc": {
          "line": 207,
          "column": 2,
          "position": 1596
        },
        "endLoc": {
          "line": 212,
          "column": 18,
          "position": 1707
        }
      },
      "secondFile": {
        "name": "src/components/exploration/visualizations/charts/CanvasScatterPlot.tsx",
        "start": 119,
        "end": 124,
        "startLoc": {
          "line": 119,
          "column": 2,
          "position": 887
        },
        "endLoc": {
          "line": 124,
          "column": 12,
          "position": 998
        }
      }
    },
    {
      "format": "tsx",
      "lines": 29,
      "fragment": ".current.height = height;\n    }\n  }, []);\n\n  // Debounced version of updateDimensions\n  const debouncedUpdateDimensions = useMemo(\n    () => debounce(updateDimensions, 100),\n    [updateDimensions]\n  );\n\n  // Set up ResizeObserver\n  useEffect(() => {\n    updateDimensions();\n\n    const observer = new ResizeObserver(debouncedUpdateDimensions);\n    if (containerRef.current) {\n      observer.observe(containerRef.current);\n    }\n\n    window.addEventListener('resize', debouncedUpdateDimensions);\n\n    return () => {\n      observer.disconnect();\n      window.removeEventListener('resize', debouncedUpdateDimensions);\n      debouncedUpdateDimensions.cancel();\n    };\n  }, [debouncedUpdateDimensions]);\n\n  // Animation effect",
      "tokens": 0,
      "firstFile": {
        "name": "src/components/exploration/visualizations/charts/CanvasLineChart.tsx",
        "start": 374,
        "end": 402,
        "startLoc": {
          "line": 374,
          "column": 10,
          "position": 3516
        },
        "endLoc": {
          "line": 402,
          "column": 20,
          "position": 3705
        }
      },
      "secondFile": {
        "name": "src/components/exploration/visualizations/charts/CanvasScatterPlot.tsx",
        "start": 417,
        "end": 445,
        "startLoc": {
          "line": 417,
          "column": 15,
          "position": 3643
        },
        "endLoc": {
          "line": 445,
          "column": 33,
          "position": 3832
        }
      }
    },
    {
      "format": "tsx",
      "lines": 11,
      "fragment": "for (let i = 0; i <= 10; i++) {\n        const x = domains.x[0] + (i / 10) * (domains.x[1] - domains.x[0]);\n        const xPixel = scales.x(x);\n\n        ctx.beginPath();\n        ctx.moveTo(xPixel, scales.y(domains.y[0]));\n        ctx.lineTo(xPixel, scales.y(domains.y[1]));\n        ctx.stroke();\n      }\n\n      // Y grid lines (5 horizontal lines)",
      "tokens": 0,
      "firstFile": {
        "name": "src/components/exploration/visualizations/charts/CanvasLineChart.tsx",
        "start": 452,
        "end": 462,
        "startLoc": {
          "line": 452,
          "column": 7,
          "position": 4125
        },
        "endLoc": {
          "line": 462,
          "column": 37,
          "position": 4276
        }
      },
      "secondFile": {
        "name": "src/components/exploration/visualizations/charts/CanvasScatterPlot.tsx",
        "start": 466,
        "end": 476,
        "startLoc": {
          "line": 466,
          "column": 7,
          "position": 3997
        },
        "endLoc": {
          "line": 476,
          "column": 21,
          "position": 4148
        }
      }
    },
    {
      "format": "tsx",
      "lines": 35,
      "fragment": ") * (domains.y[1] - domains.y[0]);\n        const yPixel = scales.y(y);\n\n        ctx.beginPath();\n        ctx.moveTo(scales.x(domains.x[0]), yPixel);\n        ctx.lineTo(scales.x(domains.x[1]), yPixel);\n        ctx.stroke();\n      }\n    }\n\n    // Draw axes\n    if (showAxes) {\n      ctx.strokeStyle = theme.palette.mode === 'dark' ? '#fff' : '#000';\n      ctx.lineWidth = 2;\n\n      // X-axis\n      ctx.beginPath();\n      ctx.moveTo(scales.x(domains.x[0]), scales.y(0));\n      ctx.lineTo(scales.x(domains.x[1]), scales.y(0));\n      ctx.stroke();\n\n      // Y-axis\n      ctx.beginPath();\n      ctx.moveTo(scales.x(0), scales.y(domains.y[0]));\n      ctx.lineTo(scales.x(0), scales.y(domains.y[1]));\n      ctx.stroke();\n    }\n\n    // Draw axis labels if enabled\n    if (showAxisLabels) {\n      ctx.fillStyle = theme.palette.mode === 'dark' ? '#fff' : '#000';\n      ctx.font = '12px Arial';\n      ctx.textAlign = 'center';\n\n      // X-axis labels (5 evenly spaced labels)",
      "tokens": 0,
      "firstFile": {
        "name": "src/components/exploration/visualizations/charts/CanvasLineChart.tsx",
        "start": 464,
        "end": 498,
        "startLoc": {
          "line": 464,
          "column": 2,
          "position": 4326
        },
        "endLoc": {
          "line": 498,
          "column": 42,
          "position": 4692
        }
      },
      "secondFile": {
        "name": "src/components/exploration/visualizations/charts/CanvasScatterPlot.tsx",
        "start": 478,
        "end": 512,
        "startLoc": {
          "line": 478,
          "column": 3,
          "position": 4198
        },
        "endLoc": {
          "line": 512,
          "column": 17,
          "position": 4564
        }
      }
    },
    {
      "format": "tsx",
      "lines": 27,
      "fragment": ") * (domains.y[1] - domains.y[0]);\n        const yPixel = scales.y(y);\n\n        ctx.fillText(y.toFixed(1), scales.x(domains.x[0]) - 10, yPixel + 4);\n      }\n\n      // Axis titles\n      if (xAxisLabel) {\n        ctx.textAlign = 'center';\n        ctx.fillText(\n          xAxisLabel,\n          scales.x(domains.x[0] + (domains.x[1] - domains.x[0]) / 2),\n          canvas.height - 10\n        );\n      }\n\n      if (yAxisLabel) {\n        ctx.save();\n        ctx.translate(15, scales.y(domains.y[0] + (domains.y[1] - domains.y[0]) / 2));\n        ctx.rotate(-Math.PI / 2);\n        ctx.textAlign = 'center';\n        ctx.fillText(yAxisLabel, 0, 0);\n        ctx.restore();\n      }\n    }\n\n    // Draw legend",
      "tokens": 0,
      "firstFile": {
        "name": "src/components/exploration/visualizations/charts/CanvasLineChart.tsx",
        "start": 514,
        "end": 540,
        "startLoc": {
          "line": 514,
          "column": 2,
          "position": 4914
        },
        "endLoc": {
          "line": 540,
          "column": 15,
          "position": 5202
        }
      },
      "secondFile": {
        "name": "src/components/exploration/visualizations/charts/CanvasScatterPlot.tsx",
        "start": 523,
        "end": 549,
        "startLoc": {
          "line": 523,
          "column": 3,
          "position": 4752
        },
        "endLoc": {
          "line": 549,
          "column": 20,
          "position": 5040
        }
      }
    },
    {
      "format": "tsx",
      "lines": 17,
      "fragment": ";\n\n        legendItems.forEach(item => {\n          // Draw color box\n          ctx.fillStyle = item?.color;\n          ctx.fillRect(x, y - 9, 12, 9);\n          ctx.strokeStyle = 'rgba(0, 0, 0, 0.3)';\n          ctx.strokeRect(x, y - 9, 12, 9);\n\n          // Draw label\n          ctx.fillStyle = theme.palette.mode === 'dark' ? '#fff' : '#000';\n          ctx.textAlign = 'left';\n          ctx.fillText(item?.label, x + 16, y);\n\n          x += ctx.measureText(item?.label).width + 30;\n        });\n      } else if (legendPosition === 'right'",
      "tokens": 0,
      "firstFile": {
        "name": "src/components/exploration/visualizations/charts/CanvasLineChart.tsx",
        "start": 569,
        "end": 585,
        "startLoc": {
          "line": 569,
          "column": 3,
          "position": 5521
        },
        "endLoc": {
          "line": 585,
          "column": 8,
          "position": 5707
        }
      },
      "secondFile": {
        "name": "src/components/exploration/visualizations/charts/CanvasLineChart.tsx",
        "start": 551,
        "end": 567,
        "startLoc": {
          "line": 551,
          "column": 3,
          "position": 5306
        },
        "endLoc": {
          "line": 567,
          "column": 9,
          "position": 5492
        }
      }
    },
    {
      "format": "tsx",
      "lines": 15,
      "fragment": ";\n\n        legendItems.forEach(item => {\n          // Draw color box\n          ctx.fillStyle = item?.color;\n          ctx.fillRect(x, y - 9, 12, 9);\n          ctx.strokeStyle = 'rgba(0, 0, 0, 0.3)';\n          ctx.strokeRect(x, y - 9, 12, 9);\n\n          // Draw label\n          ctx.fillStyle = theme.palette.mode === 'dark' ? '#fff' : '#000';\n          ctx.textAlign = 'left';\n          ctx.fillText(item?.label, x + 16, y);\n\n          y",
      "tokens": 0,
      "firstFile": {
        "name": "src/components/exploration/visualizations/charts/CanvasLineChart.tsx",
        "start": 587,
        "end": 601,
        "startLoc": {
          "line": 587,
          "column": 3,
          "position": 5736
        },
        "endLoc": {
          "line": 601,
          "column": 2,
          "position": 5884
        }
      },
      "secondFile": {
        "name": "src/components/exploration/visualizations/charts/CanvasLineChart.tsx",
        "start": 551,
        "end": 565,
        "startLoc": {
          "line": 551,
          "column": 3,
          "position": 5306
        },
        "endLoc": {
          "line": 565,
          "column": 2,
          "position": 5454
        }
      }
    },
    {
      "format": "tsx",
      "lines": 18,
      "fragment": "10;\n\n        legendItems.forEach(item => {\n          // Draw color box\n          ctx.fillStyle = item?.color;\n          ctx.fillRect(x, y - 9, 12, 9);\n          ctx.strokeStyle = 'rgba(0, 0, 0, 0.3)';\n          ctx.strokeRect(x, y - 9, 12, 9);\n\n          // Draw label\n          ctx.fillStyle = theme.palette.mode === 'dark' ? '#fff' : '#000';\n          ctx.textAlign = 'left';\n          ctx.fillText(item?.label, x + 16, y);\n\n          y += 20;\n        });\n      }\n    }",
      "tokens": 0,
      "firstFile": {
        "name": "src/components/exploration/visualizations/charts/CanvasLineChart.tsx",
        "start": 605,
        "end": 622,
        "startLoc": {
          "line": 605,
          "column": 2,
          "position": 5930
        },
        "endLoc": {
          "line": 622,
          "column": 2,
          "position": 6095
        }
      },
      "secondFile": {
        "name": "src/components/exploration/visualizations/charts/CanvasLineChart.tsx",
        "start": 569,
        "end": 603,
        "startLoc": {
          "line": 569,
          "column": 2,
          "position": 5520
        },
        "endLoc": {
          "line": 603,
          "column": 5,
          "position": 5899
        }
      }
    },
    {
      "format": "tsx",
      "lines": 13,
      "fragment": "setIsDragging(true);\n      setDragStart({ x: e.clientX, y: e.clientY });\n    },\n    [interactive]\n  );\n\n  // Handle mouse up for panning\n  const handleMouseUp = useCallback(() => {\n    setIsDragging(false);\n  }, []);\n\n  // Handle mouse move for panning\n  const handleMouseMove",
      "tokens": 0,
      "firstFile": {
        "name": "src/components/exploration/visualizations/charts/CanvasLineChart.tsx",
        "start": 747,
        "end": 759,
        "startLoc": {
          "line": 747,
          "column": 7,
          "position": 7166
        },
        "endLoc": {
          "line": 759,
          "column": 16,
          "position": 7252
        }
      },
      "secondFile": {
        "name": "src/components/exploration/visualizations/charts/CanvasScatterPlot.tsx",
        "start": 725,
        "end": 737,
        "startLoc": {
          "line": 725,
          "column": 7,
          "position": 6844
        },
        "endLoc": {
          "line": 737,
          "column": 22,
          "position": 6930
        }
      }
    },
    {
      "format": "tsx",
      "lines": 13,
      "fragment": ");\n\n      // If dragging, handle panning\n      if (isDragging && interactive) {\n        const dx = e.clientX - dragStart.x;\n        const dy = e.clientY - dragStart.y;\n\n        setPan(prev => ({ x: prev.x + dx, y: prev.y + dy }));\n        setDragStart({ x: e.clientX, y: e.clientY });\n        return;\n      }\n\n      // Otherwise, handle hover effects",
      "tokens": 0,
      "firstFile": {
        "name": "src/components/exploration/visualizations/charts/CanvasLineChart.tsx",
        "start": 769,
        "end": 781,
        "startLoc": {
          "line": 769,
          "column": 2,
          "position": 7373
        },
        "endLoc": {
          "line": 781,
          "column": 35,
          "position": 7501
        }
      },
      "secondFile": {
        "name": "src/components/exploration/visualizations/charts/CanvasScatterPlot.tsx",
        "start": 752,
        "end": 764,
        "startLoc": {
          "line": 752,
          "column": 2,
          "position": 7081
        },
        "endLoc": {
          "line": 764,
          "column": 61,
          "position": 7209
        }
      }
    },
    {
      "format": "tsx",
      "lines": 20,
      "fragment": ",\n    ]\n  );\n\n  // Handle wheel for zooming\n  const handleWheel = useCallback(\n    (e: React.WheelEvent<HTMLCanvasElement>) => {\n      if (!interactive) return;\n\n      e.preventDefault();\n\n      const zoomFactor = e.deltaY < 0 ? 1.1 : 0.9;\n      setZoom(prev => Math.max(0.1, Math.min(10, prev * zoomFactor)));\n    },\n    [interactive]\n  );\n\n  // Render the visualization\n  useEffect(() => {\n    renderChart",
      "tokens": 0,
      "firstFile": {
        "name": "src/components/exploration/visualizations/charts/CanvasLineChart.tsx",
        "start": 842,
        "end": 861,
        "startLoc": {
          "line": 842,
          "column": 10,
          "position": 7986
        },
        "endLoc": {
          "line": 861,
          "column": 12,
          "position": 8130
        }
      },
      "secondFile": {
        "name": "src/components/exploration/visualizations/charts/CanvasScatterPlot.tsx",
        "start": 805,
        "end": 824,
        "startLoc": {
          "line": 805,
          "column": 14,
          "position": 7551
        },
        "endLoc": {
          "line": 824,
          "column": 3,
          "position": 7695
        }
      }
    },
    {
      "format": "tsx",
      "lines": 22,
      "fragment": "]);\n\n  // If no data, show error\n  if (!data || data?.length === 0) {\n    return (\n      <div\n        className={`${className} flex flex-col items-center justify-center rounded border border-solid border-opacity-10`}\n        style={{\n          width: typeof width === 'number' ? `${width}px` : width,\n          height: typeof height === 'number' ? `${height}px` : height,\n        }}\n      >\n        <Typography variant=\"body1\" color=\"text.secondary\">\n          {errorMessage || 'No data available'}\n        </Typography>\n      </div>\n    );\n  }\n\n  return (\n    <div\n      className={`",
      "tokens": 0,
      "firstFile": {
        "name": "src/components/exploration/visualizations/charts/CanvasLineChart.tsx",
        "start": 862,
        "end": 883,
        "startLoc": {
          "line": 862,
          "column": 18,
          "position": 8150
        },
        "endLoc": {
          "line": 883,
          "column": 2,
          "position": 8319
        }
      },
      "secondFile": {
        "name": "src/components/exploration/visualizations/charts/CanvasScatterPlot.tsx",
        "start": 836,
        "end": 857,
        "startLoc": {
          "line": 836,
          "column": 5,
          "position": 7801
        },
        "endLoc": {
          "line": 857,
          "column": 10,
          "position": 7970
        }
      }
    },
    {
      "format": "tsx",
      "lines": 16,
      "fragment": ",\n      }}\n    >\n      {/* Chart title and subtitle */}\n      {(title || subtitle) && (\n        <div className=\"mb-2 text-center\">\n          {title && <Typography variant=\"h6\">{title}</Typography>}\n          {subtitle && (\n            <Typography variant=\"body2\" color=\"text.secondary\">\n              {subtitle}\n            </Typography>\n          )}\n        </div>\n      )}\n\n      {/* Legend */",
      "tokens": 0,
      "firstFile": {
        "name": "src/components/exploration/visualizations/charts/CanvasLineChart.tsx",
        "start": 886,
        "end": 901,
        "startLoc": {
          "line": 886,
          "column": 7,
          "position": 8380
        },
        "endLoc": {
          "line": 901,
          "column": 13,
          "position": 8493
        }
      },
      "secondFile": {
        "name": "src/components/exploration/visualizations/charts/CanvasScatterPlot.tsx",
        "start": 862,
        "end": 877,
        "startLoc": {
          "line": 862,
          "column": 9,
          "position": 8041
        },
        "endLoc": {
          "line": 877,
          "column": 36,
          "position": 8154
        }
      }
    },
    {
      "format": "tsx",
      "lines": 6,
      "fragment": ") {\n    return (\n      <div className={`chart-container ${themeClasses} rounded-lg p-4 shadow-md ${className}`}>\n        {title && <h3 className=\"chart-title mb-2 text-lg font-semibold\">{title}</h3>}\n        {subtitle && <p className=\"chart-subtitle mb-4 text-sm text-gray-500\">{subtitle}</p>}\n        <div className=\"flex h-64 items-center justify-center",
      "tokens": 0,
      "firstFile": {
        "name": "src/components/exploration/visualizations/charts/BaseChart.tsx",
        "start": 210,
        "end": 215,
        "startLoc": {
          "line": 210,
          "column": 2,
          "position": 1213
        },
        "endLoc": {
          "line": 215,
          "column": 38,
          "position": 1294
        }
      },
      "secondFile": {
        "name": "src/components/exploration/visualizations/charts/BaseChart.tsx",
        "start": 181,
        "end": 186,
        "startLoc": {
          "line": 181,
          "column": 13,
          "position": 992
        },
        "endLoc": {
          "line": 186,
          "column": 51,
          "position": 1073
        }
      }
    },
    {
      "format": "javascript",
      "lines": 33,
      "fragment": "}\n    >\n      {showGrid && <CartesianGrid strokeDasharray=\"3 3\" />}\n\n      {layoutProps.xAxis}\n      {layoutProps.yAxis}\n\n      <Tooltip content={customTooltip || <DefaultTooltip />} />\n\n      {showLegend && <Legend />}\n\n      {/* Reference lines for thresholds or important values */}\n      {referenceLines.map((line, i) => (\n        <ReferenceLine\n          key={`ref-line-${i}`}\n          x={line.axis === 'x' ? line.value : undefined}\n          y={line.axis === 'y' ? line.value : undefined}\n          stroke={line.color || '#ff7300'}\n          label={\n            line.label\n              ? ({\n                  value: line.label,\n                  position: line.position || 'center',\n                } as LabelProps)\n              : undefined\n          }\n        />\n      ))}\n\n      {/* Render each data series as a bar */}\n      {yAxisKeys.map((key, index) => (\n        <Bar\n          key={key",
      "tokens": 0,
      "firstFile": {
        "name": "src/components/exploration/visualizations/charts/BarChart.tsx",
        "start": 198,
        "end": 230,
        "startLoc": {
          "line": 198,
          "column": 2,
          "position": 1143
        },
        "endLoc": {
          "line": 230,
          "column": 4,
          "position": 1369
        }
      },
      "secondFile": {
        "name": "src/components/exploration/visualizations/charts/VirtualizedLineChart.tsx",
        "start": 401,
        "end": 278,
        "startLoc": {
          "line": 401,
          "column": 2,
          "position": 3158
        },
        "endLoc": {
          "line": 278,
          "column": 7,
          "position": 2101
        }
      }
    },
    {
      "format": "tsx",
      "lines": 6,
      "fragment": ": (data: Record<string, unknown>, chartWidth: number, chartHeight: number, options?: VisualizationOptions) => {\n      if (!Array.isArray(data)) {\n        return <VisualizationErrorBoundary fallback={<p>Invalid data format for Line Chart.</p>}><div /></VisualizationErrorBoundary>;\n      }\n      return (\n        <LineChartComponent",
      "tokens": 0,
      "firstFile": {
        "name": "src/components/exploration/unified/core/BaseAnalysisVisualizer.tsx",
        "start": 185,
        "end": 190,
        "startLoc": {
          "line": 185,
          "column": 5,
          "position": 1337
        },
        "endLoc": {
          "line": 190,
          "column": 19,
          "position": 1430
        }
      },
      "secondFile": {
        "name": "src/components/exploration/unified/core/BaseAnalysisVisualizer.tsx",
        "start": 169,
        "end": 174,
        "startLoc": {
          "line": 169,
          "column": 4,
          "position": 1132
        },
        "endLoc": {
          "line": 174,
          "column": 18,
          "position": 1225
        }
      }
    },
    {
      "format": "tsx",
      "lines": 11,
      "fragment": "data={data as Record<string, unknown>[]}\n          width={chartWidth}\n          height={chartHeight}\n          xAxisKey={(options?.xAxisKey as string) || 'label'}\n          yAxisKeys={(options?.yAxisKeys as string[]) || ['value']}\n          {...(options as Record<string, unknown>)}\n        />\n      );\n    },\n\n    scatter",
      "tokens": 0,
      "firstFile": {
        "name": "src/components/exploration/unified/core/BaseAnalysisVisualizer.tsx",
        "start": 191,
        "end": 201,
        "startLoc": {
          "line": 191,
          "column": 11,
          "position": 1433
        },
        "endLoc": {
          "line": 201,
          "column": 8,
          "position": 1541
        }
      },
      "secondFile": {
        "name": "src/components/exploration/unified/core/BaseAnalysisVisualizer.tsx",
        "start": 175,
        "end": 185,
        "startLoc": {
          "line": 175,
          "column": 11,
          "position": 1228
        },
        "endLoc": {
          "line": 185,
          "column": 5,
          "position": 1336
        }
      }
    },
    {
      "format": "tsx",
      "lines": 6,
      "fragment": ": (data: Record<string, unknown>, chartWidth: number, chartHeight: number, options?: VisualizationOptions) => {\n      if (!Array.isArray(data)) {\n        return <VisualizationErrorBoundary fallback={<p>Invalid data format for Scatter Plot.</p>}><div /></VisualizationErrorBoundary>;\n      }\n      return (\n        <ScatterPlot",
      "tokens": 0,
      "firstFile": {
        "name": "src/components/exploration/unified/core/BaseAnalysisVisualizer.tsx",
        "start": 201,
        "end": 206,
        "startLoc": {
          "line": 201,
          "column": 8,
          "position": 1542
        },
        "endLoc": {
          "line": 206,
          "column": 12,
          "position": 1635
        }
      },
      "secondFile": {
        "name": "src/components/exploration/unified/core/BaseAnalysisVisualizer.tsx",
        "start": 169,
        "end": 174,
        "startLoc": {
          "line": 169,
          "column": 4,
          "position": 1132
        },
        "endLoc": {
          "line": 174,
          "column": 18,
          "position": 1225
        }
      }
    },
    {
      "format": "tsx",
      "lines": 7,
      "fragment": "const dx = coords.x - system.coordinates.x;\n          const dy = coords.y - system.coordinates.y;\n          const dz = (coords.z ?? 0) - (system.coordinates.z ?? 0);\n\n          const distance = Math.sqrt(dx * dx + dy * dy + dz * dz);\n\n          // Consider the resource part of the system if it's within a certain distance",
      "tokens": 0,
      "firstFile": {
        "name": "src/components/exploration/unified/context/ExplorationContext.tsx",
        "start": 356,
        "end": 362,
        "startLoc": {
          "line": 356,
          "column": 11,
          "position": 3279
        },
        "endLoc": {
          "line": 362,
          "column": 78,
          "position": 3390
        }
      },
      "secondFile": {
        "name": "src/components/exploration/unified/context/ExplorationContext.tsx",
        "start": 303,
        "end": 309,
        "startLoc": {
          "line": 303,
          "column": 11,
          "position": 2748
        },
        "endLoc": {
          "line": 309,
          "column": 77,
          "position": 2859
        }
      }
    },
    {
      "format": "tsx",
      "lines": 21,
      "fragment": "} from 'lucide-react';\n\ninterface Officer {\n  id: string;\n  name: string;\n  portrait: string;\n  level: number;\n  xp: number;\n  nextLevelXp: number;\n  role: 'Squad Leader' | 'Captain';\n  status: 'training' | 'assigned' | 'available';\n  specialization: 'War' | 'Recon' | 'Mining';\n  skills: {\n    combat: number;\n    leadership: number;\n    technical: number;\n  };\n  assignedTo?: string;\n  trainingProgress?: number;\n  traits: string[];\n  stats",
      "tokens": 0,
      "firstFile": {
        "name": "src/components/buildings/modules/academy/OfficerCard.tsx",
        "start": 1,
        "end": 21,
        "startLoc": {
          "line": 1,
          "column": 2,
          "position": 21
        },
        "endLoc": {
          "line": 21,
          "column": 6,
          "position": 175
        }
      },
      "secondFile": {
        "name": "src/components/buildings/modules/academy/OfficerDetails.tsx",
        "start": 1,
        "end": 21,
        "startLoc": {
          "line": 1,
          "column": 2,
          "position": 24
        },
        "endLoc": {
          "line": 21,
          "column": 2,
          "position": 177
        }
      }
    },
    {
      "format": "tsx",
      "lines": 16,
      "fragment": ") {\n  const getSpecializationColor = () => {\n    switch (officer.specialization) {\n      case 'War':\n        return 'red';\n      case 'Recon':\n        return 'cyan';\n      case 'Mining':\n        return 'amber';\n      default:\n        return 'blue';\n    }\n  };\n\n  const color = getSpecializationColor();\n  const particleCount = quality === 'high' ? 8",
      "tokens": 0,
      "firstFile": {
        "name": "src/components/buildings/modules/academy/OfficerCard.tsx",
        "start": 36,
        "end": 51,
        "startLoc": {
          "line": 36,
          "column": 17,
          "position": 295
        },
        "endLoc": {
          "line": 51,
          "column": 2,
          "position": 405
        }
      },
      "secondFile": {
        "name": "src/components/buildings/modules/academy/OfficerDetails.tsx",
        "start": 37,
        "end": 52,
        "startLoc": {
          "line": 37,
          "column": 20,
          "position": 299
        },
        "endLoc": {
          "line": 52,
          "column": 3,
          "position": 409
        }
      }
    },
    {
      "format": "tsx",
      "lines": 18,
      "fragment": "{officer.status === 'training' && (\n          <>\n            <div className=\"absolute inset-0 animate-pulse bg-gradient-to-t from-violet-500/20\" />\n            {Array.from({ length: particleCount }).map((_, i) => (\n              <div\n                key={i}\n                className=\"absolute h-1 w-1 rounded-full bg-violet-400\"\n                style={{\n                  left: `${Math.random() * 100}%`,\n                  top: `${Math.random() * 100}%`,\n                  animation: `float ${1 + Math.random()}s infinite`,\n                }}\n              />\n            ))}\n          </>\n        )}\n\n        {",
      "tokens": 0,
      "firstFile": {
        "name": "src/components/buildings/modules/academy/OfficerCard.tsx",
        "start": 166,
        "end": 183,
        "startLoc": {
          "line": 166,
          "column": 9,
          "position": 1311
        },
        "endLoc": {
          "line": 183,
          "column": 2,
          "position": 1471
        }
      },
      "secondFile": {
        "name": "src/components/buildings/modules/academy/OfficerDetails.tsx",
        "start": 63,
        "end": 79,
        "startLoc": {
          "line": 63,
          "column": 13,
          "position": 517
        },
        "endLoc": {
          "line": 79,
          "column": 3,
          "position": 676
        }
      }
    },
    {
      "format": "tsx",
      "lines": 16,
      "fragment": "\">\n        <div className=\"mb-1 flex justify-between text-xs\">\n          <span className=\"text-gray-400\">Level {officer.level}</span>\n          <span className=\"text-gray-400\">\n            {officer.xp}/{officer.nextLevelXp} XP\n          </span>\n        </div>\n        <div className=\"h-1 overflow-hidden rounded-full bg-gray-700\">\n          <div\n            className={`h-full bg-${color}-500 rounded-full`}\n            style={{ width: `${(officer.xp / officer.nextLevelXp) * 100}%` }}\n          />\n        </div>\n      </div>\n\n      {/* Skills */",
      "tokens": 0,
      "firstFile": {
        "name": "src/components/buildings/modules/academy/OfficerCard.tsx",
        "start": 195,
        "end": 210,
        "startLoc": {
          "line": 195,
          "column": 5,
          "position": 1579
        },
        "endLoc": {
          "line": 210,
          "column": 13,
          "position": 1723
        }
      },
      "secondFile": {
        "name": "src/components/buildings/modules/academy/OfficerCard.tsx",
        "start": 87,
        "end": 102,
        "startLoc": {
          "line": 87,
          "column": 5,
          "position": 700
        },
        "endLoc": {
          "line": 102,
          "column": 12,
          "position": 844
        }
      }
    },
    {
      "format": "tsx",
      "lines": 43,
      "fragment": "{/* Stats */}\n      <div className=\"mb-4 grid grid-cols-3 gap-2\">\n        <div title={`Combat rating affects battle performance`}>\n          <div className=\"mb-1 flex items-center text-xs text-gray-500\">\n            <Sword className=\"mr-1 h-3 w-3\" />\n            Combat\n          </div>\n          <div className=\"text-sm text-gray-300\">{officer.stats.combat}</div>\n        </div>\n        <div title={`Leadership affects squad coordination`}>\n          <div className=\"mb-1 flex items-center text-xs text-gray-500\">\n            <Users className=\"mr-1 h-3 w-3\" />\n            Leadership\n          </div>\n          <div className=\"text-sm text-gray-300\">{officer.stats.leadership}</div>\n        </div>\n        <div title={`Technical affects ship systems`}>\n          <div className=\"mb-1 flex items-center text-xs text-gray-500\">\n            <Database className=\"mr-1 h-3 w-3\" />\n            Technical\n          </div>\n          <div className=\"text-sm text-gray-300\">{officer.stats.technical}</div>\n        </div>\n      </div>\n\n      {/* Status Indicators */}\n      <div className=\"flex items-center space-x-2\">\n        {officer.status === 'training' && (\n          <div className=\"flex items-center text-xs text-violet-400\">\n            <Star className=\"mr-1 h-3 w-3\" />\n            In Training\n          </div>\n        )}\n        {officer.assignedTo && (\n          <div className=\"flex items-center text-xs text-cyan-400\">\n            <Radar className=\"mr-1 h-3 w-3\" />\n            On Mission\n          </div>\n        )}\n      </div>\n    </button>\n  );\n}",
      "tokens": 0,
      "firstFile": {
        "name": "src/components/buildings/modules/academy/OfficerCard.tsx",
        "start": 236,
        "end": 278,
        "startLoc": {
          "line": 236,
          "column": 7,
          "position": 1998
        },
        "endLoc": {
          "line": 278,
          "column": 2,
          "position": 2351
        }
      },
      "secondFile": {
        "name": "src/components/buildings/modules/academy/OfficerCard.tsx",
        "start": 102,
        "end": 144,
        "startLoc": {
          "line": 102,
          "column": 9,
          "position": 843
        },
        "endLoc": {
          "line": 144,
          "column": 2,
          "position": 1197
        }
      }
    },
    {
      "format": "tsx",
      "lines": 28,
      "fragment": ";\n\ninterface Officer {\n  id: string;\n  name: string;\n  portrait: string;\n  level: number;\n  xp: number;\n  nextLevelXp: number;\n  role: 'Squad Leader' | 'Captain';\n  status: 'training' | 'assigned' | 'available';\n  specialization: 'War' | 'Recon' | 'Mining';\n  skills: {\n    combat: number;\n    leadership: number;\n    technical: number;\n  };\n  assignedTo?: string;\n  trainingProgress?: number;\n  traits: string[];\n  stats: {\n    combat: number;\n    leadership: number;\n    technical: number;\n  };\n}\n\ninterface OfficersAcademyProps",
      "tokens": 0,
      "firstFile": {
        "name": "src/components/buildings/modules/academy/OfficerAcademy.tsx",
        "start": 16,
        "end": 43,
        "startLoc": {
          "line": 16,
          "column": 19,
          "position": 110
        },
        "endLoc": {
          "line": 43,
          "column": 21,
          "position": 294
        }
      },
      "secondFile": {
        "name": "src/components/buildings/modules/academy/OfficerDetails.tsx",
        "start": 1,
        "end": 28,
        "startLoc": {
          "line": 1,
          "column": 15,
          "position": 29
        },
        "endLoc": {
          "line": 28,
          "column": 17,
          "position": 210
        }
      }
    },
    {
      "format": "tsx",
      "lines": 18,
      "fragment": ";\n\ninterface Resource {\n  id: string;\n  name: string;\n  type: 'mineral' | ResourceType.GAS | ResourceType.EXOTIC;\n  abundance: number;\n  distance: number;\n  extractionRate: number;\n  depletion: number;\n  priority: number;\n  thresholds: {\n    min: number;\n    max: number;\n  };\n}\n\ninterface MiningShip",
      "tokens": 0,
      "firstFile": {
        "name": "src/components/buildings/modules/MiningHub/MiningWindow.tsx",
        "start": 68,
        "end": 85,
        "startLoc": {
          "line": 68,
          "column": 2,
          "position": 461
        },
        "endLoc": {
          "line": 85,
          "column": 11,
          "position": 567
        }
      },
      "secondFile": {
        "name": "src/components/buildings/modules/MiningHub/ResourceNode.tsx",
        "start": 5,
        "end": 21,
        "startLoc": {
          "line": 5,
          "column": 46,
          "position": 50
        },
        "endLoc": {
          "line": 21,
          "column": 18,
          "position": 155
        }
      }
    },
    {
      "format": "tsx",
      "lines": 22,
      "fragment": ".sort((a, b) => {\n              let comparison = 0;\n              switch (sortBy) {\n                case 'priority':\n                  comparison = a.priority - b.priority;\n                  break;\n                case 'name':\n                  comparison = a.name.localeCompare(b.name);\n                  break;\n                case 'type':\n                  comparison = a.type.localeCompare(b.type);\n                  break;\n                case 'abundance':\n                  comparison = b.abundance - a.abundance;\n                  break;\n                case 'distance':\n                  comparison = a.distance - b.distance;\n                  break;\n              }\n              return sortOrder === 'asc' ? comparison : -comparison;\n            })\n            .",
      "tokens": 0,
      "firstFile": {
        "name": "src/components/buildings/modules/MiningHub/MiningWindow.tsx",
        "start": 717,
        "end": 738,
        "startLoc": {
          "line": 717,
          "column": 13,
          "position": 5764
        },
        "endLoc": {
          "line": 738,
          "column": 2,
          "position": 5956
        }
      },
      "secondFile": {
        "name": "src/components/buildings/modules/MiningHub/MiningWindow.tsx",
        "start": 296,
        "end": 316,
        "startLoc": {
          "line": 296,
          "column": 7,
          "position": 2305
        },
        "endLoc": {
          "line": 316,
          "column": 2,
          "position": 2495
        }
      }
    },
    {
      "format": "tsx",
      "lines": 25,
      "fragment": ";\n\n  // Mock storage data\n  const mockStorageData = [\n    {\n      id: 'iron-storage',\n      resourceType: ResourceType.IRON,\n      currentAmount: 8500,\n      maxCapacity: 10000,\n      refiningAmount: 250,\n      refiningProgress: 0.65,\n      transferRate: 25,\n    },\n    {\n      id: 'helium-storage',\n      resourceType: ResourceType.HELIUM,\n      currentAmount: 2800,\n      maxCapacity: 5000,\n      refiningAmount: 100,\n      refiningProgress: 0.3,\n      transferRate: 15,\n    },\n  ];\n\n  // Use resourcesByType to filter resources by type",
      "tokens": 0,
      "firstFile": {
        "name": "src/components/buildings/modules/MiningHub/MineralProcessingCentre.tsx",
        "start": 106,
        "end": 130,
        "startLoc": {
          "line": 106,
          "column": 2,
          "position": 1004
        },
        "endLoc": {
          "line": 130,
          "column": 51,
          "position": 1141
        }
      },
      "secondFile": {
        "name": "src/components/buildings/modules/MiningHub/MiningWindow.tsx",
        "start": 26,
        "end": 50,
        "startLoc": {
          "line": 26,
          "column": 21,
          "position": 215
        },
        "endLoc": {
          "line": 50,
          "column": 28,
          "position": 348
        }
      }
    },
    {
      "format": "tsx",
      "lines": 6,
      "fragment": "(() => {\n    const tierBonuses = {\n      1: { extractionRate: 1, storageCapacity: 1, efficiency: 1 },\n      2: { extractionRate: 1.5, storageCapacity: 1.5, efficiency: 1.25 },\n      3: { extractionRate: 2, storageCapacity: 2, efficiency: 1.5 },\n    };",
      "tokens": 0,
      "firstFile": {
        "name": "src/components/buildings/modules/MiningHub/MineralProcessingCentre.tsx",
        "start": 154,
        "end": 159,
        "startLoc": {
          "line": 154,
          "column": 10,
          "position": 1423
        },
        "endLoc": {
          "line": 159,
          "column": 2,
          "position": 1520
        }
      },
      "secondFile": {
        "name": "src/components/buildings/modules/MiningHub/MiningWindow.tsx",
        "start": 320,
        "end": 325,
        "startLoc": {
          "line": 320,
          "column": 8,
          "position": 2531
        },
        "endLoc": {
          "line": 325,
          "column": 3,
          "position": 2629
        }
      }
    },
    {
      "format": "javascript",
      "lines": 14,
      "fragment": "={ship.id}\n            className=\"flex items-center justify-between rounded-lg bg-gray-800 p-3\"\n          >\n            <div className=\"flex items-center space-x-3\">\n              <Rocket\n                className={`h-5 w-5 ${\n                  ship.status === 'scanning'\n                    ? 'text-teal-400'\n                    : ship.status === 'investigating'\n                      ? 'text-yellow-400'\n                      : ship.status === 'returning'\n                        ? 'text-blue-400'\n                        : 'text-gray-400'\n                }`}",
      "tokens": 0,
      "firstFile": {
        "name": "src/components/buildings/modules/ExplorationHub/ReconShipStatus.tsx",
        "start": 24,
        "end": 37,
        "startLoc": {
          "line": 24,
          "column": 4,
          "position": 195
        },
        "endLoc": {
          "line": 37,
          "column": 2,
          "position": 271
        }
      },
      "secondFile": {
        "name": "src/components/ships/player/variants/reconships/ReconShipStatus.tsx",
        "start": 24,
        "end": 37,
        "startLoc": {
          "line": 24,
          "column": 4,
          "position": 195
        },
        "endLoc": {
          "line": 37,
          "column": 2,
          "position": 271
        }
      }
    },
    {
      "format": "tsx",
      "lines": 53,
      "fragment": "import { ChevronRight, Rocket } from 'lucide-react';\n\ninterface ReconShip {\n  id: string;\n  name: string;\n  status: 'idle' | 'scanning' | 'investigating' | 'returning';\n  targetSector?: string;\n  experience: number;\n  specialization: 'mapping' | 'anomaly' | 'resource';\n  efficiency: number;\n}\n\ninterface ReconShipStatusProps {\n  ships: ReconShip[];\n}\n\nexport function ReconShipStatus({ ships }: ReconShipStatusProps) {\n  return (\n    <div className=\"mt-6 rounded-lg bg-gray-800/50 p-4\">\n      <h3 className=\"mb-3 text-sm font-medium text-gray-300\">Active Recon Ships</h3>\n      <div className=\"space-y-2\">\n        {ships.map(ship => (\n          <div\n            key={ship.id}\n            className=\"flex items-center justify-between rounded-lg bg-gray-800 p-3\"\n          >\n            <div className=\"flex items-center space-x-3\">\n              <Rocket\n                className={`h-5 w-5 ${\n                  ship.status === 'scanning'\n                    ? 'text-teal-400'\n                    : ship.status === 'investigating'\n                      ? 'text-yellow-400'\n                      : ship.status === 'returning'\n                        ? 'text-blue-400'\n                        : 'text-gray-400'\n                }`}\n              />\n              <div>\n                <div className=\"text-sm font-medium text-gray-200\">{ship.name}</div>\n                <div className=\"text-xs text-gray-400\">\n                  {ship.status.charAt(0).toUpperCase() + ship.status.slice(1)} • XP:{' '}\n                  {ship.experience.toLocaleString()}\n                </div>\n              </div>\n            </div>\n            <ChevronRight className=\"h-5 w-5 text-gray-500\" />\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n}",
      "tokens": 0,
      "firstFile": {
        "name": "src/components/buildings/modules/ExplorationHub/ReconShipStatus.tsx",
        "start": 1,
        "end": 53,
        "startLoc": {
          "line": 1,
          "column": 1,
          "position": 0
        },
        "endLoc": {
          "line": 53,
          "column": 2,
          "position": 407
        }
      },
      "secondFile": {
        "name": "src/components/ships/player/variants/reconships/ReconShipStatus.tsx",
        "start": 1,
        "end": 53,
        "startLoc": {
          "line": 1,
          "column": 1,
          "position": 0
        },
        "endLoc": {
          "line": 53,
          "column": 2,
          "position": 407
        }
      }
    },
    {
      "format": "tsx",
      "lines": 32,
      "fragment": "useRef({ x: 0, y: 0 });\n\n  const handleMouseDown = (e: React.MouseEvent) => {\n    isDragging.current = true;\n    lastPosition.current = { x: e.clientX, y: e.clientY };\n  };\n\n  const handleMouseMove = (e: React.MouseEvent) => {\n    if (!isDragging.current) {\n      return;\n    }\n\n    const deltaX = e.clientX - lastPosition.current.x;\n    const deltaY = e.clientY - lastPosition.current.y;\n\n    setPosition(prev => ({\n      x: prev.x + deltaX,\n      y: prev.y + deltaY,\n    }));\n\n    lastPosition.current = { x: e.clientX, y: e.clientY };\n  };\n\n  const handleMouseUp = () => {\n    isDragging.current = false;\n  };\n\n  const handleZoom = (delta: number) => {\n    setZoom(prev => Math.max(0.5, Math.min(2, prev + delta)));\n  };\n\n  const filteredSectors",
      "tokens": 0,
      "firstFile": {
        "name": "src/components/buildings/modules/ExplorationHub/ExplorationWindow.tsx",
        "start": 136,
        "end": 167,
        "startLoc": {
          "line": 136,
          "column": 2,
          "position": 1076
        },
        "endLoc": {
          "line": 167,
          "column": 16,
          "position": 1400
        }
      },
      "secondFile": {
        "name": "src/components/buildings/modules/MiningHub/MiningMap.tsx",
        "start": 34,
        "end": 65,
        "startLoc": {
          "line": 34,
          "column": 2,
          "position": 300
        },
        "endLoc": {
          "line": 65,
          "column": 17,
          "position": 624
        }
      }
    },
    {
      "format": "tsx",
      "lines": 17,
      "fragment": "},\n            ].map(({ id, label, icon: Icon }) => (\n              <button\n                key={id}\n                onClick={() => setFilter(id as FilterType)}\n                className={`flex items-center space-x-2 rounded-lg px-3 py-2 ${\n                  filter === id\n                    ? 'bg-teal-600 text-white'\n                    : 'bg-gray-800 text-gray-400 hover:bg-gray-700'\n                }`}\n              >\n                <Icon className=\"h-4 w-4\" />\n                <span>{label}</span>\n              </button>\n            ))}\n          </div>\n        </",
      "tokens": 0,
      "firstFile": {
        "name": "src/components/buildings/modules/ExplorationHub/ExplorationWindow.tsx",
        "start": 236,
        "end": 252,
        "startLoc": {
          "line": 236,
          "column": 2,
          "position": 1998
        },
        "endLoc": {
          "line": 252,
          "column": 3,
          "position": 2114
        }
      },
      "secondFile": {
        "name": "src/components/buildings/modules/academy/OfficerAcademy.tsx",
        "start": 133,
        "end": 150,
        "startLoc": {
          "line": 133,
          "column": 2,
          "position": 1188
        },
        "endLoc": {
          "line": 150,
          "column": 2,
          "position": 1318
        }
      }
    },
    {
      "format": "tsx",
      "lines": 20,
      "fragment": ") {\n  const [currentStep, setCurrentStep] = React.useState(0);\n\n  const nextStep = () => {\n    if (currentStep < tutorialSteps.length - 1) {\n      setCurrentStep(prev => prev + 1);\n    } else {\n      onClose();\n    }\n  };\n\n  const step = tutorialSteps[currentStep];\n  const Icon = step.icon;\n\n  return (\n    <div className=\"fixed inset-0 z-50 flex items-center justify-center bg-black/50\">\n      <div className=\"mx-4 w-full max-w-md rounded-lg bg-gray-800 p-6\">\n        <div className=\"mb-6 flex items-center justify-between\">\n          <div className=\"flex items-center space-x-3\">\n            <div className=\"rounded-lg bg-teal-500/20 p-2",
      "tokens": 0,
      "firstFile": {
        "name": "src/components/buildings/modules/ExplorationHub/ExplorationTutorial.tsx",
        "start": 41,
        "end": 60,
        "startLoc": {
          "line": 41,
          "column": 25,
          "position": 242
        },
        "endLoc": {
          "line": 60,
          "column": 30,
          "position": 418
        }
      },
      "secondFile": {
        "name": "src/components/buildings/modules/MiningHub/MiningTutorial.tsx",
        "start": 47,
        "end": 66,
        "startLoc": {
          "line": 47,
          "column": 20,
          "position": 277
        },
        "endLoc": {
          "line": 66,
          "column": 32,
          "position": 453
        }
      }
    },
    {
      "format": "tsx",
      "lines": 29,
      "fragment": "\" />\n            </div>\n            <h3 className=\"text-lg font-medium text-white\">{step.title}</h3>\n          </div>\n          <button\n            onClick={onClose}\n            className=\"rounded-full p-1 transition-colors hover:bg-gray-700\"\n          >\n            <X className=\"h-5 w-5 text-gray-400\" />\n          </button>\n        </div>\n\n        <p className=\"mb-6 text-gray-300\">{step.description}</p>\n\n        <div className=\"flex items-center justify-between\">\n          <div className=\"flex space-x-1\">\n            {tutorialSteps.map((_, index) => (\n              <div\n                key={index}\n                className={`h-2 w-2 rounded-full ${\n                  index === currentStep ? 'bg-teal-500' : 'bg-gray-600'\n                }`}\n              />\n            ))}\n          </div>\n\n          <button\n            onClick={nextStep}\n            className=\"flex items-center space-x-2 rounded-lg bg-teal-600 px-4 py-2 text-white transition-colors hover:bg-teal-700",
      "tokens": 0,
      "firstFile": {
        "name": "src/components/buildings/modules/ExplorationHub/ExplorationTutorial.tsx",
        "start": 61,
        "end": 89,
        "startLoc": {
          "line": 61,
          "column": 22,
          "position": 430
        },
        "endLoc": {
          "line": 89,
          "column": 108,
          "position": 619
        }
      },
      "secondFile": {
        "name": "src/components/buildings/modules/MiningHub/MiningTutorial.tsx",
        "start": 67,
        "end": 95,
        "startLoc": {
          "line": 67,
          "column": 24,
          "position": 465
        },
        "endLoc": {
          "line": 95,
          "column": 112,
          "position": 654
        }
      }
    },
    {
      "format": "tsx",
      "lines": 22,
      "fragment": ";\n\ninterface Sector {\n  id: string;\n  name: string;\n  status: 'unmapped' | 'mapped' | 'scanning';\n  coordinates: { x: number; y: number };\n  resourcePotential: number;\n  habitabilityScore: number;\n  anomalies: Anomaly[];\n  lastScanned?: number;\n}\n\ninterface Anomaly {\n  id: string;\n  type: 'artifact' | 'signal' | 'phenomenon';\n  severity: 'low' | 'medium' | 'high';\n  description: string;\n  investigated: boolean;\n}\n\ninterface ExplorationControlsProps",
      "tokens": 0,
      "firstFile": {
        "name": "src/components/buildings/modules/ExplorationHub/ExplorationControls.tsx",
        "start": 1,
        "end": 22,
        "startLoc": {
          "line": 1,
          "column": 15,
          "position": 23
        },
        "endLoc": {
          "line": 22,
          "column": 25,
          "position": 177
        }
      },
      "secondFile": {
        "name": "src/components/buildings/modules/ExplorationHub/ExplorationWindow.tsx",
        "start": 19,
        "end": 40,
        "startLoc": {
          "line": 19,
          "column": 20,
          "position": 152
        },
        "endLoc": {
          "line": 40,
          "column": 10,
          "position": 306
        }
      }
    },
    {
      "format": "typescript",
      "lines": 19,
      "fragment": "fn();\n    if (teardownFn) {\n      teardownFn();\n    }\n  }\n\n  // Prepare for actual benchmark\n  const executionTimes: number[] = [];\n  let memoryUsage: MemoryMeasurement | null = null;\n\n  // Execute the benchmark\n  for (let i = 0; i < iterations; i++) {\n    if (setupFn) {\n      setupFn();\n    }\n\n    if (memoryMeasurement && i === Math.floor(iterations / 2)) {\n      // Measure memory usage halfway through the iterations\n      const",
      "tokens": 0,
      "firstFile": {
        "name": "src/utils/performance/benchmarks/PerformanceBenchmarkTools.ts",
        "start": 238,
        "end": 256,
        "startLoc": {
          "line": 238,
          "column": 2,
          "position": 1638
        },
        "endLoc": {
          "line": 256,
          "column": 6,
          "position": 1780
        }
      },
      "secondFile": {
        "name": "src/utils/performance/benchmarks/PerformanceBenchmarkTools.ts",
        "start": 151,
        "end": 169,
        "startLoc": {
          "line": 151,
          "column": 5,
          "position": 893
        },
        "endLoc": {
          "line": 169,
          "column": 12,
          "position": 1035
        }
      }
    },
    {
      "format": "typescript",
      "lines": 21,
      "fragment": ");\n      const endTime = performance.now();\n      executionTimes.push(endTime - startTime);\n    }\n\n    if (teardownFn) {\n      teardownFn();\n    }\n  }\n\n  // Calculate statistics\n  const totalTime = executionTimes.reduce((sum, time) => sum + time, 0);\n  const averageTime = totalTime / executionTimes.length;\n  const sortedTimes = [ ...executionTimes ].sort((a, b) => a - b);\n  const medianTime =\n    sortedTimes.length % 2 === 0\n      ? (sortedTimes[ sortedTimes.length / 2 - 1 ] + sortedTimes[ sortedTimes.length / 2 ]) / 2\n      : sortedTimes[ Math.floor(sortedTimes.length / 2) ];\n\n  return {\n    name: 'Async Benchmark'",
      "tokens": 0,
      "firstFile": {
        "name": "src/utils/performance/benchmarks/PerformanceBenchmarkTools.ts",
        "start": 267,
        "end": 287,
        "startLoc": {
          "line": 267,
          "column": 2,
          "position": 1891
        },
        "endLoc": {
          "line": 287,
          "column": 18,
          "position": 2123
        }
      },
      "secondFile": {
        "name": "src/utils/performance/benchmarks/PerformanceBenchmarkTools.ts",
        "start": 172,
        "end": 192,
        "startLoc": {
          "line": 172,
          "column": 2,
          "position": 1069
        },
        "endLoc": {
          "line": 192,
          "column": 12,
          "position": 1301
        }
      }
    },
    {
      "format": "typescript",
      "lines": 18,
      "fragment": ",\n    executionTimeMs: averageTime,\n    memoryUsageMB: memoryUsage?.diffHeapUsed,\n    operationsCount: iterations,\n    operationsPerSecond: (1000 * iterations) / totalTime,\n    additionalMetrics: {\n      medianTimeMs: medianTime,\n      minTimeMs: Math.min(...executionTimes),\n      maxTimeMs: Math.max(...executionTimes),\n      stdDevMs: calculateStandardDeviation(executionTimes),\n    },\n    timestamp: new Date(),\n  };\n}\n\n/**\n * Calculate standard deviation of an array of numbers\n */",
      "tokens": 0,
      "firstFile": {
        "name": "src/utils/performance/benchmarks/PerformanceBenchmarkTools.ts",
        "start": 287,
        "end": 304,
        "startLoc": {
          "line": 287,
          "column": 18,
          "position": 2124
        },
        "endLoc": {
          "line": 304,
          "column": 4,
          "position": 2238
        }
      },
      "secondFile": {
        "name": "src/utils/performance/benchmarks/PerformanceBenchmarkTools.ts",
        "start": 192,
        "end": 212,
        "startLoc": {
          "line": 192,
          "column": 12,
          "position": 1302
        },
        "endLoc": {
          "line": 212,
          "column": 4,
          "position": 1416
        }
      }
    },
    {
      "format": "tsx",
      "lines": 13,
      "fragment": ",\n  onFocus,\n  onBlur,\n  validate,\n  required,\n  \n  // Rest of props\n  ...rest\n}, ref) => {\n  // Internal state\n  const [isValidated, setIsValidated] = useState(false);\n  const [validationError, setValidationError] = useState<string | undefined>(undefined);\n  const [localValue",
      "tokens": 0,
      "firstFile": {
        "name": "src/ui/components/inputs/Slider.tsx",
        "start": 184,
        "end": 196,
        "startLoc": {
          "line": 184,
          "column": 12,
          "position": 694
        },
        "endLoc": {
          "line": 196,
          "column": 11,
          "position": 781
        }
      },
      "secondFile": {
        "name": "src/ui/components/inputs/Switch.tsx",
        "start": 121,
        "end": 133,
        "startLoc": {
          "line": 121,
          "column": 9,
          "position": 477
        },
        "endLoc": {
          "line": 133,
          "column": 10,
          "position": 564
        }
      }
    },
    {
      "format": "tsx",
      "lines": 11,
      "fragment": "${Math.random().toString(36).substring(2, 9)}`;\n  \n  // Determine hidden label for accessibility\n  const ariaLabel = hideLabel && typeof label === 'string' ? label : undefined;\n  \n  return (\n    <div className={inputContainerClassName} style={style}>\n      {label && !hideLabel && (\n        <label \n          htmlFor={inputId}\n          className=\"ui-input-label",
      "tokens": 0,
      "firstFile": {
        "name": "src/ui/components/inputs/Input.tsx",
        "start": 259,
        "end": 269,
        "startLoc": {
          "line": 259,
          "column": 8,
          "position": 1487
        },
        "endLoc": {
          "line": 269,
          "column": 15,
          "position": 1593
        }
      },
      "secondFile": {
        "name": "src/ui/components/inputs/Select.tsx",
        "start": 376,
        "end": 386,
        "startLoc": {
          "line": 376,
          "column": 9,
          "position": 2323
        },
        "endLoc": {
          "line": 386,
          "column": 16,
          "position": 2429
        }
      }
    },
    {
      "format": "tsx",
      "lines": 20,
      "fragment": "}\n        \n        {/* Render label on the right by default */}\n        {labelPosition === 'right' && labelElement}\n      </div>\n      \n      {/* Helper text or error message */}\n      {(helperText || hasError) && (\n        <div \n          className={`ui-checkbox-helper-text ${hasError ? 'ui-checkbox-error-text' : ''}`}\n          id={hasError ? `${checkboxId}-error` : undefined}\n        >\n          {hasError ? errorMessage : helperText}\n        </div>\n      )}\n    </div>\n  );\n});\n\nCheckbox",
      "tokens": 0,
      "firstFile": {
        "name": "src/ui/components/inputs/Checkbox.tsx",
        "start": 211,
        "end": 230,
        "startLoc": {
          "line": 211,
          "column": 16,
          "position": 1154
        },
        "endLoc": {
          "line": 230,
          "column": 9,
          "position": 1277
        }
      },
      "secondFile": {
        "name": "src/ui/components/inputs/Radio.tsx",
        "start": 187,
        "end": 206,
        "startLoc": {
          "line": 187,
          "column": 13,
          "position": 1016
        },
        "endLoc": {
          "line": 206,
          "column": 6,
          "position": 1139
        }
      }
    },
    {
      "format": "tsx",
      "lines": 7,
      "fragment": "for (const edge of edges) {\n        const source = simulationNodes.find(n => n.id === edge.source);\n        const target = simulationNodes.find(n => n.id === edge.target);\n        \n        if (!source || !target || !source.position || !target.position) continue;\n        \n        // Check if cursor is near the edge line",
      "tokens": 0,
      "firstFile": {
        "name": "src/components/ui/visualization/NetworkGraph.tsx",
        "start": 540,
        "end": 546,
        "startLoc": {
          "line": 540,
          "column": 7,
          "position": 4515
        },
        "endLoc": {
          "line": 546,
          "column": 41,
          "position": 4618
        }
      },
      "secondFile": {
        "name": "src/components/ui/visualization/NetworkGraph.tsx",
        "start": 262,
        "end": 267,
        "startLoc": {
          "line": 262,
          "column": 7,
          "position": 1697
        },
        "endLoc": {
          "line": 267,
          "column": 3,
          "position": 1798
        }
      }
    },
    {
      "format": "tsx",
      "lines": 14,
      "fragment": "export interface ResourceFlowNode {\n  id: string;\n  name: string;\n  type: FlowNodeType;\n  resources?: ResourceType[];\n  capacity?: number;\n  currentLoad?: number;\n  efficiency?: number;\n  status?: 'active' | 'inactive' | 'maintenance' | 'error';\n  position?: { x: number; y: number };\n  metadata?: Record<string, string | number | boolean>;\n}\n\n// Define ResourceFlowConnection type",
      "tokens": 0,
      "firstFile": {
        "name": "src/components/ui/visualization/LazyResourceFlowDiagram.tsx",
        "start": 16,
        "end": 29,
        "startLoc": {
          "line": 16,
          "column": 1,
          "position": 83
        },
        "endLoc": {
          "line": 29,
          "column": 38,
          "position": 212
        }
      },
      "secondFile": {
        "name": "src/components/ui/visualization/ResourceFlowDiagram.tsx",
        "start": 13,
        "end": 26,
        "startLoc": {
          "line": 13,
          "column": 1,
          "position": 88
        },
        "endLoc": {
          "line": 26,
          "column": 38,
          "position": 217
        }
      }
    },
    {
      "format": "tsx",
      "lines": 13,
      "fragment": "export interface ResourceFlowConnection {\n  id: string;\n  source: string;\n  target: string;\n  resourceTypes: ResourceType[];\n  maxFlow?: number;\n  currentFlow?: number;\n  priority?: number;\n  active?: boolean;\n  metadata?: Record<string, string | number | boolean>;\n}\n\n// Loading placeholder component",
      "tokens": 0,
      "firstFile": {
        "name": "src/components/ui/visualization/LazyResourceFlowDiagram.tsx",
        "start": 30,
        "end": 42,
        "startLoc": {
          "line": 30,
          "column": 1,
          "position": 214
        },
        "endLoc": {
          "line": 42,
          "column": 33,
          "position": 309
        }
      },
      "secondFile": {
        "name": "src/components/ui/visualization/ResourceFlowDiagram.tsx",
        "start": 27,
        "end": 39,
        "startLoc": {
          "line": 27,
          "column": 1,
          "position": 219
        },
        "endLoc": {
          "line": 39,
          "column": 29,
          "position": 314
        }
      }
    },
    {
      "format": "tsx",
      "lines": 15,
      "fragment": "const container = svg.append('g').attr('class', 'container');\n\n    // Add zoom behavior if interactive\n    if (interactive) {\n      const zoom = d3\n        .zoom<SVGSVGElement, unknown>()\n        .scaleExtent([0.1, 4])\n        .on('zoom', event => {\n          container.attr('transform', event?.transform);\n        });\n\n      svg.call(zoom);\n    }\n\n    // Create arrow markers for links",
      "tokens": 0,
      "firstFile": {
        "name": "src/components/ui/visualization/FlowDiagram.tsx",
        "start": 415,
        "end": 429,
        "startLoc": {
          "line": 415,
          "column": 5,
          "position": 2759
        },
        "endLoc": {
          "line": 429,
          "column": 34,
          "position": 2875
        }
      },
      "secondFile": {
        "name": "src/components/exploration/visualizations/charts/ResourceDistributionChart.tsx",
        "start": 183,
        "end": 193,
        "startLoc": {
          "line": 183,
          "column": 5,
          "position": 1030
        },
        "endLoc": {
          "line": 193,
          "column": 50,
          "position": 1575
        }
      }
    },
    {
      "format": "tsx",
      "lines": 10,
      "fragment": ")\n        .attr('viewBox', '-10 -5 10 10')\n        .attr('refX', 0)\n        .attr('refY', 0)\n        .attr('orient', 'auto')\n        .attr('markerWidth', 8)\n        .attr('markerHeight', 8)\n        .append('path')\n        .attr('d', 'M-10,-5L0,0L-10,5')\n        .attr('fill', color",
      "tokens": 0,
      "firstFile": {
        "name": "src/components/ui/visualization/FlowDiagram.tsx",
        "start": 471,
        "end": 480,
        "startLoc": {
          "line": 471,
          "column": 2,
          "position": 3179
        },
        "endLoc": {
          "line": 480,
          "column": 6,
          "position": 3265
        }
      },
      "secondFile": {
        "name": "src/components/ui/visualization/FlowDiagram.tsx",
        "start": 435,
        "end": 444,
        "startLoc": {
          "line": 435,
          "column": 12,
          "position": 2914
        },
        "endLoc": {
          "line": 444,
          "column": 7,
          "position": 3000
        }
      }
    },
    {
      "format": "tsx",
      "lines": 8,
      "fragment": ",\n}) => {\n  const canvasRef = useRef<HTMLCanvasElement>(null);\n  const containerRef = useRef<HTMLDivElement>(null);\n  const shaderManagerRef = useRef<WebGLShaderManager | null>(null);\n  const [isInitialized, setIsInitialized] = useState(false);\n\n  // Register with component registry",
      "tokens": 0,
      "firstFile": {
        "name": "src/components/ui/visualization/CustomShaderVisualization.tsx",
        "start": 95,
        "end": 102,
        "startLoc": {
          "line": 95,
          "column": 17,
          "position": 424
        },
        "endLoc": {
          "line": 102,
          "column": 36,
          "position": 505
        }
      },
      "secondFile": {
        "name": "src/components/ui/visualization/DataHighlightVisualization.tsx",
        "start": 104,
        "end": 111,
        "startLoc": {
          "line": 104,
          "column": 13,
          "position": 430
        },
        "endLoc": {
          "line": 111,
          "column": 36,
          "position": 511
        }
      }
    },
    {
      "format": "tsx",
      "lines": 45,
      "fragment": ");\n\n  // Prepare data for WebGL rendering\n  const { positions, dataValues, dataRange } = useMemo(() => {\n    const pos: Position[] = [];\n    const values = new Float32Array(data?.length);\n    let min = Infinity;\n    let max = -Infinity;\n\n    data?.forEach((point, index) => {\n      pos.push({ x: point.x, y: point.y });\n      values[index] = point.value;\n\n      min = Math.min(min, point.value);\n      max = Math.max(max, point.value);\n    });\n\n    return {\n      positions: pos,\n      dataValues: values,\n      dataRange: [min, max] as [number, number],\n    };\n  }, [data]);\n\n  // Initialize WebGL shader manager\n  useEffect(() => {\n    if (!canvasRef.current) return;\n\n    const manager = new WebGLShaderManager();\n    const success = manager.initialize(canvasRef.current);\n\n    if (success) {\n      shaderManagerRef.current = manager;\n      setIsInitialized(true);\n    }\n\n    return () => {\n      if (shaderManagerRef.current) {\n        shaderManagerRef.current.dispose();\n        shaderManagerRef.current = null;\n      }\n    };\n  }, []);\n\n  // Handle component lifecycle",
      "tokens": 0,
      "firstFile": {
        "name": "src/components/ui/visualization/CustomShaderVisualization.tsx",
        "start": 107,
        "end": 151,
        "startLoc": {
          "line": 107,
          "column": 2,
          "position": 542
        },
        "endLoc": {
          "line": 151,
          "column": 30,
          "position": 933
        }
      },
      "secondFile": {
        "name": "src/components/ui/visualization/DataHighlightVisualization.tsx",
        "start": 109,
        "end": 153,
        "startLoc": {
          "line": 109,
          "column": 6,
          "position": 506
        },
        "endLoc": {
          "line": 153,
          "column": 34,
          "position": 897
        }
      }
    },
    {
      "format": "tsx",
      "lines": 16,
      "fragment": ", dataValues, positions, width, height);\n    };\n\n    // Single render if not animating\n    if (!animate) {\n      renderFrame();\n      return;\n    }\n\n    // Start animation loop\n    manager.startAnimationLoop(renderFrame);\n\n    return () => {\n      manager.stopAnimationLoop();\n    };\n  }, [isInitialized, shaderConfig",
      "tokens": 0,
      "firstFile": {
        "name": "src/components/ui/visualization/CustomShaderVisualization.tsx",
        "start": 194,
        "end": 209,
        "startLoc": {
          "line": 194,
          "column": 13,
          "position": 1220
        },
        "endLoc": {
          "line": 209,
          "column": 13,
          "position": 1310
        }
      },
      "secondFile": {
        "name": "src/components/ui/visualization/DataHighlightVisualization.tsx",
        "start": 174,
        "end": 191,
        "startLoc": {
          "line": 174,
          "column": 7,
          "position": 1032
        },
        "endLoc": {
          "line": 191,
          "column": 18,
          "position": 1125
        }
      }
    },
    {
      "format": "tsx",
      "lines": 31,
      "fragment": "]);\n\n  // Handle canvas clicks\n  const handleCanvasClick = (e: React.MouseEvent<HTMLCanvasElement>) => {\n    if (!onDataPointClick || !containerRef.current) return;\n\n    const rect = containerRef.current.getBoundingClientRect();\n    const x = e.clientX - rect.left;\n    const y = e.clientY - rect.top;\n\n    // Find nearest data point\n    let nearestIndex = -1;\n    let nearestDistance = Infinity;\n\n    data?.forEach((point, index) => {\n      const dx = point.x - x;\n      const dy = point.y - y;\n      const distance = Math.sqrt(dx * dx + dy * dy);\n\n      if (distance < nearestDistance && distance < 20) {\n        nearestDistance = distance;\n        nearestIndex = index;\n      }\n    });\n\n    if (nearestIndex !== -1) {\n      onDataPointClick(data[nearestIndex], nearestIndex);\n    }\n  };\n\n  return",
      "tokens": 0,
      "firstFile": {
        "name": "src/components/ui/visualization/CustomShaderVisualization.tsx",
        "start": 209,
        "end": 239,
        "startLoc": {
          "line": 209,
          "column": 8,
          "position": 1326
        },
        "endLoc": {
          "line": 239,
          "column": 7,
          "position": 1613
        }
      },
      "secondFile": {
        "name": "src/components/ui/visualization/DataHighlightVisualization.tsx",
        "start": 203,
        "end": 233,
        "startLoc": {
          "line": 203,
          "column": 3,
          "position": 1173
        },
        "endLoc": {
          "line": 233,
          "column": 30,
          "position": 1460
        }
      }
    },
    {
      "format": "tsx",
      "lines": 18,
      "fragment": ") return;\n    \n    const canvas = canvasRef.current;\n    if (!canvas) return;\n    \n    const rect = canvas.getBoundingClientRect();\n    const x = e.clientX - rect.left;\n    const y = e.clientY - rect.top;\n    \n    // Calculate chart area\n    const chartArea = {\n      x: margin.left,\n      y: margin.top,\n      width: dimensions.width - margin.left - margin.right,\n      height: dimensions.height - margin.top - margin.bottom,\n    };\n    \n    // Similar logic to handleMouseMove, but trigger onClick",
      "tokens": 0,
      "firstFile": {
        "name": "src/components/ui/visualization/Chart.tsx",
        "start": 323,
        "end": 340,
        "startLoc": {
          "line": 323,
          "column": 8,
          "position": 2294
        },
        "endLoc": {
          "line": 340,
          "column": 57,
          "position": 2457
        }
      },
      "secondFile": {
        "name": "src/components/ui/visualization/Chart.tsx",
        "start": 260,
        "end": 277,
        "startLoc": {
          "line": 260,
          "column": 13,
          "position": 1682
        },
        "endLoc": {
          "line": 277,
          "column": 35,
          "position": 1845
        }
      }
    },
    {
      "format": "tsx",
      "lines": 7,
      "fragment": "const dataset = data.datasets[0];\n      const barWidth = chartArea.width / dataset.data.length;\n      const barIndex = Math.floor((x - chartArea.x) / barWidth);\n      \n      if (\n        barIndex >= 0 && \n        barIndex < dataset.data.length &&",
      "tokens": 0,
      "firstFile": {
        "name": "src/components/ui/visualization/Chart.tsx",
        "start": 342,
        "end": 348,
        "startLoc": {
          "line": 342,
          "column": 7,
          "position": 2481
        },
        "endLoc": {
          "line": 348,
          "column": 3,
          "position": 2570
        }
      },
      "secondFile": {
        "name": "src/components/ui/visualization/Chart.tsx",
        "start": 291,
        "end": 295,
        "startLoc": {
          "line": 291,
          "column": 9,
          "position": 1974
        },
        "endLoc": {
          "line": 295,
          "column": 2,
          "position": 2058
        }
      }
    },
    {
      "format": "tsx",
      "lines": 11,
      "fragment": "(\n  ctx: CanvasRenderingContext2D,\n  data: DataPoint[],\n  chartArea: { x: number; y: number; width: number; height: number },\n  colors: string[]\n) {\n  if (data.length === 0) return;\n  \n  const centerX = chartArea.x + chartArea.width / 2;\n  const centerY = chartArea.y + chartArea.height / 2;\n  const outerRadius",
      "tokens": 0,
      "firstFile": {
        "name": "src/components/ui/visualization/Chart.tsx",
        "start": 578,
        "end": 588,
        "startLoc": {
          "line": 578,
          "column": 18,
          "position": 4902
        },
        "endLoc": {
          "line": 588,
          "column": 12,
          "position": 5029
        }
      },
      "secondFile": {
        "name": "src/components/ui/visualization/Chart.tsx",
        "start": 532,
        "end": 542,
        "startLoc": {
          "line": 532,
          "column": 13,
          "position": 4364
        },
        "endLoc": {
          "line": 542,
          "column": 7,
          "position": 4491
        }
      }
    },
    {
      "format": "tsx",
      "lines": 12,
      "fragment": ";\n  \n  const total = data.reduce((sum, point) => sum + point.value, 0);\n  \n  let startAngle = 0;\n  \n  data.forEach((point, index) => {\n    const portionValue = point.value / total;\n    const endAngle = startAngle + portionValue * Math.PI * 2;\n    \n    ctx.beginPath();\n    ctx.arc",
      "tokens": 0,
      "firstFile": {
        "name": "src/components/ui/visualization/Chart.tsx",
        "start": 589,
        "end": 600,
        "startLoc": {
          "line": 589,
          "column": 4,
          "position": 5064
        },
        "endLoc": {
          "line": 600,
          "column": 4,
          "position": 5184
        }
      },
      "secondFile": {
        "name": "src/components/ui/visualization/Chart.tsx",
        "start": 542,
        "end": 553,
        "startLoc": {
          "line": 542,
          "column": 2,
          "position": 4512
        },
        "endLoc": {
          "line": 553,
          "column": 7,
          "position": 4632
        }
      }
    },
    {
      "format": "tsx",
      "lines": 10,
      "fragment": "(\n  ctx: CanvasRenderingContext2D,\n  data: DataPoint[],\n  chartArea: { x: number; y: number; width: number; height: number },\n  maxValue: number,\n  color: string\n) {\n  if (data.length === 0) return;\n  \n  const",
      "tokens": 0,
      "firstFile": {
        "name": "src/components/ui/visualization/Chart.tsx",
        "start": 611,
        "end": 620,
        "startLoc": {
          "line": 611,
          "column": 14,
          "position": 5290
        },
        "endLoc": {
          "line": 620,
          "column": 6,
          "position": 5376
        }
      },
      "secondFile": {
        "name": "src/components/ui/visualization/Chart.tsx",
        "start": 459,
        "end": 468,
        "startLoc": {
          "line": 459,
          "column": 14,
          "position": 3550
        },
        "endLoc": {
          "line": 468,
          "column": 4,
          "position": 3636
        }
      }
    },
    {
      "format": "tsx",
      "lines": 13,
      "fragment": ": (\n    <svg\n      xmlns=\"http://www.w3.org/2000/svg\"\n      viewBox=\"0 0 24 24\"\n      fill=\"none\"\n      stroke=\"currentColor\"\n      strokeWidth=\"2\"\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      className=\"h-4 w-4\"\n    >\n      <path d=\"M2 22h20\"></path>\n      <path d=\"M12 2v20",
      "tokens": 0,
      "firstFile": {
        "name": "src/components/ui/tech/TechVisualFeedback.tsx",
        "start": 60,
        "end": 72,
        "startLoc": {
          "line": 60,
          "column": 9,
          "position": 450
        },
        "endLoc": {
          "line": 72,
          "column": 9,
          "position": 529
        }
      },
      "secondFile": {
        "name": "src/components/ui/tech/TechVisualFeedback.tsx",
        "start": 39,
        "end": 51,
        "startLoc": {
          "line": 39,
          "column": 15,
          "position": 251
        },
        "endLoc": {
          "line": 51,
          "column": 8,
          "position": 330
        }
      }
    },
    {
      "format": "tsx",
      "lines": 12,
      "fragment": ": (\n    <svg\n      xmlns=\"http://www.w3.org/2000/svg\"\n      viewBox=\"0 0 24 24\"\n      fill=\"none\"\n      stroke=\"currentColor\"\n      strokeWidth=\"2\"\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      className=\"h-4 w-4\"\n    >\n      <circle",
      "tokens": 0,
      "firstFile": {
        "name": "src/components/ui/tech/TechVisualFeedback.tsx",
        "start": 78,
        "end": 89,
        "startLoc": {
          "line": 78,
          "column": 11,
          "position": 589
        },
        "endLoc": {
          "line": 89,
          "column": 7,
          "position": 649
        }
      },
      "secondFile": {
        "name": "src/components/ui/tech/TechVisualFeedback.tsx",
        "start": 39,
        "end": 50,
        "startLoc": {
          "line": 39,
          "column": 15,
          "position": 251
        },
        "endLoc": {
          "line": 50,
          "column": 5,
          "position": 311
        }
      }
    },
    {
      "format": "tsx",
      "lines": 12,
      "fragment": ": (\n    <svg\n      xmlns=\"http://www.w3.org/2000/svg\"\n      viewBox=\"0 0 24 24\"\n      fill=\"none\"\n      stroke=\"currentColor\"\n      strokeWidth=\"2\"\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      className=\"h-4 w-4\"\n    >\n      <path d=\"M2 12h20",
      "tokens": 0,
      "firstFile": {
        "name": "src/components/ui/tech/TechVisualFeedback.tsx",
        "start": 96,
        "end": 107,
        "startLoc": {
          "line": 96,
          "column": 12,
          "position": 812
        },
        "endLoc": {
          "line": 107,
          "column": 9,
          "position": 877
        }
      },
      "secondFile": {
        "name": "src/components/ui/tech/TechVisualFeedback.tsx",
        "start": 39,
        "end": 50,
        "startLoc": {
          "line": 39,
          "column": 15,
          "position": 251
        },
        "endLoc": {
          "line": 50,
          "column": 9,
          "position": 316
        }
      }
    },
    {
      "format": "tsx",
      "lines": 12,
      "fragment": ": (\n    <svg\n      xmlns=\"http://www.w3.org/2000/svg\"\n      viewBox=\"0 0 24 24\"\n      fill=\"none\"\n      stroke=\"currentColor\"\n      strokeWidth=\"2\"\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      className=\"h-4 w-4\"\n    >\n      <line",
      "tokens": 0,
      "firstFile": {
        "name": "src/components/ui/tech/TechVisualFeedback.tsx",
        "start": 115,
        "end": 126,
        "startLoc": {
          "line": 115,
          "column": 8,
          "position": 965
        },
        "endLoc": {
          "line": 126,
          "column": 5,
          "position": 1025
        }
      },
      "secondFile": {
        "name": "src/components/ui/tech/TechVisualFeedback.tsx",
        "start": 39,
        "end": 50,
        "startLoc": {
          "line": 39,
          "column": 15,
          "position": 251
        },
        "endLoc": {
          "line": 50,
          "column": 5,
          "position": 311
        }
      }
    },
    {
      "format": "tsx",
      "lines": 12,
      "fragment": ": (\n    <svg\n      xmlns=\"http://www.w3.org/2000/svg\"\n      viewBox=\"0 0 24 24\"\n      fill=\"none\"\n      stroke=\"currentColor\"\n      strokeWidth=\"2\"\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      className=\"h-4 w-4\"\n    >\n      <path d=\"M12 22s8-4 8-10V4l-8-2-8 2v8c0 6 8 10 8 10z",
      "tokens": 0,
      "firstFile": {
        "name": "src/components/ui/tech/TechVisualFeedback.tsx",
        "start": 132,
        "end": 143,
        "startLoc": {
          "line": 132,
          "column": 8,
          "position": 1162
        },
        "endLoc": {
          "line": 143,
          "column": 44,
          "position": 1227
        }
      },
      "secondFile": {
        "name": "src/components/ui/tech/TechVisualFeedback.tsx",
        "start": 39,
        "end": 50,
        "startLoc": {
          "line": 39,
          "column": 15,
          "position": 251
        },
        "endLoc": {
          "line": 50,
          "column": 9,
          "position": 316
        }
      }
    },
    {
      "format": "tsx",
      "lines": 12,
      "fragment": ": (\n    <svg\n      xmlns=\"http://www.w3.org/2000/svg\"\n      viewBox=\"0 0 24 24\"\n      fill=\"none\"\n      stroke=\"currentColor\"\n      strokeWidth=\"2\"\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      className=\"h-4 w-4\"\n    >\n      <path d=\"M12 2l3.09 6.26L22 9.27l-5 4.87 1.18 6.88L12 17.77l-6.18 3.25L7 14.14l-5-4.87 6.91-1.01L12 2z",
      "tokens": 0,
      "firstFile": {
        "name": "src/components/ui/tech/TechVisualFeedback.tsx",
        "start": 146,
        "end": 157,
        "startLoc": {
          "line": 146,
          "column": 8,
          "position": 1245
        },
        "endLoc": {
          "line": 157,
          "column": 94,
          "position": 1310
        }
      },
      "secondFile": {
        "name": "src/components/ui/tech/TechVisualFeedback.tsx",
        "start": 39,
        "end": 50,
        "startLoc": {
          "line": 39,
          "column": 15,
          "position": 251
        },
        "endLoc": {
          "line": 50,
          "column": 9,
          "position": 316
        }
      }
    },
    {
      "format": "tsx",
      "lines": 12,
      "fragment": ": (\n    <svg\n      xmlns=\"http://www.w3.org/2000/svg\"\n      viewBox=\"0 0 24 24\"\n      fill=\"none\"\n      stroke=\"currentColor\"\n      strokeWidth=\"2\"\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      className=\"h-4 w-4\"\n    >\n      <circle cx=\"12\" cy=\"12\" r=\"10",
      "tokens": 0,
      "firstFile": {
        "name": "src/components/ui/tech/TechVisualFeedback.tsx",
        "start": 160,
        "end": 171,
        "startLoc": {
          "line": 160,
          "column": 8,
          "position": 1328
        },
        "endLoc": {
          "line": 171,
          "column": 3,
          "position": 1405
        }
      },
      "secondFile": {
        "name": "src/components/ui/tech/TechVisualFeedback.tsx",
        "start": 39,
        "end": 89,
        "startLoc": {
          "line": 39,
          "column": 15,
          "position": 251
        },
        "endLoc": {
          "line": 89,
          "column": 2,
          "position": 666
        }
      }
    },
    {
      "format": "tsx",
      "lines": 14,
      "fragment": ";\n          const otherNodeElement = document.querySelector(`[data-node-id=\"${otherNodeId}\"]`);\n          \n          if (!otherNodeElement) {\n            return null;\n          }\n          \n          const rect = otherNodeElement.getBoundingClientRect();\n          const otherNodePosition = {\n            x: rect.left + rect.width / 2,\n            y: rect.top + rect.height / 2,\n          };\n          \n          // Draw synergy line",
      "tokens": 0,
      "firstFile": {
        "name": "src/components/ui/tech/TechVisualFeedback.tsx",
        "start": 383,
        "end": 396,
        "startLoc": {
          "line": 383,
          "column": 13,
          "position": 3409
        },
        "endLoc": {
          "line": 396,
          "column": 21,
          "position": 3521
        }
      },
      "secondFile": {
        "name": "src/components/ui/tech/TechVisualFeedback.tsx",
        "start": 336,
        "end": 349,
        "startLoc": {
          "line": 336,
          "column": 5,
          "position": 3003
        },
        "endLoc": {
          "line": 349,
          "column": 61,
          "position": 3112
        }
      }
    },
    {
      "format": "tsx",
      "lines": 9,
      "fragment": ": number;\n}) {\n  // Calculate line properties\n  const dx = to.x - from.x;\n  const dy = to.y - from.y;\n  const length = Math.sqrt(dx * dx + dy * dy);\n  const angle = Math.atan2(dy, dx) * (180 / Math.PI);\n  \n  // Calculate line thickness based on strength",
      "tokens": 0,
      "firstFile": {
        "name": "src/components/ui/tech/TechVisualFeedback.tsx",
        "start": 697,
        "end": 705,
        "startLoc": {
          "line": 697,
          "column": 9,
          "position": 5949
        },
        "endLoc": {
          "line": 705,
          "column": 46,
          "position": 6058
        }
      },
      "secondFile": {
        "name": "src/components/ui/tech/TechVisualFeedback.tsx",
        "start": 586,
        "end": 594,
        "startLoc": {
          "line": 586,
          "column": 2,
          "position": 5127
        },
        "endLoc": {
          "line": 594,
          "column": 48,
          "position": 5236
        }
      }
    },
    {
      "format": "tsx",
      "lines": 10,
      "fragment": "const resizeObserver = new ResizeObserver(entries => {\n      for (const entry of entries) {\n        const { width } = entry.contentRect;\n        setContainerSize(prev => ({ ...prev, width }));\n      }\n    });\n\n    resizeObserver.observe(containerRef.current);\n\n    // Initialize size",
      "tokens": 0,
      "firstFile": {
        "name": "src/components/ui/resource/VirtualizedResourceDataset.tsx",
        "start": 210,
        "end": 219,
        "startLoc": {
          "line": 210,
          "column": 5,
          "position": 1285
        },
        "endLoc": {
          "line": 219,
          "column": 19,
          "position": 1375
        }
      },
      "secondFile": {
        "name": "src/components/ui/resource/VirtualizedResourceList.tsx",
        "start": 134,
        "end": 143,
        "startLoc": {
          "line": 134,
          "column": 5,
          "position": 728
        },
        "endLoc": {
          "line": 143,
          "column": 20,
          "position": 818
        }
      }
    },
    {
      "format": "javascript",
      "lines": 46,
      "fragment": "={`rounded-md p-2 ${colors.bg} border ${colors.border}`}>\n        <div className=\"flex items-center gap-2\">\n          <span className={colors.base}>{resourceNames[type]}</span>\n          {status && (\n            <span className={status.color}>\n              <status.icon className=\"h-4 w-4\" />\n            </span>\n          )}\n        </div>\n\n        <div className=\"mt-1 space-y-1\">\n          <div className=\"flex items-center justify-between gap-4\">\n            <span className=\"text-gray-400\">Current:</span>\n            <span className={colors.base}>{value.toLocaleString()}</span>\n          </div>\n\n          {rate !== 0 && (\n            <div className=\"flex items-center justify-between gap-4\">\n              <span className=\"text-gray-400\">Rate:</span>\n              <div className=\"flex items-center gap-1\">\n                {rate > 0 ? (\n                  <TrendingUp className=\"h-4 w-4 text-green-500\" />\n                ) : rate < 0 ? (\n                  <TrendingDown className=\"h-4 w-4 text-red-500\" />\n                ) : null}\n                <span\n                  className={rate > 0 ? 'text-green-500' : rate < 0 ? 'text-red-500' : colors.base}\n                >\n                  {rate > 0 ? '+' : ''}\n                  {rate.toLocaleString()}/s\n                </span>\n              </div>\n            </div>\n          )}\n\n          {capacity !== undefined && (\n            <div className=\"flex items-center justify-between gap-4\">\n              <span className=\"text-gray-400\">Capacity:</span>\n              <span className={colors.base}>{capacity.toLocaleString()}</span>\n            </div>\n          )}\n\n          {capacity !== undefined && percentFilled !== 'N/A' && (\n            <div className=\"flex items-center justify-between gap-4\">\n              <span className=\"text-gray-400\">Filled:</span>\n              <span className={colors",
      "tokens": 0,
      "firstFile": {
        "name": "src/components/ui/resource/ResourceVisualizationEnhanced.tsx",
        "start": 94,
        "end": 139,
        "startLoc": {
          "line": 94,
          "column": 10,
          "position": 863
        },
        "endLoc": {
          "line": 139,
          "column": 7,
          "position": 1346
        }
      },
      "secondFile": {
        "name": "src/components/ui/visualization/ResourceVisualization.tsx",
        "start": 263,
        "end": 342,
        "startLoc": {
          "line": 263,
          "column": 10,
          "position": 1982
        },
        "endLoc": {
          "line": 342,
          "column": 50,
          "position": 2693
        }
      }
    },
    {
      "format": "tsx",
      "lines": 22,
      "fragment": "const percentage = (value / capacity) * 100;\n\n  if (percentage <= thresholds.critical) {\n    return {\n      icon: AlertTriangle,\n      message: 'Critical',\n      color: 'text-red-500',\n    };\n  }\n\n  if (percentage <= thresholds.warning) {\n    return {\n      icon: AlertTriangle,\n      message: 'Warning',\n      color: 'text-yellow-500',\n    };\n  }\n\n  return null;\n}\n\n// Tooltip content for resources",
      "tokens": 0,
      "firstFile": {
        "name": "src/components/ui/resource/ResourceVisualizationEnhanced.tsx",
        "start": 63,
        "end": 84,
        "startLoc": {
          "line": 63,
          "column": 3,
          "position": 518
        },
        "endLoc": {
          "line": 84,
          "column": 33,
          "position": 645
        }
      },
      "secondFile": {
        "name": "src/components/ui/visualization/ResourceVisualization.tsx",
        "start": 231,
        "end": 252,
        "startLoc": {
          "line": 231,
          "column": 3,
          "position": 1774
        },
        "endLoc": {
          "line": 252,
          "column": 9,
          "position": 1901
        }
      }
    },
    {
      "format": "tsx",
      "lines": 30,
      "fragment": ";\n\n    return (\n      <div className={`rounded-md p-2 ${colors.bg} border ${colors.border}`}>\n        <div className=\"flex items-center gap-2\">\n          <span className={colors.base}>{resourceNames[type]}</span>\n          {status && (\n            <span className={status.color}>\n              <status.icon className=\"h-4 w-4\" />\n            </span>\n          )}\n        </div>\n\n        <div className=\"mt-1 space-y-1\">\n          <div className=\"flex items-center justify-between gap-4\">\n            <span className=\"text-gray-400\">Current:</span>\n            <span className={colors.base}>{value.toLocaleString()}</span>\n          </div>\n\n          {rate !== 0 && (\n            <div className=\"flex items-center justify-between gap-4\">\n              <span className=\"text-gray-400\">Rate:</span>\n              <div className=\"flex items-center gap-1\">\n                {rate > 0 ? (\n                  <TrendingUp className=\"h-4 w-4 text-green-500\" />\n                ) : rate < 0 ? (\n                  <TrendingDown className=\"h-4 w-4 text-red-500\" />\n                ) : null}\n                <span\n                  ",
      "tokens": 0,
      "firstFile": {
        "name": "src/components/ui/resource/ResourceVisualizationEnhanced.tsx",
        "start": 91,
        "end": 120,
        "startLoc": {
          "line": 91,
          "column": 6,
          "position": 850
        },
        "endLoc": {
          "line": 120,
          "column": 19,
          "position": 1141
        }
      },
      "secondFile": {
        "name": "src/components/ui/visualization/ResourceVisualization.tsx",
        "start": 260,
        "end": 289,
        "startLoc": {
          "line": 260,
          "column": 2,
          "position": 1969
        },
        "endLoc": {
          "line": 289,
          "column": 17,
          "position": 2260
        }
      }
    },
    {
      "format": "tsx",
      "lines": 16,
      "fragment": ">\n                  {rate > 0 ? '+' : ''}\n                  {rate.toLocaleString()}/s\n                </span>\n              </div>\n            </div>\n          )}\n\n          {capacity !== undefined && (\n            <div className=\"flex items-center justify-between gap-4\">\n              <span className=\"text-gray-400\">Capacity:</span>\n              <span className={colors.base}>{capacity.toLocaleString()}</span>\n            </div>\n          )}\n\n          {",
      "tokens": 0,
      "firstFile": {
        "name": "src/components/ui/resource/ResourceVisualizationEnhanced.tsx",
        "start": 121,
        "end": 136,
        "startLoc": {
          "line": 121,
          "column": 17,
          "position": 1170
        },
        "endLoc": {
          "line": 136,
          "column": 2,
          "position": 1293
        }
      },
      "secondFile": {
        "name": "src/components/ui/visualization/ResourceVisualization.tsx",
        "start": 290,
        "end": 304,
        "startLoc": {
          "line": 290,
          "column": 15,
          "position": 2289
        },
        "endLoc": {
          "line": 304,
          "column": 3,
          "position": 2411
        }
      }
    },
    {
      "format": "javascript",
      "lines": 13,
      "fragment": "} />\n        ) : (\n          <ChevronDown size={16} />\n        )}\n      </div>\n\n      <AnimatePresence>\n        {(expanded !== undefined ? expanded : showRateDetails) && (\n          <motion.div\n            initial={{ height: 0, opacity: 0 }}\n            animate={{ height: 'auto', opacity: 1 }}\n            exit={{ height: 0, opacity: 0 }}\n            transition={{",
      "tokens": 0,
      "firstFile": {
        "name": "src/components/ui/resource/ResourceRatesDisplay.tsx",
        "start": 240,
        "end": 252,
        "startLoc": {
          "line": 240,
          "column": 3,
          "position": 1912
        },
        "endLoc": {
          "line": 252,
          "column": 2,
          "position": 2030
        }
      },
      "secondFile": {
        "name": "src/components/buildings/modules/MiningHub/ThresholdManager.tsx",
        "start": 110,
        "end": 141,
        "startLoc": {
          "line": 110,
          "column": 2,
          "position": 845
        },
        "endLoc": {
          "line": 141,
          "column": 13,
          "position": 1099
        }
      }
    },
    {
      "format": "tsx",
      "lines": 45,
      "fragment": "}\n> = {\n  [ResourceType.MINERALS]: {\n    base: 'text-amber-400',\n    bg: 'bg-amber-900/20',\n    border: 'border-amber-700/30',\n    fill: 'bg-amber-500',\n  },\n  [ResourceType.ENERGY]: {\n    base: 'text-cyan-400',\n    bg: 'bg-cyan-900/20',\n    border: 'border-cyan-700/30',\n    fill: 'bg-cyan-500',\n  },\n  [ResourceType.POPULATION]: {\n    base: 'text-green-400',\n    bg: 'bg-green-900/20',\n    border: 'border-green-700/30',\n    fill: 'bg-green-500',\n  },\n  [ResourceType.RESEARCH]: {\n    base: 'text-purple-400',\n    bg: 'bg-purple-900/20',\n    border: 'border-purple-700/30',\n    fill: 'bg-purple-500',\n  },\n  [ResourceType.PLASMA]: {\n    base: 'text-red-400',\n    bg: 'bg-red-900/20',\n    border: 'border-red-700/30',\n    fill: 'bg-red-500',\n  },\n  [ResourceType.GAS]: {\n    base: 'text-blue-400',\n    bg: 'bg-blue-900/20',\n    border: 'border-blue-700/30',\n    fill: 'bg-blue-500',\n  },\n  [ResourceType.EXOTIC]: {\n    base: 'text-pink-400',\n    bg: 'bg-pink-900/20',\n    border: 'border-pink-700/30',\n    fill: 'bg-pink-500',\n  },\n  // Add default colors for other resource types",
      "tokens": 0,
      "firstFile": {
        "name": "src/components/ui/resource/ResourceRatesDisplay.tsx",
        "start": 12,
        "end": 56,
        "startLoc": {
          "line": 12,
          "column": 2,
          "position": 156
        },
        "endLoc": {
          "line": 56,
          "column": 47,
          "position": 459
        }
      },
      "secondFile": {
        "name": "src/components/ui/visualization/ResourceVisualization.tsx",
        "start": 81,
        "end": 125,
        "startLoc": {
          "line": 81,
          "column": 3,
          "position": 660
        },
        "endLoc": {
          "line": 125,
          "column": 2,
          "position": 963
        }
      }
    },
    {
      "format": "tsx",
      "lines": 75,
      "fragment": "[ResourceType.IRON]: {\n    base: 'text-gray-400',\n    bg: 'bg-gray-900/20',\n    border: 'border-gray-700/30',\n    fill: 'bg-gray-500',\n  },\n  [ResourceType.COPPER]: {\n    base: 'text-orange-400',\n    bg: 'bg-orange-900/20',\n    border: 'border-orange-700/30',\n    fill: 'bg-orange-500',\n  },\n  [ResourceType.TITANIUM]: {\n    base: 'text-slate-400',\n    bg: 'bg-slate-900/20',\n    border: 'border-slate-700/30',\n    fill: 'bg-slate-500',\n  },\n  [ResourceType.URANIUM]: {\n    base: 'text-lime-400',\n    bg: 'bg-lime-900/20',\n    border: 'border-lime-700/30',\n    fill: 'bg-lime-500',\n  },\n  [ResourceType.WATER]: {\n    base: 'text-sky-400',\n    bg: 'bg-sky-900/20',\n    border: 'border-sky-700/30',\n    fill: 'bg-sky-500',\n  },\n  [ResourceType.HELIUM]: {\n    base: 'text-indigo-400',\n    bg: 'bg-indigo-900/20',\n    border: 'border-indigo-700/30',\n    fill: 'bg-indigo-500',\n  },\n  [ResourceType.DEUTERIUM]: {\n    base: 'text-violet-400',\n    bg: 'bg-violet-900/20',\n    border: 'border-violet-700/30',\n    fill: 'bg-violet-500',\n  },\n  [ResourceType.ANTIMATTER]: {\n    base: 'text-fuchsia-400',\n    bg: 'bg-fuchsia-900/20',\n    border: 'border-fuchsia-700/30',\n    fill: 'bg-fuchsia-500',\n  },\n  [ResourceType.DARK_MATTER]: {\n    base: 'text-rose-400',\n    bg: 'bg-rose-900/20',\n    border: 'border-rose-700/30',\n    fill: 'bg-rose-500',\n  },\n  [ResourceType.EXOTIC_MATTER]: {\n    base: 'text-emerald-400',\n    bg: 'bg-emerald-900/20',\n    border: 'border-emerald-700/30',\n    fill: 'bg-emerald-500',\n  },\n  [ResourceType.ORGANIC]: {\n    base: 'text-teal-400',\n    bg: 'bg-teal-900/20',\n    border: 'border-teal-700/30',\n    fill: 'bg-teal-500',\n  },\n  [ResourceType.FOOD]: {\n    base: 'text-yellow-400',\n    bg: 'bg-yellow-900/20',\n    border: 'border-yellow-700/30',\n    fill: 'bg-yellow-500',\n  },\n};\n\n// Props for detailed rate display component",
      "tokens": 0,
      "firstFile": {
        "name": "src/components/ui/resource/ResourceRatesDisplay.tsx",
        "start": 57,
        "end": 131,
        "startLoc": {
          "line": 57,
          "column": 3,
          "position": 462
        },
        "endLoc": {
          "line": 131,
          "column": 45,
          "position": 969
        }
      },
      "secondFile": {
        "name": "src/components/ui/visualization/ResourceVisualization.tsx",
        "start": 125,
        "end": 199,
        "startLoc": {
          "line": 125,
          "column": 3,
          "position": 963
        },
        "endLoc": {
          "line": 199,
          "column": 25,
          "position": 1470
        }
      }
    },
    {
      "format": "javascript",
      "lines": 19,
      "fragment": "} />}\n      </div>\n\n      <AnimatePresence>\n        {isOpen && (\n          <motion.div\n            initial={{ height: 0, opacity: 0 }}\n            animate={{ height: 'auto', opacity: 1 }}\n            exit={{ height: 0, opacity: 0 }}\n            transition={{ duration: 0.2 }}\n            className=\"overflow-hidden\"\n          >\n            {/* Filter types */}\n            <div className=\"mb-3 mt-4\">\n              <div className=\"mb-2 text-xs text-gray-400\">Filter by rate:</div>\n              <div className=\"flex flex-wrap gap-2\">\n                {Object.values(RateFilterType).map(type => (\n                  <button\n                    key={type",
      "tokens": 0,
      "firstFile": {
        "name": "src/components/ui/resource/ResourceRateFiltering.tsx",
        "start": 260,
        "end": 278,
        "startLoc": {
          "line": 260,
          "column": 3,
          "position": 1970
        },
        "endLoc": {
          "line": 278,
          "column": 5,
          "position": 2140
        }
      },
      "secondFile": {
        "name": "src/components/ui/resource/ResourceRatesDisplay.tsx",
        "start": 242,
        "end": 255,
        "startLoc": {
          "line": 242,
          "column": 3,
          "position": 1931
        },
        "endLoc": {
          "line": 255,
          "column": 29,
          "position": 2054
        }
      }
    },
    {
      "format": "javascript",
      "lines": 23,
      "fragment": "={type}\n              className=\"resource-card\"\n              onClick={() => handleResourceSelect(type === selectedResource ? undefined : type)}\n            >\n              <ResourceVisualizationWrapper\n                type={type}\n                value={resourceData[type]?.value ?? 0}\n                rate={resourceData[type]?.rate ?? 0}\n                capacity={resourceData[type]?.maxValue}\n                thresholds={{\n                  low: resourceData[type]?.thresholds?.low ?? 0.25,\n                  critical: resourceData[type]?.thresholds?.critical ?? 0.1,\n                }}\n              />\n            </div>\n          ))}\n        </div>\n\n        {selectedResource && (\n          <div className=\"resource-detail\">\n            <h3>Detailed View: {selectedResource}</h3>\n            <ResourceThresholdVisualization\n              resourceType={selectedResource",
      "tokens": 0,
      "firstFile": {
        "name": "src/components/ui/resource/ResourceManagementDashboard.tsx",
        "start": 322,
        "end": 344,
        "startLoc": {
          "line": 322,
          "column": 4,
          "position": 2420
        },
        "endLoc": {
          "line": 344,
          "column": 17,
          "position": 2611
        }
      },
      "secondFile": {
        "name": "src/components/ui/resource/ResourceManagementDashboard.tsx",
        "start": 300,
        "end": 322,
        "startLoc": {
          "line": 300,
          "column": 4,
          "position": 2232
        },
        "endLoc": {
          "line": 322,
          "column": 5,
          "position": 2422
        }
      }
    },
    {
      "format": "javascript",
      "lines": 22,
      "fragment": "={resource.resourceType} className=\"resource-grid-item\">\n          {displayMode === 'compact' && (\n            <ResourceDisplay\n              resourceType={resource.resourceType}\n              initialAmount={resource.initialAmount}\n            />\n          )}\n          \n          {displayMode === 'detailed' && (\n            <ResourceDisplay\n              resourceType={resource.resourceType}\n              initialAmount={resource.initialAmount}\n              className=\"p-2 bg-gray-100 rounded-md\"\n            />\n          )}\n          \n          {displayMode === 'bars' && (\n            <ResourceBar\n              resourceType={resource.resourceType}\n              initialAmount={resource.initialAmount}\n              maxCapacity={resource.maxCapacity}\n              showPercentage={showPercentage}",
      "tokens": 0,
      "firstFile": {
        "name": "src/components/ui/resource/ResourceGrid.tsx",
        "start": 222,
        "end": 243,
        "startLoc": {
          "line": 222,
          "column": 4,
          "position": 1334
        },
        "endLoc": {
          "line": 243,
          "column": 2,
          "position": 1478
        }
      },
      "secondFile": {
        "name": "src/components/ui/resource/ResourceGrid.tsx",
        "start": 180,
        "end": 201,
        "startLoc": {
          "line": 180,
          "column": 4,
          "position": 1079
        },
        "endLoc": {
          "line": 201,
          "column": 2,
          "position": 1223
        }
      }
    },
    {
      "format": "tsx",
      "lines": 30,
      "fragment": "interface ChainStatus {\n  chainId: string;\n  currentStepIndex: number;\n  recipeIds: string[];\n  startTime: number;\n  estimatedEndTime: number;\n  progress: number;\n  stepStatus: Array<{\n    recipeId: string;\n    converterId: string;\n    processId?: string;\n    status: 'pending' | 'in_progress' | 'completed' | 'failed';\n    startTime?: number;\n    endTime?: number;\n  }>;\n  resourceTransfers: Array<{\n    type: ResourceType;\n    amount: number;\n    fromStep: number;\n    toStep: number;\n    status: 'pending' | 'in_progress' | 'completed';\n  }>;\n  active: boolean;\n  paused: boolean;\n  completed: boolean;\n  failed: boolean;\n  errorMessage?: string;\n}\n\n// Types for the component props",
      "tokens": 0,
      "firstFile": {
        "name": "src/components/ui/resource/ChainVisualization.tsx",
        "start": 8,
        "end": 37,
        "startLoc": {
          "line": 8,
          "column": 1,
          "position": 83
        },
        "endLoc": {
          "line": 37,
          "column": 33,
          "position": 298
        }
      },
      "secondFile": {
        "name": "src/components/ui/resource/ConverterDashboard.tsx",
        "start": 11,
        "end": 40,
        "startLoc": {
          "line": 11,
          "column": 1,
          "position": 79
        },
        "endLoc": {
          "line": 40,
          "column": 50,
          "position": 294
        }
      }
    },
    {
      "format": "tsx",
      "lines": 7,
      "fragment": "links)\n          .id(d => d.id)\n          .distance(100)\n      )\n      .force('charge', d3.forceMunknownnownBody().strength(-300))\n      .force('center', d3.forceCenter(width / 2, height / 2))\n      .force('x'",
      "tokens": 0,
      "firstFile": {
        "name": "src/components/ui/resource/ChainVisualization.tsx",
        "start": 162,
        "end": 168,
        "startLoc": {
          "line": 162,
          "column": 2,
          "position": 1275
        },
        "endLoc": {
          "line": 168,
          "column": 4,
          "position": 1351
        }
      },
      "secondFile": {
        "name": "src/components/exploration/visualizations/charts/ResourceFlowDiagram.tsx",
        "start": 199,
        "end": 205,
        "startLoc": {
          "line": 199,
          "column": 2,
          "position": 1625
        },
        "endLoc": {
          "line": 205,
          "column": 12,
          "position": 1701
        }
      }
    },
    {
      "format": "tsx",
      "lines": 10,
      "fragment": ".current)\n      .append('svg')\n      .attr('width', chartWidth)\n      .attr('height', chartHeight);\n\n    // Create chart group\n    const chart = svg.append('g').attr('transform', `translate(${margin.left}, ${margin.top})`);\n\n    // Set up scales\n    const xScale = d3.scaleLinear",
      "tokens": 0,
      "firstFile": {
        "name": "src/components/ui/performance/UserBehaviorCorrelationView.tsx",
        "start": 336,
        "end": 345,
        "startLoc": {
          "line": 336,
          "column": 16,
          "position": 3007
        },
        "endLoc": {
          "line": 345,
          "column": 12,
          "position": 3091
        }
      },
      "secondFile": {
        "name": "src/components/ui/performance/UserBehaviorCorrelationView.tsx",
        "start": 212,
        "end": 222,
        "startLoc": {
          "line": 212,
          "column": 20,
          "position": 1794
        },
        "endLoc": {
          "line": 222,
          "column": 10,
          "position": 1880
        }
      }
    },
    {
      "format": "tsx",
      "lines": 12,
      "fragment": "</h3>\n                <table className=\"data-table\">\n                  <thead>\n                    <tr>\n                      <th>Test</th>\n                      <th>Baseline (ms)</th>\n                      <th>Current (ms)</th>\n                      <th>Change (%)</th>\n                    </tr>\n                  </thead>\n                  <tbody>\n                    {analysis.improvements",
      "tokens": 0,
      "firstFile": {
        "name": "src/components/ui/performance/PerformanceRegressionReport.tsx",
        "start": 425,
        "end": 436,
        "startLoc": {
          "line": 425,
          "column": 13,
          "position": 3942
        },
        "endLoc": {
          "line": 436,
          "column": 13,
          "position": 4034
        }
      },
      "secondFile": {
        "name": "src/components/ui/performance/PerformanceRegressionReport.tsx",
        "start": 396,
        "end": 407,
        "startLoc": {
          "line": 396,
          "column": 12,
          "position": 3645
        },
        "endLoc": {
          "line": 407,
          "column": 12,
          "position": 3737
        }
      }
    },
    {
      "format": "tsx",
      "lines": 8,
      "fragment": "<table className=\"data-table\">\n                <thead>\n                  <tr>\n                    <th>Test</th>\n                    <th>Baseline (ms)</th>\n                    <th>Current (ms)</th>\n                    <th>Change (%)</th>\n                    <",
      "tokens": 0,
      "firstFile": {
        "name": "src/components/ui/performance/PerformanceRegressionReport.tsx",
        "start": 459,
        "end": 466,
        "startLoc": {
          "line": 459,
          "column": 15,
          "position": 4282
        },
        "endLoc": {
          "line": 466,
          "column": 2,
          "position": 4351
        }
      },
      "secondFile": {
        "name": "src/components/ui/performance/PerformanceRegressionReport.tsx",
        "start": 397,
        "end": 404,
        "startLoc": {
          "line": 397,
          "column": 17,
          "position": 3650
        },
        "endLoc": {
          "line": 404,
          "column": 3,
          "position": 3719
        }
      }
    },
    {
      "format": "tsx",
      "lines": 8,
      "fragment": ")\n                    .map((regression, index) => (\n                      <tr key={`regression-full-${index}`}>\n                        <td>{regression.name}</td>\n                        <td>{regression.baselineTime.toFixed(2)}</td>\n                        <td>{regression.newTime.toFixed(2)}</td>\n                        <td className=\"regression\">+{regression.percentChange.toFixed(2)}%</td>\n                        <",
      "tokens": 0,
      "firstFile": {
        "name": "src/components/ui/performance/PerformanceRegressionReport.tsx",
        "start": 471,
        "end": 478,
        "startLoc": {
          "line": 471,
          "column": 14,
          "position": 4408
        },
        "endLoc": {
          "line": 478,
          "column": 2,
          "position": 4516
        }
      },
      "secondFile": {
        "name": "src/components/ui/performance/PerformanceRegressionReport.tsx",
        "start": 409,
        "end": 416,
        "startLoc": {
          "line": 409,
          "column": 2,
          "position": 3771
        },
        "endLoc": {
          "line": 416,
          "column": 3,
          "position": 3879
        }
      }
    },
    {
      "format": "tsx",
      "lines": 14,
      "fragment": "</div>\n            ) : (\n              <table className=\"data-table\">\n                <thead>\n                  <tr>\n                    <th>Test</th>\n                    <th>Baseline (ms)</th>\n                    <th>Current (ms)</th>\n                    <th>Change (%)</th>\n                    <th>Absolute Diff (ms)</th>\n                  </tr>\n                </thead>\n                <tbody>\n                  {analysis.improvements",
      "tokens": 0,
      "firstFile": {
        "name": "src/components/ui/performance/PerformanceRegressionReport.tsx",
        "start": 490,
        "end": 503,
        "startLoc": {
          "line": 490,
          "column": 2,
          "position": 4630
        },
        "endLoc": {
          "line": 503,
          "column": 13,
          "position": 4744
        }
      },
      "secondFile": {
        "name": "src/components/ui/performance/PerformanceRegressionReport.tsx",
        "start": 457,
        "end": 470,
        "startLoc": {
          "line": 457,
          "column": 3,
          "position": 4270
        },
        "endLoc": {
          "line": 470,
          "column": 12,
          "position": 4384
        }
      }
    },
    {
      "format": "tsx",
      "lines": 8,
      "fragment": ")\n                    .map((improvement, index) => (\n                      <tr key={`improvement-full-${index}`}>\n                        <td>{improvement.name}</td>\n                        <td>{improvement.baselineTime.toFixed(2)}</td>\n                        <td>{improvement.newTime.toFixed(2)}</td>\n                        <td className=\"improvement\">{improvement.percentChange.toFixed(2)}%</td>\n                        <",
      "tokens": 0,
      "firstFile": {
        "name": "src/components/ui/performance/PerformanceRegressionReport.tsx",
        "start": 504,
        "end": 511,
        "startLoc": {
          "line": 504,
          "column": 14,
          "position": 4768
        },
        "endLoc": {
          "line": 511,
          "column": 2,
          "position": 4875
        }
      },
      "secondFile": {
        "name": "src/components/ui/performance/PerformanceRegressionReport.tsx",
        "start": 438,
        "end": 445,
        "startLoc": {
          "line": 438,
          "column": 2,
          "position": 4068
        },
        "endLoc": {
          "line": 445,
          "column": 3,
          "position": 4175
        }
      }
    },
    {
      "format": "tsx",
      "lines": 11,
      "fragment": ".map((regression, index) => (\n                    <tr key={`regression-${index}`}>\n                      <td>{regression.name}</td>\n                      <td>{regression.baselineTime.toFixed(2)}</td>\n                      <td>{regression.newTime.toFixed(2)}</td>\n                      <td className=\"regression\">+{regression.percentChange.toFixed(2)}%</td>\n                    </tr>\n                  ))}\n                </tbody>\n              </table>\n            <",
      "tokens": 0,
      "firstFile": {
        "name": "src/components/ui/performance/PerformanceBenchmarkDashboard.tsx",
        "start": 424,
        "end": 434,
        "startLoc": {
          "line": 424,
          "column": 12,
          "position": 3354
        },
        "endLoc": {
          "line": 434,
          "column": 2,
          "position": 3479
        }
      },
      "secondFile": {
        "name": "src/components/ui/performance/PerformanceRegressionReport.tsx",
        "start": 410,
        "end": 420,
        "startLoc": {
          "line": 410,
          "column": 23,
          "position": 3774
        },
        "endLoc": {
          "line": 420,
          "column": 3,
          "position": 3899
        }
      }
    },
    {
      "format": "tsx",
      "lines": 12,
      "fragment": "</h3>\n              <table className=\"analysis-table\">\n                <thead>\n                  <tr>\n                    <th>Name</th>\n                    <th>Baseline (ms)</th>\n                    <th>New (ms)</th>\n                    <th>Change (%)</th>\n                  </tr>\n                </thead>\n                <tbody>\n                  {regressionAnalysis.improvements",
      "tokens": 0,
      "firstFile": {
        "name": "src/components/ui/performance/PerformanceBenchmarkDashboard.tsx",
        "start": 439,
        "end": 450,
        "startLoc": {
          "line": 439,
          "column": 13,
          "position": 3513
        },
        "endLoc": {
          "line": 450,
          "column": 13,
          "position": 3605
        }
      },
      "secondFile": {
        "name": "src/components/ui/performance/PerformanceBenchmarkDashboard.tsx",
        "start": 413,
        "end": 424,
        "startLoc": {
          "line": 413,
          "column": 12,
          "position": 3261
        },
        "endLoc": {
          "line": 424,
          "column": 12,
          "position": 3353
        }
      }
    },
    {
      "format": "tsx",
      "lines": 11,
      "fragment": ".map((improvement, index) => (\n                    <tr key={`improvement-${index}`}>\n                      <td>{improvement.name}</td>\n                      <td>{improvement.baselineTime.toFixed(2)}</td>\n                      <td>{improvement.newTime.toFixed(2)}</td>\n                      <td className=\"improvement\">{improvement.percentChange.toFixed(2)}%</td>\n                    </tr>\n                  ))}\n                </tbody>\n              </table>\n            <",
      "tokens": 0,
      "firstFile": {
        "name": "src/components/ui/performance/PerformanceBenchmarkDashboard.tsx",
        "start": 450,
        "end": 460,
        "startLoc": {
          "line": 450,
          "column": 13,
          "position": 3606
        },
        "endLoc": {
          "line": 460,
          "column": 2,
          "position": 3730
        }
      },
      "secondFile": {
        "name": "src/components/ui/performance/PerformanceRegressionReport.tsx",
        "start": 439,
        "end": 449,
        "startLoc": {
          "line": 439,
          "column": 23,
          "position": 4071
        },
        "endLoc": {
          "line": 449,
          "column": 3,
          "position": 4195
        }
      }
    },
    {
      "format": "tsx",
      "lines": 9,
      "fragment": ".selectAll<SVGCircleElement, Particle>('circle')\n      .data(particles, (d: Particle) => d.id)\n      .join('circle')\n      .attr('r', d => d.size)\n      .attr('cx', d => d.x)\n      .attr('cy', d => d.y)\n      .attr('fill', d => d.color);\n\n    // FPS monitoring",
      "tokens": 0,
      "firstFile": {
        "name": "src/components/ui/performance/InterpolationMemoizationDemo.tsx",
        "start": 136,
        "end": 144,
        "startLoc": {
          "line": 136,
          "column": 7,
          "position": 1213
        },
        "endLoc": {
          "line": 144,
          "column": 18,
          "position": 1320
        }
      },
      "secondFile": {
        "name": "src/components/ui/performance/InterpolationMemoizationDemo.tsx",
        "start": 125,
        "end": 133,
        "startLoc": {
          "line": 125,
          "column": 7,
          "position": 1077
        },
        "endLoc": {
          "line": 133,
          "column": 20,
          "position": 1184
        }
      }
    },
    {
      "format": "tsx",
      "lines": 7,
      "fragment": ":\n            return {\n              position: typedInterpolators.object(\n                { x: p.x, y: p.y },\n                { x: p.targetX, y: p.targetY }\n              ),\n              size: typedInterpolators.number(p.size, p.targetSize",
      "tokens": 0,
      "firstFile": {
        "name": "src/components/ui/performance/InterpolationMemoizationDemo.tsx",
        "start": 169,
        "end": 175,
        "startLoc": {
          "line": 169,
          "column": 8,
          "position": 1612
        },
        "endLoc": {
          "line": 175,
          "column": 11,
          "position": 1688
        }
      },
      "secondFile": {
        "name": "src/components/ui/performance/InterpolationMemoizationDemo.tsx",
        "start": 154,
        "end": 160,
        "startLoc": {
          "line": 154,
          "column": 11,
          "position": 1418
        },
        "endLoc": {
          "line": 160,
          "column": 5,
          "position": 1494
        }
      }
    },
    {
      "format": "tsx",
      "lines": 7,
      "fragment": ":\n            return {\n              position: memoizedInterpolatorFactory.object(\n                { x: p.x, y: p.y },\n                { x: p.targetX, y: p.targetY }\n              ),\n              size: memoizedInterpolatorFactory.number(p.size, p.targetSize",
      "tokens": 0,
      "firstFile": {
        "name": "src/components/ui/performance/InterpolationMemoizationDemo.tsx",
        "start": 206,
        "end": 212,
        "startLoc": {
          "line": 206,
          "column": 8,
          "position": 2010
        },
        "endLoc": {
          "line": 212,
          "column": 11,
          "position": 2086
        }
      },
      "secondFile": {
        "name": "src/components/ui/performance/InterpolationMemoizationDemo.tsx",
        "start": 191,
        "end": 197,
        "startLoc": {
          "line": 191,
          "column": 11,
          "position": 1816
        },
        "endLoc": {
          "line": 197,
          "column": 5,
          "position": 1892
        }
      }
    },
    {
      "format": "tsx",
      "lines": 25,
      "fragment": "[i];\n\n          // Calculate t value oscillating between 0 and 1\n          const t = (Math.sin(elapsed * d.speed * 0.001) + 1) / 2;\n\n          // Apply interpolated values\n          const pos = interpolators.position(t);\n\n          const element = d3.select(this);\n          element.attr('cx', pos.x);\n          element.attr('cy', pos.y);\n\n          if (interpolationType === 'color' || interpolationType === 'mixed') {\n            element.attr('fill', interpolators.color!(t));\n          }\n\n          if (interpolationType === 'mixed') {\n            element.attr('r', interpolators.size(t));\n          }\n        });\n\n        return false; // Continue animation\n      },\n      {\n        name: 'Memoized Animation'",
      "tokens": 0,
      "firstFile": {
        "name": "src/components/ui/performance/InterpolationMemoizationDemo.tsx",
        "start": 289,
        "end": 313,
        "startLoc": {
          "line": 289,
          "column": 30,
          "position": 2749
        },
        "endLoc": {
          "line": 313,
          "column": 21,
          "position": 2958
        }
      },
      "secondFile": {
        "name": "src/components/ui/performance/InterpolationMemoizationDemo.tsx",
        "start": 235,
        "end": 259,
        "startLoc": {
          "line": 235,
          "column": 22,
          "position": 2279
        },
        "endLoc": {
          "line": 259,
          "column": 21,
          "position": 2488
        }
      }
    },
    {
      "format": "css",
      "lines": 27,
      "fragment": " {\n          display: flex;\n          border-bottom: 1px solid #e0e0e0;\n          background-color: #f5f5f5;\n        }\n\n        .tab-button {\n          padding: 12px 16px;\n          border: none;\n          background: none;\n          cursor: pointer;\n          font-size: 14px;\n          font-weight: 500;\n          color: #555;\n          border-bottom: 2px solid transparent;\n        }\n\n        .tab-button:hover {\n          background-color: #ececec;\n        }\n\n        .tab-button.active {\n          color: #1a73e8;\n          border-bottom-color: #1a73e8;\n        }\n\n        .panel-content",
      "tokens": 0,
      "firstFile": {
        "name": "src/components/ui/performance/DynamicBudgetAdjustmentPanel.tsx",
        "start": 647,
        "end": 673,
        "startLoc": {
          "line": 647,
          "column": 12,
          "position": 5417
        },
        "endLoc": {
          "line": 673,
          "column": 15,
          "position": 5510
        }
      },
      "secondFile": {
        "name": "src/components/ui/performance/PerformanceRegressionReport.tsx",
        "start": 540,
        "end": 566,
        "startLoc": {
          "line": 540,
          "column": 13,
          "position": 5041
        },
        "endLoc": {
          "line": 566,
          "column": 21,
          "position": 5134
        }
      }
    },
    {
      "format": "tsx",
      "lines": 24,
      "fragment": ") {\n      const success = budgetAdjuster.adjustBudget(\n        recommendation.originalBudget.name,\n        recommendation.recommendedBudget\n      );\n\n      if (success) {\n        applied.push(recommendation);\n      }\n    }\n\n    if (applied.length > 0) {\n      // Update state\n      setCurrentBudgets(budgetAdjuster.getCurrentBudgets());\n      setRecommendations(budgetAdjuster.checkForBudgetAdjustments());\n      setAppliedChanges(prev => [...prev, ...applied]);\n      setShowAppliedChanges(true);\n\n      // Notify parent component\n      if (onBudgetsAdjusted) {\n        onBudgetsAdjusted(budgetAdjuster.getCurrentBudgets());\n      }\n    }\n  };",
      "tokens": 0,
      "firstFile": {
        "name": "src/components/ui/performance/DynamicBudgetAdjustmentPanel.tsx",
        "start": 195,
        "end": 218,
        "startLoc": {
          "line": 195,
          "column": 16,
          "position": 1401
        },
        "endLoc": {
          "line": 218,
          "column": 2,
          "position": 1557
        }
      },
      "secondFile": {
        "name": "src/components/ui/performance/DynamicBudgetAdjustmentPanel.tsx",
        "start": 100,
        "end": 124,
        "startLoc": {
          "line": 100,
          "column": 30,
          "position": 728
        },
        "endLoc": {
          "line": 124,
          "column": 2,
          "position": 886
        }
      }
    },
    {
      "format": "tsx",
      "lines": 15,
      "fragment": "as D3SVGSelection)\n      .selectAll<SVGCircleElement, CircleElement>('circle')\n      .data<CircleElement>(elements, (d: CircleElement) => d.id)\n      .enter()\n      .append('circle')\n      .attr('cx', (d: CircleElement) => d.x)\n      .attr('cy', (d: CircleElement) => d.y)\n      .attr('r', (d: CircleElement) => d.radius)\n      .attr('fill', (d: CircleElement) => d.color)\n      .attr('stroke', '#333')\n      .attr('stroke-width', 1);\n\n    // Set up animation if active\n    if (isAnimating) {\n      // Register animation with the animation frame manager",
      "tokens": 0,
      "firstFile": {
        "name": "src/components/ui/performance/BatchedUpdateDemo.tsx",
        "start": 200,
        "end": 214,
        "startLoc": {
          "line": 200,
          "column": 2,
          "position": 1869
        },
        "endLoc": {
          "line": 214,
          "column": 55,
          "position": 2043
        }
      },
      "secondFile": {
        "name": "src/components/ui/performance/BatchedUpdateDemo.tsx",
        "start": 105,
        "end": 119,
        "startLoc": {
          "line": 105,
          "column": 2,
          "position": 869
        },
        "endLoc": {
          "line": 119,
          "column": 6,
          "position": 1043
        }
      }
    },
    {
      "format": "tsx",
      "lines": 9,
      "fragment": "const updatedElements = elements.map(el => {\n          // More complex movement based on complexity level\n          const complexityFactor = animationComplexity / 100;\n          const noise = Math.sin(Date.now() * 0.001 + el.id) * 10 * complexityFactor;\n\n          return {\n            ...el,\n            x:\n              Math.max(10, Math.min(width / 2 - 10, el.x + (Math.random() - 0.5) * 10 + noise)) +",
      "tokens": 0,
      "firstFile": {
        "name": "src/components/ui/performance/BatchedUpdateDemo.tsx",
        "start": 236,
        "end": 244,
        "startLoc": {
          "line": 236,
          "column": 9,
          "position": 2191
        },
        "endLoc": {
          "line": 244,
          "column": 2,
          "position": 2327
        }
      },
      "secondFile": {
        "name": "src/components/ui/performance/BatchedUpdateDemo.tsx",
        "start": 121,
        "end": 128,
        "startLoc": {
          "line": 121,
          "column": 9,
          "position": 1062
        },
        "endLoc": {
          "line": 128,
          "column": 2,
          "position": 1196
        }
      }
    },
    {
      "format": "tsx",
      "lines": 10,
      "fragment": "y: Math.max(10, Math.min(height - 10, el.y + (Math.random() - 0.5) * 10 + noise)),\n            radius: Math.max(3, el.radius + (Math.random() - 0.5) * 2 * complexityFactor),\n            color: d3.interpolateRgb(\n              el.color,\n              d3.interpolateRainbow(Math.random() * complexityFactor)\n            )(0.05),\n          };\n        });\n\n        // Batched D3 update (prevents layout thrashing)",
      "tokens": 0,
      "firstFile": {
        "name": "src/components/ui/performance/BatchedUpdateDemo.tsx",
        "start": 246,
        "end": 255,
        "startLoc": {
          "line": 246,
          "column": 13,
          "position": 2340
        },
        "endLoc": {
          "line": 255,
          "column": 49,
          "position": 2478
        }
      },
      "secondFile": {
        "name": "src/components/ui/performance/BatchedUpdateDemo.tsx",
        "start": 129,
        "end": 138,
        "startLoc": {
          "line": 129,
          "column": 13,
          "position": 1199
        },
        "endLoc": {
          "line": 138,
          "column": 51,
          "position": 1337
        }
      }
    },
    {
      "format": "tsx",
      "lines": 11,
      "fragment": "as D3SVGSelection)\n          .selectAll<SVGCircleElement, CircleElement>('circle')\n          .data<CircleElement>(updatedElements, (d: CircleElement) => d.id)\n          .transition()\n          .duration(updateFrequency * 0.8)\n          .attr('cx', (d: CircleElement) => d.x)\n          .attr('cy', (d: CircleElement) => d.y)\n          .attr('r', (d: CircleElement) => d.radius)\n          .attr('fill', (d: CircleElement) => d.color);\n\n        // Note: we don't update elements state here since",
      "tokens": 0,
      "firstFile": {
        "name": "src/components/ui/performance/BatchedUpdateDemo.tsx",
        "start": 256,
        "end": 266,
        "startLoc": {
          "line": 256,
          "column": 2,
          "position": 2484
        },
        "endLoc": {
          "line": 266,
          "column": 51,
          "position": 2630
        }
      },
      "secondFile": {
        "name": "src/components/ui/performance/BatchedUpdateDemo.tsx",
        "start": 139,
        "end": 149,
        "startLoc": {
          "line": 139,
          "column": 2,
          "position": 1343
        },
        "endLoc": {
          "line": 149,
          "column": 25,
          "position": 1489
        }
      }
    },
    {
      "format": "tsx",
      "lines": 15,
      "fragment": "(Math.round((frameCount * 1000) / (now - lastTime)));\n          frameCount = 0;\n          lastTime = now;\n        }\n\n        if (isAnimating) {\n          requestAnimationFrame(measureFps);\n        }\n      };\n\n      requestAnimationFrame(measureFps);\n\n      return () => {\n        clearInterval(updateInterval);\n        if",
      "tokens": 0,
      "firstFile": {
        "name": "src/components/ui/performance/BatchedUpdateDemo.tsx",
        "start": 279,
        "end": 293,
        "startLoc": {
          "line": 279,
          "column": 14,
          "position": 2725
        },
        "endLoc": {
          "line": 293,
          "column": 3,
          "position": 2821
        }
      },
      "secondFile": {
        "name": "src/components/ui/performance/BatchedUpdateDemo.tsx",
        "start": 162,
        "end": 176,
        "startLoc": {
          "line": 162,
          "column": 15,
          "position": 1588
        },
        "endLoc": {
          "line": 176,
          "column": 2,
          "position": 1684
        }
      }
    },
    {
      "format": "tsx",
      "lines": 10,
      "fragment": "= (group: 'circles' | 'paths' | 'background') => {\n    const ids =\n      group === 'circles'\n        ? circleAnimations.map(a => a.id)\n        : group === 'paths'\n          ? pathAnimations.map(a => a.id)\n          : backgroundAnimations.map(a => a.id);\n\n    ids.forEach(id => {\n      animationFrameManager.resumeAnimation",
      "tokens": 0,
      "firstFile": {
        "name": "src/components/ui/performance/AnimationFrameManagerDemo.tsx",
        "start": 296,
        "end": 305,
        "startLoc": {
          "line": 296,
          "column": 2,
          "position": 2706
        },
        "endLoc": {
          "line": 305,
          "column": 16,
          "position": 2814
        }
      },
      "secondFile": {
        "name": "src/components/ui/performance/AnimationFrameManagerDemo.tsx",
        "start": 283,
        "end": 292,
        "startLoc": {
          "line": 283,
          "column": 2,
          "position": 2577
        },
        "endLoc": {
          "line": 292,
          "column": 15,
          "position": 2685
        }
      }
    },
    {
      "format": "css",
      "lines": 25,
      "fragment": " {\n          padding: 20px;\n          font-family:\n            system-ui,\n            -apple-system,\n            BlinkMacSystemFont,\n            'Segoe UI',\n            Roboto,\n            sans-serif;\n        }\n\n        h2 {\n          color: #333;\n          border-bottom: 2px solid #4285f4;\n          padding-bottom: 10px;\n          margin-bottom: 20px;\n        }\n\n        h3 {\n          color: #4285f4;\n          margin-top: 0;\n          margin-bottom: 15px;\n        }\n\n        .analysis-tabs",
      "tokens": 0,
      "firstFile": {
        "name": "src/components/ui/performance/AdvancedMetricAnalysis.tsx",
        "start": 573,
        "end": 597,
        "startLoc": {
          "line": 573,
          "column": 34,
          "position": 5469
        },
        "endLoc": {
          "line": 597,
          "column": 15,
          "position": 5533
        }
      },
      "secondFile": {
        "name": "src/components/ui/performance/MLPerformancePrediction.tsx",
        "start": 719,
        "end": 743,
        "startLoc": {
          "line": 719,
          "column": 35,
          "position": 6735
        },
        "endLoc": {
          "line": 743,
          "column": 21,
          "position": 6799
        }
      }
    },
    {
      "format": "css",
      "lines": 25,
      "fragment": " {\n          padding: 15px;\n          margin: 0;\n          background: #f5f5f5;\n          border-bottom: 1px solid #ddd;\n        }\n\n        table {\n          width: 100%;\n          border-collapse: collapse;\n        }\n\n        th,\n        td {\n          padding: 12px 15px;\n          text-align: left;\n          border-bottom: 1px solid #eee;\n        }\n\n        th {\n          background: #f9f9f9;\n          font-weight: 500;\n        }\n\n        .severity-high",
      "tokens": 0,
      "firstFile": {
        "name": "src/components/ui/performance/AdvancedMetricAnalysis.tsx",
        "start": 649,
        "end": 673,
        "startLoc": {
          "line": 649,
          "column": 32,
          "position": 5716
        },
        "endLoc": {
          "line": 673,
          "column": 15,
          "position": 5794
        }
      },
      "secondFile": {
        "name": "src/components/ui/performance/MLPerformancePrediction.tsx",
        "start": 809,
        "end": 834,
        "startLoc": {
          "line": 809,
          "column": 23,
          "position": 7044
        },
        "endLoc": {
          "line": 834,
          "column": 27,
          "position": 7122
        }
      }
    },
    {
      "format": "tsx",
      "lines": 20,
      "fragment": "const setupCharts = () => {\n    if (!chartRef.current) return;\n\n    // Clear previous charts\n    d3.select(chartRef.current).selectAll('*').remove();\n\n    // Set up the SVG container\n    const svg = d3\n      .select(chartRef.current)\n      .append('svg')\n      .attr('width', width)\n      .attr('height', height)\n      .append('g')\n      .attr('transform', 'translate(50, 20)');\n\n    // Calculate chart dimensions\n    const chartWidth = width - 100;\n    const chartHeight = height - 100;\n\n    // Create charts for each metric",
      "tokens": 0,
      "firstFile": {
        "name": "src/components/ui/performance/AdvancedMetricAnalysis.tsx",
        "start": 111,
        "end": 130,
        "startLoc": {
          "line": 111,
          "column": 3,
          "position": 728
        },
        "endLoc": {
          "line": 130,
          "column": 33,
          "position": 879
        }
      },
      "secondFile": {
        "name": "src/components/ui/performance/MLPerformancePrediction.tsx",
        "start": 492,
        "end": 511,
        "startLoc": {
          "line": 492,
          "column": 3,
          "position": 4532
        },
        "endLoc": {
          "line": 511,
          "column": 35,
          "position": 4683
        }
      }
    },
    {
      "format": "tsx",
      "lines": 7,
      "fragment": ".length - 40;\n\n      // Create a group for this chart\n      const chartGroup = svg.append('g').attr('transform', `translate(0, ${yPos})`);\n\n      // Add title\n      chartGroup.append('text').attr('x', 0).attr('y', 0).attr('dy', '0.35em').text(metric",
      "tokens": 0,
      "firstFile": {
        "name": "src/components/ui/performance/AdvancedMetricAnalysis.tsx",
        "start": 137,
        "end": 143,
        "startLoc": {
          "line": 137,
          "column": 17,
          "position": 975
        },
        "endLoc": {
          "line": 143,
          "column": 7,
          "position": 1052
        }
      },
      "secondFile": {
        "name": "src/components/ui/performance/MLPerformancePrediction.tsx",
        "start": 515,
        "end": 526,
        "startLoc": {
          "line": 515,
          "column": 12,
          "position": 4738
        },
        "endLoc": {
          "line": 526,
          "column": 2,
          "position": 4825
        }
      }
    },
    {
      "format": "tsx",
      "lines": 8,
      "fragment": "const yAxis = d3.axisLeft(yScale).ticks(5);\n\n      // Add axes\n      chartGroup.append('g').attr('transform', `translate(0, ${chartHeight_i})`).call(xAxis);\n\n      chartGroup.append('g').call(yAxis);\n\n      // Create line generator",
      "tokens": 0,
      "firstFile": {
        "name": "src/components/ui/performance/AdvancedMetricAnalysis.tsx",
        "start": 163,
        "end": 170,
        "startLoc": {
          "line": 163,
          "column": 7,
          "position": 1247
        },
        "endLoc": {
          "line": 170,
          "column": 25,
          "position": 1313
        }
      },
      "secondFile": {
        "name": "src/components/ui/performance/MLPerformancePrediction.tsx",
        "start": 547,
        "end": 554,
        "startLoc": {
          "line": 547,
          "column": 7,
          "position": 5063
        },
        "endLoc": {
          "line": 554,
          "column": 41,
          "position": 5129
        }
      }
    },
    {
      "format": "tsx",
      "lines": 12,
      "fragment": ", {\n              detail: { modalId: title || 'modal' }\n            });\n            document.dispatchEvent(event);\n          } catch (error) {\n            errorLoggingService.logError(\n              error instanceof Error ? error : new Error(String(error)),\n              ErrorType.EVENT_HANDLING,\n              ErrorSeverity.LOW,\n              {\n                componentName: 'Modal',\n                action: 'dispatchModalClosedEvent'",
      "tokens": 0,
      "firstFile": {
        "name": "src/components/ui/overlays/Modal.tsx",
        "start": 192,
        "end": 203,
        "startLoc": {
          "line": 192,
          "column": 13,
          "position": 1031
        },
        "endLoc": {
          "line": 203,
          "column": 27,
          "position": 1133
        }
      },
      "secondFile": {
        "name": "src/components/ui/overlays/Modal.tsx",
        "start": 158,
        "end": 169,
        "startLoc": {
          "line": 158,
          "column": 13,
          "position": 777
        },
        "endLoc": {
          "line": 169,
          "column": 27,
          "position": 879
        }
      }
    },
    {
      "format": "tsx",
      "lines": 17,
      "fragment": "useEffect(() => {\n    if (!isOpen || !closeOnEsc) return;\n    \n    const handleKeyDown = (event: KeyboardEvent) => {\n      if (event.key === 'Escape') {\n        onClose();\n      }\n    };\n    \n    document.addEventListener('keydown', handleKeyDown);\n    \n    return () => {\n      document.removeEventListener('keydown', handleKeyDown);\n    };\n  }, [isOpen, onClose, closeOnEsc]);\n  \n  // Handle click on overlay",
      "tokens": 0,
      "firstFile": {
        "name": "src/components/ui/overlays/Modal.tsx",
        "start": 219,
        "end": 235,
        "startLoc": {
          "line": 219,
          "column": 3,
          "position": 1232
        },
        "endLoc": {
          "line": 235,
          "column": 27,
          "position": 1366
        }
      },
      "secondFile": {
        "name": "src/components/ui/overlays/Popover.tsx",
        "start": 427,
        "end": 443,
        "startLoc": {
          "line": 427,
          "column": 3,
          "position": 3116
        },
        "endLoc": {
          "line": 443,
          "column": 32,
          "position": 3250
        }
      }
    },
    {
      "format": "javascript",
      "lines": 24,
      "fragment": "\n                }}\n              >\n                {title}\n              </h2>\n            )}\n            \n            {showCloseButton && (\n              <button\n                type=\"button\"\n                className=\"drawer-close-button\"\n                onClick={onClose}\n                aria-label=\"Close drawer\"\n                style={{\n                  appearance: 'none',\n                  background: 'transparent',\n                  border: 'none',\n                  cursor: 'pointer',\n                  display: 'flex',\n                  alignItems: 'center',\n                  justifyContent: 'center',\n                  padding: '8px',\n                  borderRadius: 'var(--border-radius-small, 4px)',\n                  color: 'var(--color-text-secondary, #718096)',",
      "tokens": 0,
      "firstFile": {
        "name": "src/components/ui/overlays/Drawer.tsx",
        "start": 427,
        "end": 450,
        "startLoc": {
          "line": 427,
          "column": 2,
          "position": 2768
        },
        "endLoc": {
          "line": 450,
          "column": 2,
          "position": 2879
        }
      },
      "secondFile": {
        "name": "src/components/ui/overlays/Modal.tsx",
        "start": 332,
        "end": 356,
        "startLoc": {
          "line": 332,
          "column": 37,
          "position": 2084
        },
        "endLoc": {
          "line": 356,
          "column": 17,
          "position": 2195
        }
      }
    },
    {
      "format": "tsx",
      "lines": 12,
      "fragment": ", {\n              detail: { modalId: title || 'drawer', modalType: 'drawer' }\n            });\n            document.dispatchEvent(event);\n          } catch (error) {\n            errorLoggingService.logError(\n              error instanceof Error ? error : new Error(String(error)),\n              ErrorType.EVENT_HANDLING,\n              ErrorSeverity.LOW,\n              {\n                componentName: 'Drawer',\n                action: 'dispatchDrawerClosedEvent'",
      "tokens": 0,
      "firstFile": {
        "name": "src/components/ui/overlays/Drawer.tsx",
        "start": 229,
        "end": 240,
        "startLoc": {
          "line": 229,
          "column": 13,
          "position": 1269
        },
        "endLoc": {
          "line": 240,
          "column": 28,
          "position": 1377
        }
      },
      "secondFile": {
        "name": "src/components/ui/overlays/Drawer.tsx",
        "start": 186,
        "end": 197,
        "startLoc": {
          "line": 186,
          "column": 13,
          "position": 942
        },
        "endLoc": {
          "line": 197,
          "column": 28,
          "position": 1050
        }
      }
    },
    {
      "format": "tsx",
      "lines": 21,
      "fragment": "]);\n  \n  // Handle ESC key for closing\n  useEffect(() => {\n    if (!isOpen || !closeOnEsc) return;\n    \n    const handleKeyDown = (event: KeyboardEvent) => {\n      if (event.key === 'Escape') {\n        onClose();\n      }\n    };\n    \n    document.addEventListener('keydown', handleKeyDown);\n    \n    return () => {\n      document.removeEventListener('keydown', handleKeyDown);\n    };\n  }, [isOpen, onClose, closeOnEsc]);\n  \n  // Handle click on overlay\n  const handleOverlayClick = (",
      "tokens": 0,
      "firstFile": {
        "name": "src/components/ui/overlays/Drawer.tsx",
        "start": 254,
        "end": 274,
        "startLoc": {
          "line": 254,
          "column": 12,
          "position": 1489
        },
        "endLoc": {
          "line": 274,
          "column": 2,
          "position": 1642
        }
      },
      "secondFile": {
        "name": "src/components/ui/overlays/Modal.tsx",
        "start": 216,
        "end": 236,
        "startLoc": {
          "line": 216,
          "column": 18,
          "position": 1222
        },
        "endLoc": {
          "line": 236,
          "column": 12,
          "position": 1375
        }
      }
    },
    {
      "format": "tsx",
      "lines": 13,
      "fragment": "} =\n    useModuleUpgrade(moduleId);\n\n  const [module, setModule] = useState<BaseModule | null>(null);\n\n  // Load module data\n  useEffect(() => {\n    const moduleData = moduleManager.getModule(moduleId);\n    setModule(moduleData || null);\n  }, [moduleId]);\n\n  // Handle upgrade start\n  const handleUpgradeStart = (e",
      "tokens": 0,
      "firstFile": {
        "name": "src/components/ui/modules/ModuleUpgradeDisplay.tsx",
        "start": 277,
        "end": 289,
        "startLoc": {
          "line": 277,
          "column": 2,
          "position": 1992
        },
        "endLoc": {
          "line": 289,
          "column": 2,
          "position": 2091
        }
      },
      "secondFile": {
        "name": "src/components/ui/modules/ModuleUpgradeDisplay.tsx",
        "start": 51,
        "end": 62,
        "startLoc": {
          "line": 51,
          "column": 3,
          "position": 320
        },
        "endLoc": {
          "line": 62,
          "column": 2,
          "position": 418
        }
      }
    },
    {
      "format": "tsx",
      "lines": 11,
      "fragment": "(moduleId);\n\n    const [module, setModule] = useState<BaseModule | null>(null);\n\n    // Load module data\n    useEffect(() => {\n      const moduleData = moduleManager.getModule(moduleId);\n      setModule(moduleData || null);\n    }, [moduleId]);\n\n    // Handle status change",
      "tokens": 0,
      "firstFile": {
        "name": "src/components/ui/modules/ModuleStatusDisplay.tsx",
        "start": 45,
        "end": 55,
        "startLoc": {
          "line": 45,
          "column": 16,
          "position": 304
        },
        "endLoc": {
          "line": 55,
          "column": 24,
          "position": 387
        }
      },
      "secondFile": {
        "name": "src/components/ui/modules/ModuleUpgradeDisplay.tsx",
        "start": 51,
        "end": 61,
        "startLoc": {
          "line": 51,
          "column": 17,
          "position": 325
        },
        "endLoc": {
          "line": 61,
          "column": 24,
          "position": 408
        }
      }
    },
    {
      "format": "tsx",
      "lines": 11,
      "fragment": "} = useModuleStatus(moduleId);\n\n    const [module, setModule] = useState<BaseModule | null>(null);\n\n    // Load module data\n    useEffect(() => {\n      const moduleData = moduleManager.getModule(moduleId);\n      setModule(moduleData || null);\n    }, [moduleId]);\n\n    if",
      "tokens": 0,
      "firstFile": {
        "name": "src/components/ui/modules/ModuleStatusDisplay.tsx",
        "start": 306,
        "end": 316,
        "startLoc": {
          "line": 306,
          "column": 2,
          "position": 2404
        },
        "endLoc": {
          "line": 316,
          "column": 3,
          "position": 2492
        }
      },
      "secondFile": {
        "name": "src/components/ui/modules/ModuleStatusDisplay.tsx",
        "start": 45,
        "end": 61,
        "startLoc": {
          "line": 45,
          "column": 5,
          "position": 299
        },
        "endLoc": {
          "line": 61,
          "column": 24,
          "position": 408
        }
      }
    },
    {
      "format": "tsx",
      "lines": 15,
      "fragment": "} = useModuleStatus(moduleId);\n\n    const [module, setModule] = useState<BaseModule | null>(null);\n\n    // Load module data\n    useEffect(() => {\n      const moduleData = moduleManager.getModule(moduleId);\n      setModule(moduleData || null);\n    }, [moduleId]);\n\n    if (!module) {\n      return null;\n    }\n\n    // Filter alerts by level and acknowledgement",
      "tokens": 0,
      "firstFile": {
        "name": "src/components/ui/modules/ModuleStatusDisplay.tsx",
        "start": 433,
        "end": 447,
        "startLoc": {
          "line": 433,
          "column": 2,
          "position": 3443
        },
        "endLoc": {
          "line": 447,
          "column": 46,
          "position": 3551
        }
      },
      "secondFile": {
        "name": "src/components/ui/modules/ModuleStatusDisplay.tsx",
        "start": 45,
        "end": 320,
        "startLoc": {
          "line": 45,
          "column": 5,
          "position": 299
        },
        "endLoc": {
          "line": 320,
          "column": 6,
          "position": 2512
        }
      }
    },
    {
      "format": "tsx",
      "lines": 19,
      "fragment": "= (event: ModuleEvent) => {\n      if (event?.data?.buildingId === buildingId) {\n        // Refresh module list\n        const building = moduleManager.getBuilding(buildingId);\n        if (building) {\n          setModuleIds(building.modules.map(module => module.id));\n        }\n      }\n    };\n\n    /**\n     * Handler for module status changes - will be implemented in future updates\n     * This function will be used to:\n     * 1. Update module status indicators in real-time\n     * 2. Trigger visual feedback for status transitions\n     * 3. Update performance metrics based on status changes\n     * 4. Notify connected systems about status changes\n     * 5. Log status changes for analytics and debugging\n     */",
      "tokens": 0,
      "firstFile": {
        "name": "src/components/ui/modules/ModuleHUD.tsx",
        "start": 359,
        "end": 377,
        "startLoc": {
          "line": 359,
          "column": 2,
          "position": 2847
        },
        "endLoc": {
          "line": 377,
          "column": 8,
          "position": 2938
        }
      },
      "secondFile": {
        "name": "src/components/ui/modules/ModuleHUD.tsx",
        "start": 349,
        "end": 359,
        "startLoc": {
          "line": 349,
          "column": 2,
          "position": 2752
        },
        "endLoc": {
          "line": 359,
          "column": 6,
          "position": 2843
        }
      }
    },
    {
      "format": "tsx",
      "lines": 21,
      "fragment": ");\n\n  // Measure container height for virtualization\n  useEffect(() => {\n    if (containerRef.current && virtualized) {\n      const resizeObserver = new ResizeObserver(entries => {\n        const { height } = entries[0].contentRect;\n        setContainerHeight(height);\n      });\n      \n      resizeObserver.observe(containerRef.current);\n      \n      return () => {\n        if (containerRef.current) {\n          resizeObserver.unobserve(containerRef.current);\n        }\n      };\n    }\n  }, [virtualized]);\n\n  // Filter and sort modules based on current filters",
      "tokens": 0,
      "firstFile": {
        "name": "src/components/ui/modules/ModuleGrid.tsx",
        "start": 65,
        "end": 85,
        "startLoc": {
          "line": 65,
          "column": 5,
          "position": 480
        },
        "endLoc": {
          "line": 85,
          "column": 52,
          "position": 629
        }
      },
      "secondFile": {
        "name": "src/components/ui/resource/ResourceGrid.tsx",
        "start": 106,
        "end": 126,
        "startLoc": {
          "line": 106,
          "column": 4,
          "position": 450
        },
        "endLoc": {
          "line": 126,
          "column": 66,
          "position": 601
        }
      }
    },
    {
      "format": "tsx",
      "lines": 19,
      "fragment": "moduleManager.publishEvent({\n        type: EventType.MODULE_STATUS_CHANGED,\n        moduleId,\n        moduleType: activeModule.type,\n        timestamp: Date.now(),\n        data: {\n          status: newStatus,\n          previousStatus: currentStatus,\n        },\n      });\n      \n      // Call status change callback if provided\n      if (onStatusChange) {\n        onStatusChange(newStatus);\n      }\n    }\n  };\n  \n  // Display loading state",
      "tokens": 0,
      "firstFile": {
        "name": "src/components/ui/modules/ModuleControls.tsx",
        "start": 179,
        "end": 197,
        "startLoc": {
          "line": 179,
          "column": 7,
          "position": 1004
        },
        "endLoc": {
          "line": 197,
          "column": 25,
          "position": 1106
        }
      },
      "secondFile": {
        "name": "src/components/ui/modules/ModuleControls.tsx",
        "start": 148,
        "end": 166,
        "startLoc": {
          "line": 148,
          "column": 7,
          "position": 775
        },
        "endLoc": {
          "line": 166,
          "column": 28,
          "position": 877
        }
      }
    },
    {
      "format": "tsx",
      "lines": 12,
      "fragment": "?: string | number | {\n    xs?: string | number;\n    sm?: string | number;\n    md?: string | number;\n    lg?: string | number;\n    xl?: string | number;\n    xxl?: string | number;\n  };\n  \n  /**\n   * Layout items width (set to 'auto' to disable)\n   */",
      "tokens": 0,
      "firstFile": {
        "name": "src/components/ui/layout/ResponsiveLayout.tsx",
        "start": 138,
        "end": 149,
        "startLoc": {
          "line": 138,
          "column": 11,
          "position": 761
        },
        "endLoc": {
          "line": 149,
          "column": 6,
          "position": 853
        }
      },
      "secondFile": {
        "name": "src/components/ui/layout/ResponsiveLayout.tsx",
        "start": 89,
        "end": 100,
        "startLoc": {
          "line": 89,
          "column": 8,
          "position": 533
        },
        "endLoc": {
          "line": 100,
          "column": 6,
          "position": 625
        }
      }
    },
    {
      "format": "tsx",
      "lines": 12,
      "fragment": "?: string | number | {\n    xs?: string | number;\n    sm?: string | number;\n    md?: string | number;\n    lg?: string | number;\n    xl?: string | number;\n    xxl?: string | number;\n  };\n  \n  /**\n   * Whether to animate layout changes\n   */",
      "tokens": 0,
      "firstFile": {
        "name": "src/components/ui/layout/ResponsiveLayout.tsx",
        "start": 150,
        "end": 161,
        "startLoc": {
          "line": 150,
          "column": 10,
          "position": 857
        },
        "endLoc": {
          "line": 161,
          "column": 6,
          "position": 949
        }
      },
      "secondFile": {
        "name": "src/components/ui/layout/ResponsiveLayout.tsx",
        "start": 89,
        "end": 100,
        "startLoc": {
          "line": 89,
          "column": 8,
          "position": 533
        },
        "endLoc": {
          "line": 100,
          "column": 6,
          "position": 625
        }
      }
    },
    {
      "format": "tsx",
      "lines": 29,
      "fragment": "]);\n\n  // Handle container resizing\n  useEffect(() => {\n    if (!containerRef.current) {\n      return;\n    }\n\n    const resizeObserver = new ResizeObserver(entries => {\n      for (const entry of entries) {\n        const { width } = entry.contentRect;\n        setContainerSize(prev => ({ ...prev, width }));\n      }\n    });\n\n    resizeObserver.observe(containerRef.current);\n\n    // Initialize width\n    setContainerSize(prev => ({\n      ...prev,\n      width: containerRef.current?.clientWidth ?? 0,\n    }));\n\n    return () => {\n      resizeObserver.disconnect();\n    };\n  }, []);\n\n  // Update height when prop changes",
      "tokens": 0,
      "firstFile": {
        "name": "src/components/ui/event/VirtualizedEventLog.tsx",
        "start": 149,
        "end": 177,
        "startLoc": {
          "line": 149,
          "column": 15,
          "position": 1011
        },
        "endLoc": {
          "line": 177,
          "column": 35,
          "position": 1214
        }
      },
      "secondFile": {
        "name": "src/components/ui/resource/VirtualizedResourceDataset.tsx",
        "start": 202,
        "end": 154,
        "startLoc": {
          "line": 202,
          "column": 9,
          "position": 1246
        },
        "endLoc": {
          "line": 154,
          "column": 33,
          "position": 892
        }
      }
    },
    {
      "format": "tsx",
      "lines": 16,
      "fragment": "setContainerSize(prev => ({\n      ...prev,\n      width: containerRef.current?.clientWidth ?? 0,\n    }));\n\n    return () => {\n      resizeObserver.disconnect();\n    };\n  }, []);\n\n  // Update height when prop changes\n  useEffect(() => {\n    setContainerSize(prev => ({ ...prev, height }));\n  }, [height]);\n\n  // Auto-scroll to most recent event",
      "tokens": 0,
      "firstFile": {
        "name": "src/components/ui/event/VirtualizedEventLog.tsx",
        "start": 167,
        "end": 182,
        "startLoc": {
          "line": 167,
          "column": 5,
          "position": 1143
        },
        "endLoc": {
          "line": 182,
          "column": 36,
          "position": 1259
        }
      },
      "secondFile": {
        "name": "src/components/ui/resource/VirtualizedResourceDataset.tsx",
        "start": 220,
        "end": 235,
        "startLoc": {
          "line": 220,
          "column": 5,
          "position": 1378
        },
        "endLoc": {
          "line": 235,
          "column": 32,
          "position": 1494
        }
      }
    },
    {
      "format": "tsx",
      "lines": 25,
      "fragment": ",\n                    target: e.target.value,\n                  });\n                }}\n              >\n                <option value=\"\">Select Resource</option>\n                {[\n                  ResourceType.MINERALS,\n                  ResourceType.ENERGY,\n                  ResourceType.POPULATION,\n                  ResourceType.RESEARCH,\n                ].map(resource => (\n                  <option key={resource} value={resource}>\n                    {resource}\n                  </option>\n                ))}\n              </select>\n            </div>\n\n            <div className=\"form-group\">\n              <label>Amount</label>\n              <input\n                type=\"number\"\n                value={\n                  typeof action",
      "tokens": 0,
      "firstFile": {
        "name": "src/components/ui/automation/AutomationRuleEditor.tsx",
        "start": 773,
        "end": 797,
        "startLoc": {
          "line": 773,
          "column": 7,
          "position": 6483
        },
        "endLoc": {
          "line": 797,
          "column": 7,
          "position": 6643
        }
      },
      "secondFile": {
        "name": "src/components/ui/automation/AutomationRuleEditor.tsx",
        "start": 650,
        "end": 674,
        "startLoc": {
          "line": 650,
          "column": 10,
          "position": 5600
        },
        "endLoc": {
          "line": 674,
          "column": 10,
          "position": 5760
        }
      }
    },
    {
      "format": "tsx",
      "lines": 22,
      "fragment": ";\n  status: 'engaging' | 'patrolling' | 'retreating' | 'disabled';\n  health: number;\n  maxHealth: number;\n  shield: number;\n  maxShield: number;\n  weapons: WeaponMount[];\n  stats: FactionShipStats;\n  tactics: FactionBehaviorConfig | string;\n  position: { x: number; y: number };\n  rotation: number;\n  onEngage?: () => void;\n  onRetreat?: () => void;\n  onSpecialAbility?: () => void;\n  onFire?: (weaponId: string) => void;\n  children?: ReactNode;\n}\n\n// Helper function to create a FactionBehaviorConfig from string\nconst createFactionBehavior = (behavior: string): FactionBehaviorConfig => {\n  return {\n    formation: 'standard'",
      "tokens": 0,
      "firstFile": {
        "name": "src/components/ships/common/LostNovaShip.tsx",
        "start": 20,
        "end": 41,
        "startLoc": {
          "line": 20,
          "column": 18,
          "position": 159
        },
        "endLoc": {
          "line": 41,
          "column": 11,
          "position": 360
        }
      },
      "secondFile": {
        "name": "src/components/ships/common/SpaceRatShip.tsx",
        "start": 19,
        "end": 40,
        "startLoc": {
          "line": 19,
          "column": 19,
          "position": 146
        },
        "endLoc": {
          "line": 40,
          "column": 10,
          "position": 347
        }
      }
    },
    {
      "format": "javascript",
      "lines": 32,
      "fragment": "={`bg-${color}-900/20 border border-${color}-700/30 rounded-lg p-6 ${className}`}>\n      {/* Ship Header */}\n      <div className=\"mb-6 flex items-start justify-between\">\n        <div>\n          <h3 className=\"text-lg font-medium text-white\">{ship.name}</h3>\n          <div className=\"flex items-center text-sm text-gray-400\">\n            <span className=\"capitalize\">{ship.faction.replace(/([A-Z])/g, ' $1').trim()}</span>\n            <span className=\"mx-2\">•</span>\n            <span>{ship.class.replace(/-/g, ' ')}</span>\n          </div>\n        </div>\n        <div\n          className={`rounded-full px-3 py-1 text-sm ${\n            ship.status === 'engaging'\n              ? 'bg-red-900/50 text-red-400'\n              : ship.status === 'patrolling'\n                ? 'bg-green-900/50 text-green-400'\n                : ship.status === 'retreating'\n                  ? 'bg-yellow-900/50 text-yellow-400'\n                  : 'bg-gray-700 text-gray-400'\n          }`}\n        >\n          {ship.status.charAt(0).toUpperCase() + ship.status.slice(1)}\n        </div>\n      </div>\n\n      {/* Health & Shield Bars */}\n      <div className=\"mb-6 grid grid-cols-2 gap-4\">\n        <div>\n          <div className=\"mb-1 flex justify-between text-sm\">\n            <span className=\"text-gray-400\">Hull Integrity</span>\n            <span className={ship",
      "tokens": 0,
      "firstFile": {
        "name": "src/components/ships/common/FactionShipStats.tsx",
        "start": 42,
        "end": 73,
        "startLoc": {
          "line": 42,
          "column": 10,
          "position": 348
        },
        "endLoc": {
          "line": 73,
          "column": 5,
          "position": 642
        }
      },
      "secondFile": {
        "name": "src/components/ships/player/base/PlayerShipBase.tsx",
        "start": 30,
        "end": 63,
        "startLoc": {
          "line": 30,
          "column": 10,
          "position": 205
        },
        "endLoc": {
          "line": 63,
          "column": 21,
          "position": 491
        }
      }
    },
    {
      "format": "tsx",
      "lines": 8,
      "fragment": "return (\n    <div className={`bg-${color}-900/20 border border-${color}-700/30 rounded-lg p-6 ${className}`}>\n      {/* Ship Header */}\n      <div className=\"mb-6 flex items-start justify-between\">\n        <div>\n          <h3 className=\"text-lg font-medium text-white\">{ship.name}</h3>\n          <div className=\"flex items-center text-sm text-gray-400\">\n            <span className=\"capitalize\">{ship.faction",
      "tokens": 0,
      "firstFile": {
        "name": "src/components/ships/common/FactionShipStats.tsx",
        "start": 41,
        "end": 48,
        "startLoc": {
          "line": 41,
          "column": 3,
          "position": 339
        },
        "endLoc": {
          "line": 48,
          "column": 8,
          "position": 430
        }
      },
      "secondFile": {
        "name": "src/components/ships/player/variants/warships/PlayerWarShipCombat.tsx",
        "start": 63,
        "end": 36,
        "startLoc": {
          "line": 63,
          "column": 3,
          "position": 460
        },
        "endLoc": {
          "line": 36,
          "column": 6,
          "position": 287
        }
      }
    },
    {
      "format": "tsx",
      "lines": 24,
      "fragment": "}</span>\n          </div>\n        </div>\n        <div\n          className={`rounded-full px-3 py-1 text-sm ${\n            ship.status === 'engaging'\n              ? 'bg-red-900/50 text-red-400'\n              : ship.status === 'patrolling'\n                ? 'bg-green-900/50 text-green-400'\n                : ship.status === 'retreating'\n                  ? 'bg-yellow-900/50 text-yellow-400'\n                  : 'bg-gray-700 text-gray-400'\n          }`}\n        >\n          {ship.status.charAt(0).toUpperCase() + ship.status.slice(1)}\n        </div>\n      </div>\n\n      {/* Health & Shield Bars */}\n      <div className=\"mb-6 grid grid-cols-2 gap-4\">\n        <div>\n          <div className=\"mb-1 flex justify-between text-sm\">\n            <span className=\"text-gray-400\">Hull Integrity</span>\n            <span ",
      "tokens": 0,
      "firstFile": {
        "name": "src/components/ships/common/FactionShipStats.tsx",
        "start": 50,
        "end": 73,
        "startLoc": {
          "line": 50,
          "column": 2,
          "position": 479
        },
        "endLoc": {
          "line": 73,
          "column": 2,
          "position": 638
        }
      },
      "secondFile": {
        "name": "src/components/ships/player/base/PlayerShipBase.tsx",
        "start": 38,
        "end": 62,
        "startLoc": {
          "line": 38,
          "column": 6,
          "position": 328
        },
        "endLoc": {
          "line": 62,
          "column": 15,
          "position": 487
        }
      }
    },
    {
      "format": "tsx",
      "lines": 22,
      "fragment": ") * 100}%` }}\n            />\n          </div>\n        </div>\n\n        <div>\n          <div className=\"mb-1 flex justify-between text-sm\">\n            <span className=\"text-gray-400\">Shield Power</span>\n            <span className=\"text-gray-300\">\n              {Math.round((ship.shield / ship.maxShield) * 100)}%\n            </span>\n          </div>\n          <div className=\"h-2 overflow-hidden rounded-full bg-gray-700\">\n            <div\n              className=\"h-full rounded-full bg-blue-500 transition-all\"\n              style={{ width: `${(ship.shield / ship.maxShield) * 100}%` }}\n            />\n          </div>\n        </div>\n      </div>\n\n      {/* Ship Stats */",
      "tokens": 0,
      "firstFile": {
        "name": "src/components/ships/common/FactionShipStats.tsx",
        "start": 82,
        "end": 103,
        "startLoc": {
          "line": 82,
          "column": 10,
          "position": 761
        },
        "endLoc": {
          "line": 103,
          "column": 17,
          "position": 938
        }
      },
      "secondFile": {
        "name": "src/components/ships/player/variants/warships/WarShip.tsx",
        "start": 122,
        "end": 143,
        "startLoc": {
          "line": 122,
          "column": 8,
          "position": 1058
        },
        "endLoc": {
          "line": 143,
          "column": 21,
          "position": 1235
        }
      }
    },
    {
      "format": "tsx",
      "lines": 14,
      "fragment": "</span>\n        </button>\n      </div>\n\n      {/* Status Warnings */}\n      {ship.status === 'disabled' && (\n        <div className=\"mt-4 flex items-start space-x-2 rounded-lg border border-red-700/30 bg-red-900/20 p-3\">\n          <AlertTriangle className=\"mt-0.5 h-4 w-4 flex-shrink-0 text-red-500\" />\n          <span className=\"text-sm text-red-200\">Ship systems critically damaged</span>\n        </div>\n      )}\n    </div>\n  );\n}",
      "tokens": 0,
      "firstFile": {
        "name": "src/components/ships/common/FactionShipStats.tsx",
        "start": 186,
        "end": 199,
        "startLoc": {
          "line": 186,
          "column": 8,
          "position": 1672
        },
        "endLoc": {
          "line": 199,
          "column": 2,
          "position": 1768
        }
      },
      "secondFile": {
        "name": "src/components/ships/player/base/PlayerShipBase.tsx",
        "start": 181,
        "end": 194,
        "startLoc": {
          "line": 181,
          "column": 8,
          "position": 1505
        },
        "endLoc": {
          "line": 194,
          "column": 2,
          "position": 1601
        }
      }
    },
    {
      "format": "tsx",
      "lines": 16,
      "fragment": ";\n  position: { x: number; y: number };\n  rotation: number;\n  onEngage?: () => void;\n  onRetreat?: () => void;\n  onSpecialAbility?: () => void;\n  onFire?: (weaponId: string) => void;\n  children?: ReactNode;\n}\n\n/**\n * EquatorHorizonShip Component\n *\n * Base component for Equator Horizon faction ships.\n * Provides faction-specific styling and behavior.\n */",
      "tokens": 0,
      "firstFile": {
        "name": "src/components/ships/common/EquatorHorizonShip.tsx",
        "start": 26,
        "end": 41,
        "startLoc": {
          "line": 26,
          "column": 17,
          "position": 286
        },
        "endLoc": {
          "line": 41,
          "column": 4,
          "position": 382
        }
      },
      "secondFile": {
        "name": "src/components/ships/common/SpaceRatShip.tsx",
        "start": 27,
        "end": 37,
        "startLoc": {
          "line": 27,
          "column": 7,
          "position": 220
        },
        "endLoc": {
          "line": 37,
          "column": 65,
          "position": 316
        }
      }
    },
    {
      "format": "tsx",
      "lines": 95,
      "fragment": ") {\n  return (\n    <div className=\"rounded-lg bg-gray-800 p-6\">\n      <h3 className=\"mb-6 text-lg font-medium text-white\">Ship Statistics</h3>\n\n      {/* Weapons */}\n      <div className=\"mb-6\">\n        <div className=\"mb-4 flex items-center space-x-2\">\n          <Crosshair className=\"h-5 w-5 text-red-400\" />\n          <h4 className=\"text-sm font-medium text-gray-300\">Weapons</h4>\n        </div>\n        <div className=\"grid grid-cols-3 gap-4\">\n          <div>\n            <div className=\"mb-1 text-sm text-gray-400\">Damage</div>\n            <div className=\"text-lg font-medium text-white\">{stats.weapons.damage}</div>\n          </div>\n          <div>\n            <div className=\"mb-1 text-sm text-gray-400\">Range</div>\n            <div className=\"text-lg font-medium text-white\">{stats.weapons.range}ly</div>\n          </div>\n          <div>\n            <div className=\"mb-1 text-sm text-gray-400\">Accuracy</div>\n            <div className=\"text-lg font-medium text-white\">{stats.weapons.accuracy}%</div>\n          </div>\n        </div>\n      </div>\n\n      {/* Defense */}\n      <div className=\"mb-6\">\n        <div className=\"mb-4 flex items-center space-x-2\">\n          <Shield className=\"h-5 w-5 text-blue-400\" />\n          <h4 className=\"text-sm font-medium text-gray-300\">Defense</h4>\n        </div>\n        <div className=\"grid grid-cols-3 gap-4\">\n          <div>\n            <div className=\"mb-1 text-sm text-gray-400\">Hull</div>\n            <div className=\"text-lg font-medium text-white\">{stats.defense.hull}</div>\n          </div>\n          <div>\n            <div className=\"mb-1 text-sm text-gray-400\">Shield</div>\n            <div className=\"text-lg font-medium text-white\">{stats.defense.shield}</div>\n          </div>\n          <div>\n            <div className=\"mb-1 text-sm text-gray-400\">Armor</div>\n            <div className=\"text-lg font-medium text-white\">{stats.defense.armor}</div>\n          </div>\n        </div>\n      </div>\n\n      {/* Mobility */}\n      <div className=\"mb-6\">\n        <div className=\"mb-4 flex items-center space-x-2\">\n          <Activity className=\"h-5 w-5 text-green-400\" />\n          <h4 className=\"text-sm font-medium text-gray-300\">Mobility</h4>\n        </div>\n        <div className=\"grid grid-cols-3 gap-4\">\n          <div>\n            <div className=\"mb-1 text-sm text-gray-400\">Speed</div>\n            <div className=\"text-lg font-medium text-white\">{stats.mobility.speed}</div>\n          </div>\n          <div>\n            <div className=\"mb-1 text-sm text-gray-400\">Agility</div>\n            <div className=\"text-lg font-medium text-white\">{stats.mobility.agility}</div>\n          </div>\n          <div>\n            <div className=\"mb-1 text-sm text-gray-400\">Jump Range</div>\n            <div className=\"text-lg font-medium text-white\">{stats.mobility.jumpRange}ly</div>\n          </div>\n        </div>\n      </div>\n\n      {/* Systems */}\n      <div>\n        <div className=\"mb-4 flex items-center space-x-2\">\n          <Zap className=\"h-5 w-5 text-yellow-400\" />\n          <h4 className=\"text-sm font-medium text-gray-300\">Systems</h4>\n        </div>\n        <div className=\"grid grid-cols-3 gap-4\">\n          <div>\n            <div className=\"mb-1 text-sm text-gray-400\">Power</div>\n            <div className=\"text-lg font-medium text-white\">{stats.systems.power}</div>\n          </div>\n          <div>\n            <div className=\"mb-1 text-sm text-gray-400\">Radar</div>\n            <div className=\"text-lg font-medium text-white\">{stats.systems.radar}</div>\n          </div>\n          <div>\n            <div className=\"mb-1 text-sm text-gray-400\">Efficiency</div>\n            <div className=\"text-lg font-medium text-white\">{stats.systems.efficiency}%</div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}",
      "tokens": 0,
      "firstFile": {
        "name": "src/components/ships/common/CommonShipStats.tsx",
        "start": 8,
        "end": 102,
        "startLoc": {
          "line": 8,
          "column": 21,
          "position": 66
        },
        "endLoc": {
          "line": 102,
          "column": 2,
          "position": 988
        }
      },
      "secondFile": {
        "name": "src/components/ships/player/base/PlayerShipStats.tsx",
        "start": 8,
        "end": 102,
        "startLoc": {
          "line": 8,
          "column": 15,
          "position": 68
        },
        "endLoc": {
          "line": 102,
          "column": 2,
          "position": 990
        }
      }
    },
    {
      "format": "tsx",
      "lines": 10,
      "fragment": "} = useShipActions();\n  const { activeEffects, clearExpiredEffects } = useShipEffects();\n\n  // Clear expired effects periodically\n  useEffect(() => {\n    const interval = setInterval(clearExpiredEffects, 1000);\n    return () => clearInterval(interval);\n  }, [clearExpiredEffects]);\n\n  // Handle weapon firing",
      "tokens": 0,
      "firstFile": {
        "name": "src/components/ships/base/BaseShip.tsx",
        "start": 45,
        "end": 54,
        "startLoc": {
          "line": 45,
          "column": 2,
          "position": 381
        },
        "endLoc": {
          "line": 54,
          "column": 24,
          "position": 465
        }
      },
      "secondFile": {
        "name": "src/components/ships/common/FactionShipBase.tsx",
        "start": 64,
        "end": 73,
        "startLoc": {
          "line": 64,
          "column": 2,
          "position": 453
        },
        "endLoc": {
          "line": 73,
          "column": 50,
          "position": 537
        }
      }
    },
    {
      "format": "tsx",
      "lines": 12,
      "fragment": ").forEach(([k, v]) => {\n            if (\n              v === null ||\n              v === undefined ||\n              typeof v === 'string' ||\n              typeof v === 'number' ||\n              typeof v === 'boolean'\n            ) {\n              safeObj[k] = v;\n            }\n          });\n          result",
      "tokens": 0,
      "firstFile": {
        "name": "src/components/exploration/visualizations/AnalysisVisualization.tsx",
        "start": 388,
        "end": 399,
        "startLoc": {
          "line": 388,
          "column": 2,
          "position": 3830
        },
        "endLoc": {
          "line": 399,
          "column": 7,
          "position": 3926
        }
      },
      "secondFile": {
        "name": "src/components/exploration/visualizations/AnalysisVisualization.tsx",
        "start": 367,
        "end": 378,
        "startLoc": {
          "line": 367,
          "column": 8,
          "position": 3642
        },
        "endLoc": {
          "line": 378,
          "column": 7,
          "position": 3738
        }
      }
    },
    {
      "format": "tsx",
      "lines": 15,
      "fragment": "useEffect(() => {\n    const canvas = canvasRef.current;\n    if (!canvas) {\n      return;\n    }\n\n    const ctx = canvas.getContext('2d');\n    if (!ctx) {\n      return;\n    }\n\n    // Clear canvas\n    ctx.clearRect(0, 0, size, size);\n\n    const",
      "tokens": 0,
      "firstFile": {
        "name": "src/components/combat/radar/RadarSweepAnimation.tsx",
        "start": 85,
        "end": 99,
        "startLoc": {
          "line": 85,
          "column": 3,
          "position": 618
        },
        "endLoc": {
          "line": 99,
          "column": 6,
          "position": 713
        }
      },
      "secondFile": {
        "name": "src/components/combat/radar/RangeIndicators.tsx",
        "start": 51,
        "end": 65,
        "startLoc": {
          "line": 51,
          "column": 3,
          "position": 364
        },
        "endLoc": {
          "line": 65,
          "column": 35,
          "position": 459
        }
      }
    },
    {
      "format": "tsx",
      "lines": 15,
      "fragment": "useEffect(() => {\n    const canvas = canvasRef.current;\n    if (!canvas) {\n      return;\n    }\n\n    const ctx = canvas.getContext('2d');\n    if (!ctx) {\n      return;\n    }\n\n    // Clear canvas\n    ctx.clearRect(0, 0, size, size);\n\n    // Draw detected objects",
      "tokens": 0,
      "firstFile": {
        "name": "src/components/combat/radar/DetectionVisualization.tsx",
        "start": 46,
        "end": 60,
        "startLoc": {
          "line": 46,
          "column": 3,
          "position": 362
        },
        "endLoc": {
          "line": 60,
          "column": 25,
          "position": 457
        }
      },
      "secondFile": {
        "name": "src/components/combat/radar/RangeIndicators.tsx",
        "start": 51,
        "end": 65,
        "startLoc": {
          "line": 51,
          "column": 3,
          "position": 364
        },
        "endLoc": {
          "line": 65,
          "column": 35,
          "position": 459
        }
      }
    },
    {
      "format": "tsx",
      "lines": 8,
      "fragment": ":\n        for (let i = 0; i < shipCount; i++) {\n          if (i === 0) {\n            positions.push({ x: centerX, y: centerY - 20 });\n          } else {\n            const side = i % 2 === 0 ? 1 : -1;\n            const row = Math.floor((i + 1) / 2);\n            const",
      "tokens": 0,
      "firstFile": {
        "name": "src/components/combat/formations/FormationVisualizer.tsx",
        "start": 95,
        "end": 102,
        "startLoc": {
          "line": 95,
          "column": 8,
          "position": 1028
        },
        "endLoc": {
          "line": 102,
          "column": 6,
          "position": 1155
        }
      },
      "secondFile": {
        "name": "src/components/combat/formations/FormationVisualizer.tsx",
        "start": 69,
        "end": 76,
        "startLoc": {
          "line": 69,
          "column": 8,
          "position": 701
        },
        "endLoc": {
          "line": 76,
          "column": 10,
          "position": 828
        }
      }
    },
    {
      "format": "javascript",
      "lines": 15,
      "fragment": "}\n        >\n          <span>Growth Modifiers</span>\n          <span className=\"text-xs text-gray-400\">\n            {growthModifiers.filter(m => m.active).length} Active\n          </span>\n        </button>\n\n        <AnimatePresence>\n          {showModifiers && (\n            <motion.div\n              initial={{ height: 0, opacity: 0 }}\n              animate={{ height: 'auto', opacity: 1 }}\n              exit={{ height: 0, opacity: 0 }}\n              transition={{ duration: 0.3",
      "tokens": 0,
      "firstFile": {
        "name": "src/components/buildings/colony/PopulationGrowthModule.tsx",
        "start": 310,
        "end": 324,
        "startLoc": {
          "line": 310,
          "column": 2,
          "position": 2555
        },
        "endLoc": {
          "line": 324,
          "column": 4,
          "position": 2687
        }
      },
      "secondFile": {
        "name": "src/components/ui/resource/ResourceRatesDisplay.tsx",
        "start": 242,
        "end": 252,
        "startLoc": {
          "line": 242,
          "column": 3,
          "position": 1931
        },
        "endLoc": {
          "line": 252,
          "column": 4,
          "position": 2034
        }
      }
    },
    {
      "format": "tsx",
      "lines": 12,
      "fragment": ".filter(m => m.active);\n\n    if (activeModifiers.length === 0) {\n      return baseGrowthRate;\n    }\n\n    const totalEffect = activeModifiers.reduce((total, modifier) => {\n      return total * modifier.effect;\n    }, 1);\n\n    return baseGrowthRate * totalEffect;\n  };",
      "tokens": 0,
      "firstFile": {
        "name": "src/components/buildings/colony/GrowthRateModifiers.tsx",
        "start": 53,
        "end": 64,
        "startLoc": {
          "line": 53,
          "column": 10,
          "position": 371
        },
        "endLoc": {
          "line": 64,
          "column": 2,
          "position": 465
        }
      },
      "secondFile": {
        "name": "src/components/buildings/colony/PopulationGrowthModule.tsx",
        "start": 56,
        "end": 66,
        "startLoc": {
          "line": 56,
          "column": 16,
          "position": 506
        },
        "endLoc": {
          "line": 66,
          "column": 2,
          "position": 599
        }
      }
    },
    {
      "format": "tsx",
      "lines": 25,
      "fragment": "interface TradePartner {\n  id: string;\n  name: string;\n  distance: number; // Distance in light years or other unit\n  position: { x: number; y: number }; // Relative position for visualization\n}\n\ninterface TradeResource {\n  id: string;\n  name: string;\n  type: 'import' | 'export';\n  amount: number;\n  value: number;\n}\n\ninterface TradeRoute {\n  id: string;\n  partnerId: string;\n  status: 'active' | 'pending' | 'disrupted';\n  resources: TradeResource[];\n  efficiency: number; // 0-1 efficiency factor\n  lastTradeTime: number; // Timestamp of last trade\n}\n\ninterface PopulationEvent",
      "tokens": 0,
      "firstFile": {
        "name": "src/components/buildings/colony/ColonyManagementSystem.tsx",
        "start": 39,
        "end": 63,
        "startLoc": {
          "line": 39,
          "column": 1,
          "position": 319
        },
        "endLoc": {
          "line": 63,
          "column": 16,
          "position": 488
        }
      },
      "secondFile": {
        "name": "src/components/buildings/colony/TradeRouteVisualization.tsx",
        "start": 6,
        "end": 30,
        "startLoc": {
          "line": 6,
          "column": 1,
          "position": 68
        },
        "endLoc": {
          "line": 30,
          "column": 29,
          "position": 237
        }
      }
    },
    {
      "format": "tsx",
      "lines": 17,
      "fragment": "interface BuildingData {\n  id: string;\n  type:\n    | 'housing'\n    | 'industry'\n    | 'agriculture'\n    | ResourceType.ENERGY\n    | ResourceType.RESEARCH\n    | 'infrastructure';\n  name: string;\n  level: number;\n  position: { x: number; y: number };\n  size: { width: number; height: number };\n  status: 'operational' | 'constructing' | 'upgrading' | 'damaged' | 'inactive';\n}\n\ninterface ResourceData",
      "tokens": 0,
      "firstFile": {
        "name": "src/components/buildings/colony/ColonyManagementSystem.tsx",
        "start": 72,
        "end": 88,
        "startLoc": {
          "line": 72,
          "column": 1,
          "position": 548
        },
        "endLoc": {
          "line": 88,
          "column": 13,
          "position": 682
        }
      },
      "secondFile": {
        "name": "src/components/buildings/colony/ColonyMap.tsx",
        "start": 4,
        "end": 20,
        "startLoc": {
          "line": 4,
          "column": 1,
          "position": 45
        },
        "endLoc": {
          "line": 20,
          "column": 15,
          "position": 179
        }
      }
    },
    {
      "format": "tsx",
      "lines": 15,
      "fragment": "= useCallback(() => {\n    const activeModifiers = growthModifiers.filter(m => m.active);\n\n    if (activeModifiers.length === 0) {\n      return baseGrowthRate;\n    }\n\n    const totalEffect = activeModifiers.reduce((total, modifier) => {\n      return total * modifier.effect;\n    }, 1);\n\n    return baseGrowthRate * totalEffect;\n  }, [baseGrowthRate, growthModifiers]);\n\n  // Handle population change",
      "tokens": 0,
      "firstFile": {
        "name": "src/components/buildings/colony/ColonyManagementSystem.tsx",
        "start": 281,
        "end": 295,
        "startLoc": {
          "line": 281,
          "column": 2,
          "position": 2463
        },
        "endLoc": {
          "line": 295,
          "column": 28,
          "position": 2589
        }
      },
      "secondFile": {
        "name": "src/components/buildings/colony/PopulationGrowthModule.tsx",
        "start": 55,
        "end": 68,
        "startLoc": {
          "line": 55,
          "column": 2,
          "position": 487
        },
        "endLoc": {
          "line": 68,
          "column": 36,
          "position": 612
        }
      }
    },
    {
      "format": "javascript",
      "lines": 57,
      "fragment": "}>\n      {/* Core Colony Structure */}\n      <div className=\"absolute inset-0 rounded-lg border border-gray-700 bg-gray-900/90\">\n        <div className=\"p-6\">\n          <h2 className=\"mb-4 text-xl font-bold text-white\">Colony Control</h2>\n          <div className=\"mb-6 text-sm text-gray-400\">Level {level}</div>\n\n          {/* Module Attachment Points */}\n          <div className=\"grid grid-cols-2 gap-4\">\n            {COLONY_ATTACHMENT_POINTS.map(point => {\n              const attachedModule = modules.find(\n                (m: ModularBuilding['modules'][0]) =>\n                  m.position.x === point.position.x && m.position.y === point.position.y\n              );\n\n              const { handleContextMenu, ContextMenuComponent } = useContextMenu({\n                items: getAttachmentPointMenuItems(point),\n              });\n\n              return (\n                <div key={point.id}>\n                  <DropTarget\n                    accept={['module']}\n                    onDrop={item => handleModuleDrop(item, point)}\n                    className=\"rounded-lg bg-gray-800 p-4 transition-colors hover:bg-gray-800/80\"\n                  >\n                    <div\n                      className=\"flex items-center justify-between\"\n                      onContextMenu={handleContextMenu}\n                    >\n                      <div>\n                        <div className=\"text-sm font-medium text-gray-300\">\n                          {point.id.charAt(0).toUpperCase() + point.id.slice(1)} Attachment Point\n                        </div>\n                        {attachedModule ? (\n                          <Draggable\n                            item={{\n                              id: attachedModule.id,\n                              type: 'module',\n                              data: attachedModule,\n                            }}\n                            className=\"cursor-grab text-xs text-gray-500 hover:text-gray-400\"\n                          >\n                            {attachedModule.name}\n                          </Draggable>\n                        ) : (\n                          <div className=\"text-xs text-gray-500\">\n                            Empty (Accepts: {point.allowedTypes.join(', ')})\n                          </div>\n                        )}\n                        <div className=\"mt-1 text-xs text-gray-400\">\n                          Allowed: {point.allowedTypes.join(', ')}\n                        </div>\n                      </div>\n                      {attachedModule && (\n                        <button\n                          onClick={() => onModuleDetach?.(attachedModule.id)}",
      "tokens": 0,
      "firstFile": {
        "name": "src/components/buildings/colony/ColonyCore.tsx",
        "start": 111,
        "end": 167,
        "startLoc": {
          "line": 111,
          "column": 3,
          "position": 1054
        },
        "endLoc": {
          "line": 167,
          "column": 2,
          "position": 1534
        }
      },
      "secondFile": {
        "name": "src/components/buildings/mothership/MothershipCore.tsx",
        "start": 263,
        "end": 315,
        "startLoc": {
          "line": 263,
          "column": 8,
          "position": 2411
        },
        "endLoc": {
          "line": 315,
          "column": 2,
          "position": 2813
        }
      }
    },
    {
      "format": "tsx",
      "lines": 21,
      "fragment": "{\n    id: 'top',\n    position: { x: 0, y: -100 },\n    allowedTypes: ['radar', 'hangar', 'academy'],\n  },\n  {\n    id: 'right',\n    position: { x: 100, y: 0 },\n    allowedTypes: ['radar', 'hangar', 'academy'],\n  },\n  {\n    id: 'bottom',\n    position: { x: 0, y: 100 },\n    allowedTypes: ['radar', 'hangar', 'academy'],\n  },\n  {\n    id: 'left',\n    position: { x: -100, y: 0 },\n    allowedTypes: ['radar', 'hangar', 'academy'],\n  },\n  // Colony-specific module points",
      "tokens": 0,
      "firstFile": {
        "name": "src/components/buildings/colony/ColonyCore.tsx",
        "start": 13,
        "end": 33,
        "startLoc": {
          "line": 13,
          "column": 3,
          "position": 120
        },
        "endLoc": {
          "line": 33,
          "column": 33,
          "position": 318
        }
      },
      "secondFile": {
        "name": "src/components/buildings/mothership/MothershipCore.tsx",
        "start": 16,
        "end": 36,
        "startLoc": {
          "line": 16,
          "column": 3,
          "position": 163
        },
        "endLoc": {
          "line": 36,
          "column": 2,
          "position": 360
        }
      }
    },
    {
      "format": "tsx",
      "lines": 42,
      "fragment": "// Context menu for attachment points\n  const getAttachmentPointMenuItems = (point: ModuleAttachmentPoint): ContextMenuItem[] => {\n    const attachedModule = modules.find(\n      (m: ModularBuilding['modules'][0]) =>\n        m.position.x === point.position.x && m.position.y === point.position.y\n    );\n\n    if (attachedModule) {\n      return [\n        {\n          id: 'detach',\n          label: 'Detach Module',\n          icon: <X className=\"h-4 w-4\" />,\n          action: () => onModuleDetach?.(attachedModule.id),\n        },\n      ];\n    }\n\n    return point.allowedTypes.map(type => {\n      const config = defaultModuleConfigs[type];\n      const Icon = MODULE_ICONS[type as keyof typeof MODULE_ICONS];\n      return {\n        id: type,\n        label: config.name,\n        icon: Icon ? <Icon className=\"h-4 w-4\" /> : undefined,\n        action: () => onModuleAttach?.(type, point.id),\n      };\n    });\n  };\n\n  const handleModuleDrop = (item: DragItem, point: ModuleAttachmentPoint) => {\n    if (\n      item?.type === 'module' &&\n      point.allowedTypes.includes(item?.data?.type as ModuleType) &&\n      typeof item?.data?.type === 'string'\n    ) {\n      const moduleType = item?.data?.type as ModuleType;\n      onModuleAttach?.(moduleType, point.id);\n    }\n  };\n\n  return",
      "tokens": 0,
      "firstFile": {
        "name": "src/components/buildings/colony/ColonyCore.tsx",
        "start": 69,
        "end": 110,
        "startLoc": {
          "line": 69,
          "column": 3,
          "position": 613
        },
        "endLoc": {
          "line": 110,
          "column": 7,
          "position": 1036
        }
      },
      "secondFile": {
        "name": "src/components/buildings/mothership/MothershipCore.tsx",
        "start": 153,
        "end": 194,
        "startLoc": {
          "line": 153,
          "column": 3,
          "position": 1311
        },
        "endLoc": {
          "line": 194,
          "column": 27,
          "position": 1734
        }
      }
    },
    {
      "format": "tsx",
      "lines": 42,
      "fragment": ".map(point => {\n              const attachedModule = modules.find(\n                (m: ModularBuilding['modules'][0]) =>\n                  m.position.x === point.position.x && m.position.y === point.position.y\n              );\n\n              const { handleContextMenu, ContextMenuComponent } = useContextMenu({\n                items: getAttachmentPointMenuItems(point),\n              });\n\n              return (\n                <div key={point.id}>\n                  <DropTarget\n                    accept={['module']}\n                    onDrop={item => handleModuleDrop(item, point)}\n                    className=\"rounded-lg bg-gray-800 p-4 transition-colors hover:bg-gray-800/80\"\n                  >\n                    <div\n                      className=\"flex items-center justify-between\"\n                      onContextMenu={handleContextMenu}\n                    >\n                      <div>\n                        <div className=\"text-sm font-medium text-gray-300\">\n                          {point.id.charAt(0).toUpperCase() + point.id.slice(1)} Attachment Point\n                        </div>\n                        {attachedModule ? (\n                          <Draggable\n                            item={{\n                              id: attachedModule.id,\n                              type: 'module',\n                              data: attachedModule,\n                            }}\n                            className=\"cursor-grab text-xs text-gray-500 hover:text-gray-400\"\n                          >\n                            {attachedModule.name}\n                          </Draggable>\n                        ) : (\n                          <div className=\"text-xs text-gray-500\">\n                            Empty (Accepts: {point.allowedTypes.join(', ')})\n                          </div>\n                        )}\n                        <",
      "tokens": 0,
      "firstFile": {
        "name": "src/components/buildings/colony/ColonyCore.tsx",
        "start": 120,
        "end": 161,
        "startLoc": {
          "line": 120,
          "column": 25,
          "position": 1140
        },
        "endLoc": {
          "line": 161,
          "column": 2,
          "position": 1472
        }
      },
      "secondFile": {
        "name": "src/components/buildings/mothership/MothershipCore.tsx",
        "start": 271,
        "end": 312,
        "startLoc": {
          "line": 271,
          "column": 29,
          "position": 2450
        },
        "endLoc": {
          "line": 312,
          "column": 3,
          "position": 2782
        }
      }
    },
    {
      "format": "tsx",
      "lines": 13,
      "fragment": "const event: StandardizedEvent = {\n        type: EventType.MODULE_UPDATED,\n        moduleId: colonyId,\n        moduleType: ResourceType.POPULATION,\n        timestamp: Date.now(),\n        data: {\n          stats: {\n            [ResourceType.POPULATION]: newPopulation,\n          },\n        },\n      };\n      moduleEventBus.emit(event);\n    }",
      "tokens": 0,
      "firstFile": {
        "name": "src/components/buildings/colony/AutomatedPopulationManager.tsx",
        "start": 94,
        "end": 106,
        "startLoc": {
          "line": 94,
          "column": 7,
          "position": 727
        },
        "endLoc": {
          "line": 106,
          "column": 2,
          "position": 819
        }
      },
      "secondFile": {
        "name": "src/components/buildings/colony/PopulationGrowthModule.tsx",
        "start": 108,
        "end": 121,
        "startLoc": {
          "line": 108,
          "column": 5,
          "position": 925
        },
        "endLoc": {
          "line": 121,
          "column": 11,
          "position": 1018
        }
      }
    },
    {
      "format": "tsx",
      "lines": 24,
      "fragment": "(\n    data: ChartData,\n    options: ChartOptions,\n    chartArea: ChartArea,\n    chartGroup: SVGGElement\n  ): void {\n    const axes = options?.axes;\n    if (!axes?.x || !axes?.y) {\n      return;\n    }\n\n    const scales = this.calculateScales(data, chartArea, axes.x, axes.y);\n    if (!scales) {\n      return;\n    }\n\n    const themeColors = options?.theme === 'dark' ? this.theme.dark : this.theme.light;\n\n    // Draw each dataset\n    data?.datasets.forEach((dataset, datasetIndex) => {\n      const datasetGroup = document.createElementNS('http://www.w3.org/2000/svg', 'g');\n      datasetGroup.setAttribute('class', `dataset-${datasetIndex}`);\n\n      // Add the dataset group to the chart group",
      "tokens": 0,
      "firstFile": {
        "name": "src/visualization/renderers/SVGRenderer.tsx",
        "start": 296,
        "end": 319,
        "startLoc": {
          "line": 296,
          "column": 19,
          "position": 2695
        },
        "endLoc": {
          "line": 319,
          "column": 44,
          "position": 2912
        }
      },
      "secondFile": {
        "name": "src/visualization/renderers/SVGRenderer.tsx",
        "start": 222,
        "end": 244,
        "startLoc": {
          "line": 222,
          "column": 16,
          "position": 1956
        },
        "endLoc": {
          "line": 244,
          "column": 13,
          "position": 2172
        }
      }
    },
    {
      "format": "tsx",
      "lines": 19,
      "fragment": "(\n    data: ChartData,\n    options: ChartOptions,\n    chartArea: ChartArea,\n    chartGroup: SVGGElement\n  ): void {\n    const axes = options?.axes;\n    if (!axes?.x || !axes?.y) {\n      return;\n    }\n\n    const scales = this.calculateScales(data, chartArea, axes.x, axes.y);\n    if (!scales) {\n      return;\n    }\n\n    const themeColors = options?.theme === 'dark' ? this.theme.dark : this.theme.light;\n\n    // Create a group for axes",
      "tokens": 0,
      "firstFile": {
        "name": "src/visualization/renderers/SVGRenderer.tsx",
        "start": 361,
        "end": 379,
        "startLoc": {
          "line": 361,
          "column": 11,
          "position": 3323
        },
        "endLoc": {
          "line": 379,
          "column": 27,
          "position": 3483
        }
      },
      "secondFile": {
        "name": "src/visualization/renderers/SVGRenderer.tsx",
        "start": 222,
        "end": 240,
        "startLoc": {
          "line": 222,
          "column": 16,
          "position": 1956
        },
        "endLoc": {
          "line": 240,
          "column": 21,
          "position": 2116
        }
      }
    },
    {
      "format": "tsx",
      "lines": 6,
      "fragment": ".tickCount || 5;\n      const xStep = (scales.x.max - scales.x.min) / (xTickCount - 1);\n\n      for (let i = 0; i < xTickCount; i++) {\n        const value = scales.x.min + i * xStep;\n        const",
      "tokens": 0,
      "firstFile": {
        "name": "src/visualization/renderers/SVGRenderer.tsx",
        "start": 534,
        "end": 539,
        "startLoc": {
          "line": 534,
          "column": 6,
          "position": 5317
        },
        "endLoc": {
          "line": 539,
          "column": 6,
          "position": 5409
        }
      },
      "secondFile": {
        "name": "src/visualization/renderers/SVGRenderer.tsx",
        "start": 385,
        "end": 390,
        "startLoc": {
          "line": 385,
          "column": 2,
          "position": 3538
        },
        "endLoc": {
          "line": 390,
          "column": 3,
          "position": 3630
        }
      }
    },
    {
      "format": "tsx",
      "lines": 6,
      "fragment": ".tickCount || 5;\n      const yStep = (scales.y.max - scales.y.min) / (yTickCount - 1);\n\n      for (let i = 0; i < yTickCount; i++) {\n        const value = scales.y.min + i * yStep;\n        const",
      "tokens": 0,
      "firstFile": {
        "name": "src/visualization/renderers/SVGRenderer.tsx",
        "start": 555,
        "end": 560,
        "startLoc": {
          "line": 555,
          "column": 6,
          "position": 5591
        },
        "endLoc": {
          "line": 560,
          "column": 6,
          "position": 5683
        }
      },
      "secondFile": {
        "name": "src/visualization/renderers/SVGRenderer.tsx",
        "start": 429,
        "end": 434,
        "startLoc": {
          "line": 429,
          "column": 2,
          "position": 4055
        },
        "endLoc": {
          "line": 434,
          "column": 3,
          "position": 4147
        }
      }
    },
    {
      "format": "typescript",
      "lines": 8,
      "fragment": "): T {\n  if (!Array.isArray(state[key])) {\n    throw new Error(`Property ${String(key)} is not an array`);\n  }\n  \n  return {\n    ...state,\n    [key]: (state[key] as unknown[]).map",
      "tokens": 0,
      "firstFile": {
        "name": "src/utils/state/stateMigration.ts",
        "start": 500,
        "end": 507,
        "startLoc": {
          "line": 500,
          "column": 1,
          "position": 3399
        },
        "endLoc": {
          "line": 507,
          "column": 4,
          "position": 3476
        }
      },
      "secondFile": {
        "name": "src/utils/state/stateMigration.ts",
        "start": 482,
        "end": 489,
        "startLoc": {
          "line": 482,
          "column": 1,
          "position": 3232
        },
        "endLoc": {
          "line": 489,
          "column": 7,
          "position": 3309
        }
      }
    },
    {
      "format": "typescript",
      "lines": 20,
      "fragment": ": string,\n  fn: () => T,\n  config: HookPerformanceConfig\n): T {\n  if (!config.enabled) {\n    return fn();\n  }\n\n  // Initialize performance data for this hook if it doesn't exist\n  if (!hooksPerformanceData[config.hookName]) {\n    hooksPerformanceData[config.hookName] = {\n      hookName: config.hookName,\n      selectorTimes: {},\n      computationTimes: {},\n      renderCount: 0,\n      lastRenderTime: Date.now(),\n    };\n  }\n\n  // Initialize computation times for this computation if it doesn't exist",
      "tokens": 0,
      "firstFile": {
        "name": "src/utils/performance/hookPerformanceMonitor.ts",
        "start": 155,
        "end": 174,
        "startLoc": {
          "line": 155,
          "column": 16,
          "position": 691
        },
        "endLoc": {
          "line": 174,
          "column": 73,
          "position": 827
        }
      },
      "secondFile": {
        "name": "src/utils/performance/hookPerformanceMonitor.ts",
        "start": 95,
        "end": 114,
        "startLoc": {
          "line": 95,
          "column": 13,
          "position": 257
        },
        "endLoc": {
          "line": 114,
          "column": 67,
          "position": 393
        }
      }
    },
    {
      "format": "typescript",
      "lines": 15,
      "fragment": ";\n  }\n\n  // Initialize performance data for this hook if it doesn't exist\n  if (!hooksPerformanceData[config.hookName]) {\n    hooksPerformanceData[config.hookName] = {\n      hookName: config.hookName,\n      selectorTimes: {},\n      computationTimes: {},\n      renderCount: 0,\n      lastRenderTime: Date.now(),\n    };\n  }\n\n  // Increment render count",
      "tokens": 0,
      "firstFile": {
        "name": "src/utils/performance/hookPerformanceMonitor.ts",
        "start": 213,
        "end": 227,
        "startLoc": {
          "line": 213,
          "column": 7,
          "position": 1144
        },
        "endLoc": {
          "line": 227,
          "column": 26,
          "position": 1232
        }
      },
      "secondFile": {
        "name": "src/utils/performance/hookPerformanceMonitor.ts",
        "start": 100,
        "end": 114,
        "startLoc": {
          "line": 100,
          "column": 2,
          "position": 305
        },
        "endLoc": {
          "line": 114,
          "column": 67,
          "position": 393
        }
      }
    },
    {
      "format": "typescript",
      "lines": 10,
      "fragment": ") {\n        const x = node.x ?? 0;\n        const y = node.y ?? 0;\n        const transform = `translate(${x}, ${y})`;\n        // Use the transform string to force evaluation\n        benchmarkTransformResults.push(transform.length);\n      }\n    },\n  });\n  results.push(directLarge",
      "tokens": 0,
      "firstFile": {
        "name": "src/utils/performance/D3AccessorBenchmark.ts",
        "start": 310,
        "end": 319,
        "startLoc": {
          "line": 310,
          "column": 11,
          "position": 2071
        },
        "endLoc": {
          "line": 319,
          "column": 12,
          "position": 2158
        }
      },
      "secondFile": {
        "name": "src/utils/performance/D3AccessorBenchmark.ts",
        "start": 270,
        "end": 279,
        "startLoc": {
          "line": 270,
          "column": 9,
          "position": 1741
        },
        "endLoc": {
          "line": 279,
          "column": 12,
          "position": 1828
        }
      }
    },
    {
      "format": "typescript",
      "lines": 10,
      "fragment": ") {\n        const x = d3Accessors.getX(node);\n        const y = d3Accessors.getY(node);\n        const transform = `translate(${x}, ${y})`;\n        // Use the transform string to force evaluation\n        benchmarkTransformResults.push(transform.length);\n      }\n    },\n  });\n  results.push(safeLarge",
      "tokens": 0,
      "firstFile": {
        "name": "src/utils/performance/D3AccessorBenchmark.ts",
        "start": 327,
        "end": 336,
        "startLoc": {
          "line": 327,
          "column": 11,
          "position": 2220
        },
        "endLoc": {
          "line": 336,
          "column": 10,
          "position": 2303
        }
      },
      "secondFile": {
        "name": "src/utils/performance/D3AccessorBenchmark.ts",
        "start": 287,
        "end": 296,
        "startLoc": {
          "line": 287,
          "column": 9,
          "position": 1890
        },
        "endLoc": {
          "line": 296,
          "column": 10,
          "position": 1973
        }
      }
    },
    {
      "format": "typescript",
      "lines": 8,
      "fragment": "if (d.x! < 0) d.x = 0;\n        if (d.x! > 500) d.x = 500;\n        if (d.y! < 0) d.y = 0;\n        if (d.y! > 500) d.y = 500;\n      }\n    },\n  });\n  results.push(safeSim",
      "tokens": 0,
      "firstFile": {
        "name": "src/utils/performance/D3AccessorBenchmark.ts",
        "start": 393,
        "end": 400,
        "startLoc": {
          "line": 393,
          "column": 9,
          "position": 2883
        },
        "endLoc": {
          "line": 400,
          "column": 8,
          "position": 2991
        }
      },
      "secondFile": {
        "name": "src/utils/performance/D3AccessorBenchmark.ts",
        "start": 364,
        "end": 371,
        "startLoc": {
          "line": 364,
          "column": 9,
          "position": 2568
        },
        "endLoc": {
          "line": 371,
          "column": 10,
          "position": 2676
        }
      }
    },
    {
      "format": "typescript",
      "lines": 12,
      "fragment": "(\n  event: ModuleEvent\n): event is ModuleEvent & { data: { resourceType: ResourceType; amount: number } } {\n  return (\n    event?.data !== undefined &&\n    typeof event?.data === 'object' &&\n    event?.data !== null &&\n    'resourceType' in event?.data &&\n    'amount' in event?.data &&\n    typeof event?.data?.amount === 'number'\n  );\n}",
      "tokens": 0,
      "firstFile": {
        "name": "src/utils/events/eventTypeGuards.ts",
        "start": 39,
        "end": 50,
        "startLoc": {
          "line": 39,
          "column": 27,
          "position": 317
        },
        "endLoc": {
          "line": 50,
          "column": 2,
          "position": 446
        }
      },
      "secondFile": {
        "name": "src/utils/events/eventTypeGuards.ts",
        "start": 23,
        "end": 34,
        "startLoc": {
          "line": 23,
          "column": 26,
          "position": 178
        },
        "endLoc": {
          "line": 34,
          "column": 2,
          "position": 307
        }
      }
    },
    {
      "format": "typescript",
      "lines": 17,
      "fragment": ";\n        metrics.recentEventTimestamps.push(now);\n\n        // Keep only the last 1000 timestamps\n        if (metrics.recentEventTimestamps.length > 1000) {\n          metrics.recentEventTimestamps.shift();\n        }\n\n        // Calculate events per second\n        const oneSecondAgo = now - 1000;\n        const recentEvents = metrics.recentEventTimestamps.filter(t => t >= oneSecondAgo);\n        metrics.eventsPerSecond = recentEvents.length;\n      }\n      return event;\n    }),\n\n    // Apply debouncing",
      "tokens": 0,
      "firstFile": {
        "name": "src/utils/events/EventThrottling.ts",
        "start": 243,
        "end": 259,
        "startLoc": {
          "line": 243,
          "column": 3,
          "position": 1213
        },
        "endLoc": {
          "line": 259,
          "column": 20,
          "position": 1331
        }
      },
      "secondFile": {
        "name": "src/utils/events/EventThrottling.ts",
        "start": 150,
        "end": 166,
        "startLoc": {
          "line": 150,
          "column": 2,
          "position": 568
        },
        "endLoc": {
          "line": 166,
          "column": 20,
          "position": 686
        }
      }
    },
    {
      "format": "typescript",
      "lines": 34,
      "fragment": "map(event => {\n      if (config.trackMetrics) {\n        const now = Date.now();\n        metrics.eventsEmitted++;\n        metrics.eventsDropped = metrics.totalEventsReceived - metrics.eventsEmitted;\n        metrics.dropRatePercentage =\n          metrics.totalEventsReceived > 0\n            ? (metrics.eventsDropped / metrics.totalEventsReceived) * 100\n            : 0;\n\n        // Calculate average time between emitted events\n        if (lastEmitTime > 0) {\n          const timeSinceLastEmit = now - lastEmitTime;\n          // Moving average (weight: 0.2 for new value, 0.8 for existing average)\n          metrics.avgTimeBetweenEmittedEventsMs =\n            metrics.avgTimeBetweenEmittedEventsMs * 0.8 + timeSinceLastEmit * 0.2;\n        }\n\n        // Estimate render time saved (assuming 10ms per render)\n        metrics.estimatedRenderTimeSavedMs = metrics.eventsDropped * 10;\n\n        lastEmitTime = now;\n\n        // Emit updated metrics\n        if (metricsSubject) {\n          metricsSubject.next({ ...metrics });\n        }\n      }\n      return event;\n    })\n  );\n\n  return {\n    stream: debounced$",
      "tokens": 0,
      "firstFile": {
        "name": "src/utils/events/EventThrottling.ts",
        "start": 263,
        "end": 296,
        "startLoc": {
          "line": 263,
          "column": 5,
          "position": 1347
        },
        "endLoc": {
          "line": 296,
          "column": 11,
          "position": 1594
        }
      },
      "secondFile": {
        "name": "src/utils/events/EventThrottling.ts",
        "start": 173,
        "end": 206,
        "startLoc": {
          "line": 173,
          "column": 5,
          "position": 732
        },
        "endLoc": {
          "line": 206,
          "column": 11,
          "position": 979
        }
      }
    },
    {
      "format": "typescript",
      "lines": 24,
      "fragment": "= {\n      totalEventsReceived: 0,\n      eventsByPriority: {\n        [EventPriority.CRITICAL]: 0,\n        [EventPriority.HIGH]: 0,\n        [EventPriority.NORMAL]: 0,\n        [EventPriority.LOW]: 0,\n        [EventPriority.BACKGROUND]: 0,\n      },\n      eventsCoalesced: 0,\n      avgProcessingTimeMs: 0,\n      maxProcessingTimeMs: 0,\n      eventsPerSecond: 0,\n      isHighLoad: false,\n      queueDepthByPriority: {\n        [EventPriority.CRITICAL]: 0,\n        [EventPriority.HIGH]: 0,\n        [EventPriority.NORMAL]: 0,\n        [EventPriority.LOW]: 0,\n        [EventPriority.BACKGROUND]: 0,\n      },\n    };\n\n    this",
      "tokens": 0,
      "firstFile": {
        "name": "src/utils/events/EventPrioritizer.ts",
        "start": 541,
        "end": 564,
        "startLoc": {
          "line": 541,
          "column": 2,
          "position": 3201
        },
        "endLoc": {
          "line": 564,
          "column": 5,
          "position": 3383
        }
      },
      "secondFile": {
        "name": "src/utils/events/EventPrioritizer.ts",
        "start": 197,
        "end": 222,
        "startLoc": {
          "line": 197,
          "column": 2,
          "position": 881
        },
        "endLoc": {
          "line": 222,
          "column": 6,
          "position": 1063
        }
      }
    },
    {
      "format": "typescript",
      "lines": 6,
      "fragment": "const queueEntries = Array.from(this.queues.entries());\n    for (const [_priority, queue] of queueEntries) {\n      while (queue.length > 0) {\n        const event = queue.shift();\n        if (event) {\n          this",
      "tokens": 0,
      "firstFile": {
        "name": "src/utils/events/EventFiltering.ts",
        "start": 149,
        "end": 154,
        "startLoc": {
          "line": 149,
          "column": 5,
          "position": 1090
        },
        "endLoc": {
          "line": 154,
          "column": 5,
          "position": 1169
        }
      },
      "secondFile": {
        "name": "src/utils/events/EventFiltering.ts",
        "start": 86,
        "end": 91,
        "startLoc": {
          "line": 86,
          "column": 5,
          "position": 657
        },
        "endLoc": {
          "line": 91,
          "column": 4,
          "position": 736
        }
      }
    },
    {
      "format": "typescript",
      "lines": 12,
      "fragment": ".filter(event => {\n        if (criteria.startTime !== undefined && event?.timestamp < criteria.startTime) {\n          return false;\n        }\n        if (criteria.endTime !== undefined && event?.timestamp > criteria.endTime) {\n          return false;\n        }\n        return true;\n      });\n    }\n\n    // Apply custom filter if provided",
      "tokens": 0,
      "firstFile": {
        "name": "src/utils/events/EventFilter.ts",
        "start": 230,
        "end": 241,
        "startLoc": {
          "line": 230,
          "column": 19,
          "position": 1416
        },
        "endLoc": {
          "line": 241,
          "column": 35,
          "position": 1515
        }
      },
      "secondFile": {
        "name": "src/utils/events/EventFilter.ts",
        "start": 173,
        "end": 184,
        "startLoc": {
          "line": 173,
          "column": 14,
          "position": 1026
        },
        "endLoc": {
          "line": 184,
          "column": 23,
          "position": 1125
        }
      }
    },
    {
      "format": "typescript",
      "lines": 14,
      "fragment": "(): () => void {\n  // Subscribe to all module events and forward them to the subject\n  const unsubscribe = moduleEventBus.subscribe('MODULE_CREATED' as ModuleEventType, event => {\n    moduleEventSubject.next(event);\n  });\n\n  // Return a cleanup function\n  return () => {\n    if (typeof unsubscribe === 'function') {\n      unsubscribe();\n    }\n    moduleEventSubject.complete();\n\n    // Complete all batch subjects",
      "tokens": 0,
      "firstFile": {
        "name": "src/utils/events/EventBatcher.ts",
        "start": 93,
        "end": 106,
        "startLoc": {
          "line": 93,
          "column": 23,
          "position": 333
        },
        "endLoc": {
          "line": 106,
          "column": 31,
          "position": 435
        }
      },
      "secondFile": {
        "name": "src/utils/events/rxjsIntegration.ts",
        "start": 19,
        "end": 31,
        "startLoc": {
          "line": 19,
          "column": 26,
          "position": 103
        },
        "endLoc": {
          "line": 31,
          "column": 2,
          "position": 204
        }
      }
    },
    {
      "format": "typescript",
      "lines": 6,
      "fragment": "value.includes(',')) {\n    const [minStr, maxStr] = value.split(',');\n    const min = parseFloat(minStr.trim());\n    const max = parseFloat(maxStr.trim());\n    if (!isNaN(min) && !isNaN(max)) {\n      return [min, max];",
      "tokens": 0,
      "firstFile": {
        "name": "src/utils/dataTransforms/chartTransforms.ts",
        "start": 689,
        "end": 694,
        "startLoc": {
          "line": 689,
          "column": 2,
          "position": 5432
        },
        "endLoc": {
          "line": 694,
          "column": 2,
          "position": 5526
        }
      },
      "secondFile": {
        "name": "src/utils/dataTransforms/filterTransforms.ts",
        "start": 254,
        "end": 259,
        "startLoc": {
          "line": 254,
          "column": 2,
          "position": 1615
        },
        "endLoc": {
          "line": 259,
          "column": 3,
          "position": 1710
        }
      }
    },
    {
      "format": "typescript",
      "lines": 15,
      "fragment": "switch (operator) {\n        case 'equals':\n          return fieldValue === value;\n\n        case 'notEquals':\n          return fieldValue !== value;\n\n        case 'greaterThan':\n          return isNumber(fieldValue) && isNumber(value) && fieldValue > value;\n\n        case 'lessThan':\n          return isNumber(fieldValue) && isNumber(value) && fieldValue < value;\n\n        case 'contains':\n          return",
      "tokens": 0,
      "firstFile": {
        "name": "src/utils/dataTransforms/chartTransforms.ts",
        "start": 750,
        "end": 764,
        "startLoc": {
          "line": 750,
          "column": 7,
          "position": 5948
        },
        "endLoc": {
          "line": 764,
          "column": 7,
          "position": 6059
        }
      },
      "secondFile": {
        "name": "src/utils/dataTransforms/filterTransforms.ts",
        "start": 377,
        "end": 391,
        "startLoc": {
          "line": 377,
          "column": 3,
          "position": 2431
        },
        "endLoc": {
          "line": 391,
          "column": 39,
          "position": 2542
        }
      }
    },
    {
      "format": "typescript",
      "lines": 11,
      "fragment": "return (\n            isNumber(fieldValue) &&\n            Array.isArray(value) &&\n            value.length === 2 &&\n            isNumber(value[0]) &&\n            isNumber(value[1]) &&\n            fieldValue >= value[0] &&\n            fieldValue <= value[1]\n          );\n\n        default",
      "tokens": 0,
      "firstFile": {
        "name": "src/utils/dataTransforms/chartTransforms.ts",
        "start": 778,
        "end": 788,
        "startLoc": {
          "line": 778,
          "column": 11,
          "position": 6156
        },
        "endLoc": {
          "line": 788,
          "column": 8,
          "position": 6239
        }
      },
      "secondFile": {
        "name": "src/utils/dataTransforms/filterTransforms.ts",
        "start": 408,
        "end": 418,
        "startLoc": {
          "line": 408,
          "column": 7,
          "position": 2648
        },
        "endLoc": {
          "line": 418,
          "column": 5,
          "position": 2731
        }
      }
    },
    {
      "format": "javascript",
      "lines": 188,
      "fragment": "={{ display: matches ? 'block' : 'none' }}>\n      {children}\n    </div>\n  );\n};\n\n/**\n * Component that shows content only on desktop devices\n */\nexport const Desktop: React.FC<ResponsiveProps> = ({\n  children,\n  removeFromDOM = true,\n}) => {\n  const matches = useMediaQuery(mediaQueries.desktop);\n  \n  if (!matches && removeFromDOM) {\n    return null;\n  }\n  \n  return (\n    <div style={{ display: matches ? 'block' : 'none' }}>\n      {children}\n    </div>\n  );\n};\n\n/**\n * Component that shows content on devices at least at the specified breakpoint\n */\nexport const ScreenFrom: React.FC<BreakpointProps> = ({\n  children,\n  breakpoint,\n  removeFromDOM = true,\n}) => {\n  const { isAtLeast } = useBreakpoint();\n  const matches = isAtLeast(breakpoint);\n  \n  if (!matches && removeFromDOM) {\n    return null;\n  }\n  \n  return (\n    <div style={{ display: matches ? 'block' : 'none' }}>\n      {children}\n    </div>\n  );\n};\n\n/**\n * Component that shows content on devices at most at the specified breakpoint\n */\nexport const ScreenTo: React.FC<BreakpointProps> = ({\n  children,\n  breakpoint,\n  removeFromDOM = true,\n}) => {\n  const { isAtMost } = useBreakpoint();\n  const matches = isAtMost(breakpoint);\n  \n  if (!matches && removeFromDOM) {\n    return null;\n  }\n  \n  return (\n    <div style={{ display: matches ? 'block' : 'none' }}>\n      {children}\n    </div>\n  );\n};\n\n/**\n * Component that shows content only on devices at exactly the specified breakpoint\n */\nexport const ScreenOnly: React.FC<BreakpointProps> = ({\n  children,\n  breakpoint,\n  removeFromDOM = true,\n}) => {\n  const { is } = useBreakpoint();\n  const matches = is(breakpoint);\n  \n  if (!matches && removeFromDOM) {\n    return null;\n  }\n  \n  return (\n    <div style={{ display: matches ? 'block' : 'none' }}>\n      {children}\n    </div>\n  );\n};\n\n/**\n * Component that shows content based on a custom media query\n */\nexport const MediaQuery: React.FC<ResponsiveProps & { query: string }> = ({\n  children,\n  query,\n  removeFromDOM = true,\n}) => {\n  const matches = useMediaQuery(query);\n  \n  if (!matches && removeFromDOM) {\n    return null;\n  }\n  \n  return (\n    <div style={{ display: matches ? 'block' : 'none' }}>\n      {children}\n    </div>\n  );\n};\n\n/**\n * Component that shows content only when a device has a hover capability\n */\nexport const WithHover: React.FC<ResponsiveProps> = ({\n  children,\n  removeFromDOM = true,\n}) => {\n  const matches = useMediaQuery(mediaQueries.canHover);\n  \n  if (!matches && removeFromDOM) {\n    return null;\n  }\n  \n  return (\n    <div style={{ display: matches ? 'block' : 'none' }}>\n      {children}\n    </div>\n  );\n};\n\n/**\n * Component that shows content only when a device has a fine pointer\n */\nexport const WithPointer: React.FC<ResponsiveProps> = ({\n  children,\n  removeFromDOM = true,\n}) => {\n  const matches = useMediaQuery(mediaQueries.hasPointer);\n  \n  if (!matches && removeFromDOM) {\n    return null;\n  }\n  \n  return (\n    <div style={{ display: matches ? 'block' : 'none' }}>\n      {children}\n    </div>\n  );\n};\n\n/**\n * Component that shows content only in landscape orientation\n */\nexport const Landscape: React.FC<ResponsiveProps> = ({\n  children,\n  removeFromDOM = true,\n}) => {\n  const matches = useMediaQuery(mediaQueries.landscape);\n  \n  if (!matches && removeFromDOM) {\n    return null;\n  }\n  \n  return (\n    <div style={{ display: matches ? 'block' : 'none' }}>\n      {children}\n    </div>\n  );\n};\n\n/**\n * Component that shows content only in portrait orientation\n */\nexport const Portrait: React.FC<ResponsiveProps> = ({\n  children,\n  removeFromDOM = true,\n}) => {\n  const matches = useMediaQuery(mediaQueries.portrait);\n  \n  if (!matches && removeFromDOM) {\n    return null;\n  }\n  \n  return (\n    <div style={{ display: matches ? 'block' : 'none' }}",
      "tokens": 0,
      "firstFile": {
        "name": "src/ui/layout/Responsive.tsx",
        "start": 71,
        "end": 258,
        "startLoc": {
          "line": 71,
          "column": 6,
          "position": 330
        },
        "endLoc": {
          "line": 258,
          "column": 2,
          "position": 1564
        }
      },
      "secondFile": {
        "name": "src/ui/layout/Responsive.tsx",
        "start": 51,
        "end": 113,
        "startLoc": {
          "line": 51,
          "column": 6,
          "position": 202
        },
        "endLoc": {
          "line": 113,
          "column": 2,
          "position": 619
        }
      }
    },
    {
      "format": "typescript",
      "lines": 16,
      "fragment": ",\n      };\n    } catch (error) {\n      // Handle unexpected errors during transformation\n      const errorMessage = error instanceof Error ? error.message : String(error);\n\n      if (mergedOptions.logErrors) {\n        console.error(`${mergedOptions.errorPrefix} (Transform): ${errorMessage}`);\n      }\n\n      if (mergedOptions.throwOnError) {\n        throw error;\n      }\n\n      return {\n        data: [] as L",
      "tokens": 0,
      "firstFile": {
        "name": "src/types/visualizations/D3ValidationHooks.ts",
        "start": 260,
        "end": 275,
        "startLoc": {
          "line": 260,
          "column": 15,
          "position": 1657
        },
        "endLoc": {
          "line": 275,
          "column": 2,
          "position": 1774
        }
      },
      "secondFile": {
        "name": "src/types/visualizations/D3ValidationHooks.ts",
        "start": 185,
        "end": 200,
        "startLoc": {
          "line": 185,
          "column": 15,
          "position": 1115
        },
        "endLoc": {
          "line": 200,
          "column": 2,
          "position": 1232
        }
      }
    },
    {
      "format": "typescript",
      "lines": 6,
      "fragment": "selection.on(eventType, function (this: GElement, event: Event, d: Datum) {\n        const i = d3.select(this).attr('data-index') ? +d3.select(this).attr('data-index')! : 0;\n        const g = [this] as GElement[];\n        listener(event, d, i, g);\n      } as unknown);\n      return",
      "tokens": 0,
      "firstFile": {
        "name": "src/types/visualizations/D3SelectionTypes.ts",
        "start": 393,
        "end": 398,
        "startLoc": {
          "line": 393,
          "column": 7,
          "position": 2742
        },
        "endLoc": {
          "line": 398,
          "column": 7,
          "position": 2856
        }
      },
      "secondFile": {
        "name": "src/types/visualizations/D3SelectionTypes.ts",
        "start": 267,
        "end": 272,
        "startLoc": {
          "line": 267,
          "column": 2,
          "position": 1761
        },
        "endLoc": {
          "line": 272,
          "column": 2,
          "position": 1874
        }
      }
    },
    {
      "format": "typescript",
      "lines": 9,
      "fragment": "elementType: string,\n      enter?: (\n        selection: d3.Selection<d3.EnterElement, Datum, PElement, PDatum>\n      ) => d3.Selection<NewElement, Datum, PElement, PDatum>,\n      update?: (\n        selection: d3.Selection<GElement, Datum, PElement, PDatum>\n      ) => d3.Selection<GElement, Datum, PElement, PDatum>,\n      exit?: (selection: d3.Selection<GElement, Datum, PElement, PDatum>) => void\n    ) {",
      "tokens": 0,
      "firstFile": {
        "name": "src/types/visualizations/D3SelectionTypes.ts",
        "start": 463,
        "end": 471,
        "startLoc": {
          "line": 463,
          "column": 7,
          "position": 3307
        },
        "endLoc": {
          "line": 471,
          "column": 2,
          "position": 3446
        }
      },
      "secondFile": {
        "name": "src/types/visualizations/D3SelectionTypes.ts",
        "start": 153,
        "end": 161,
        "startLoc": {
          "line": 153,
          "column": 3,
          "position": 769
        },
        "endLoc": {
          "line": 161,
          "column": 2,
          "position": 906
        }
      }
    },
    {
      "format": "typescript",
      "lines": 17,
      "fragment": "export interface FactionConfig {\n  id: FactionId;\n  name: string;\n  banner: {\n    primaryColor: string;\n    secondaryColor: string;\n    sigil: string;\n  };\n  defaultBehavior: FactionBehaviorType;\n  spawnConditions: {\n    minThreatLevel: number;\n    maxShipsPerFleet: number;\n    territoryPreference: string[];\n  };\n}\n\nexport interface AIBehavior",
      "tokens": 0,
      "firstFile": {
        "name": "src/types/ships/FactionShipTypes.ts",
        "start": 12,
        "end": 28,
        "startLoc": {
          "line": 12,
          "column": 1,
          "position": 92
        },
        "endLoc": {
          "line": 28,
          "column": 11,
          "position": 192
        }
      },
      "secondFile": {
        "name": "src/types/ships/FactionTypes.ts",
        "start": 23,
        "end": 39,
        "startLoc": {
          "line": 23,
          "column": 1,
          "position": 113
        },
        "endLoc": {
          "line": 39,
          "column": 13,
          "position": 213
        }
      }
    },
    {
      "format": "typescript",
      "lines": 21,
      "fragment": ";\n    supportShips: string[];\n  };\n}\n\nexport interface LostNovaConfig extends FactionConfig {\n  id: 'lost-nova';\n  forbiddenTech: {\n    darkMatterLevel: number;\n    geneticModifications: string[];\n  };\n}\n\nexport interface EquatorHorizonConfig extends FactionConfig {\n  id: 'equator-horizon';\n  balanceThresholds: {\n    playerExpansion: number;\n    resourceControl: number;\n    techLevel: number;\n  };\n}",
      "tokens": 0,
      "firstFile": {
        "name": "src/types/ships/FactionShipTypes.ts",
        "start": 62,
        "end": 82,
        "startLoc": {
          "line": 62,
          "column": 10,
          "position": 488
        },
        "endLoc": {
          "line": 82,
          "column": 2,
          "position": 604
        }
      },
      "secondFile": {
        "name": "src/types/ships/FactionTypes.ts",
        "start": 76,
        "end": 96,
        "startLoc": {
          "line": 76,
          "column": 7,
          "position": 459
        },
        "endLoc": {
          "line": 96,
          "column": 2,
          "position": 575
        }
      }
    },
    {
      "format": "typescript",
      "lines": 22,
      "fragment": ": number;\n}\n\n/**\n * Resource conversion recipe definition\n */\nexport interface ResourceConversionRecipe {\n  id: string;\n  name: string;\n  description: string;\n  inputs: Array<{\n    type: ResourceType;\n    amount: number;\n  }>;\n  outputs: Array<{\n    type: ResourceType;\n    amount: number;\n  }>;\n  duration: number;\n  energyCost: number;\n  requiredLevel: number;\n  processingTime",
      "tokens": 0,
      "firstFile": {
        "name": "src/types/resources/ResourceConversionTypes.ts",
        "start": 72,
        "end": 93,
        "startLoc": {
          "line": 72,
          "column": 18,
          "position": 375
        },
        "endLoc": {
          "line": 93,
          "column": 15,
          "position": 490
        }
      },
      "secondFile": {
        "name": "src/types/resources/ResourceTypes.ts",
        "start": 76,
        "end": 97,
        "startLoc": {
          "line": 76,
          "column": 11,
          "position": 364
        },
        "endLoc": {
          "line": 97,
          "column": 2,
          "position": 478
        }
      }
    },
    {
      "format": "typescript",
      "lines": 22,
      "fragment": "{\n  id: string;\n  name: string;\n  description: string;\n  inputs: Array<{\n    type: ResourceType;\n    amount: number;\n  }>;\n  outputs: Array<{\n    type: ResourceType;\n    amount: number;\n  }>;\n  duration: number;\n  energyCost: number;\n  requiredLevel: number;\n  processingTime: number;\n  baseEfficiency: number;\n}\n\n/**\n * Extends FlowNode with converter-specific properties\n */",
      "tokens": 0,
      "firstFile": {
        "name": "src/types/resources/ResourceConversionTypes.ts",
        "start": 100,
        "end": 121,
        "startLoc": {
          "line": 100,
          "column": 2,
          "position": 514
        },
        "endLoc": {
          "line": 121,
          "column": 4,
          "position": 629
        }
      },
      "secondFile": {
        "name": "src/types/resources/ResourceTypes.ts",
        "start": 82,
        "end": 99,
        "startLoc": {
          "line": 82,
          "column": 2,
          "position": 380
        },
        "endLoc": {
          "line": 99,
          "column": 4,
          "position": 506
        }
      }
    },
    {
      "format": "typescript",
      "lines": 25,
      "fragment": ";\n}\n\n/**\n * Resource grid cell for resource mapping\n */\nexport interface ResourceGridCell {\n  x: number;\n  y: number;\n  resources: Array<{\n    type: ResourceType;\n    amount: number;\n    quality?: number;\n    accessibility?: number;\n    estimatedValue?: number;\n  }>;\n  totalValue: number;\n  dominantResource?: ResourceType;\n  dominantPercentage?: number;\n  totalResourceCount: number;\n}\n\n/**\n * Props for resource mapping visualization\n */",
      "tokens": 0,
      "firstFile": {
        "name": "src/types/exploration/AnalysisComponentTypes.ts",
        "start": 189,
        "end": 213,
        "startLoc": {
          "line": 189,
          "column": 2,
          "position": 1022
        },
        "endLoc": {
          "line": 213,
          "column": 4,
          "position": 1135
        }
      },
      "secondFile": {
        "name": "src/types/visualization/CommonTypes.ts",
        "start": 371,
        "end": 393,
        "startLoc": {
          "line": 371,
          "column": 7,
          "position": 1724
        },
        "endLoc": {
          "line": 393,
          "column": 45,
          "position": 1837
        }
      }
    },
    {
      "format": "typescript",
      "lines": 18,
      "fragment": ";\n    } catch (error) {\n      const zodError = error as z.ZodError;\n      const validationErrors = this.formatZodErrors(key, zodError);\n\n      if (this.options?.logErrors) {\n        console.error(`Validation failed for config \"${key}\":`, validationErrors);\n      }\n\n      if (this.options?.onValidationError) {\n        this.options.onValidationError(validationErrors);\n      }\n\n      if (this.options?.strictMode) {\n        throw new Error(`Validation failed for config \"${key}\": ${validationErrors[0]?.message}`);\n      }\n\n      return {",
      "tokens": 0,
      "firstFile": {
        "name": "src/types/config/TypeSafeConfig.ts",
        "start": 256,
        "end": 273,
        "startLoc": {
          "line": 256,
          "column": 2,
          "position": 1918
        },
        "endLoc": {
          "line": 273,
          "column": 2,
          "position": 2075
        }
      },
      "secondFile": {
        "name": "src/types/config/TypeSafeConfig.ts",
        "start": 206,
        "end": 223,
        "startLoc": {
          "line": 206,
          "column": 2,
          "position": 1450
        },
        "endLoc": {
          "line": 223,
          "column": 7,
          "position": 1607
        }
      }
    },
    {
      "format": "typescript",
      "lines": 19,
      "fragment": ");\n      } catch (error) {\n        const zodError = error as z.ZodError;\n        const validationErrors = this.formatZodErrors(key, zodError);\n        result.valid = false;\n        result.errors.push(...validationErrors);\n      }\n    }\n\n    if (!result.valid && this.options?.onValidationError) {\n      this.options.onValidationError(result.errors);\n    }\n\n    return result;\n  }\n\n  /**\n   * Get all registered config items\n   */",
      "tokens": 0,
      "firstFile": {
        "name": "src/types/config/TypeSafeConfig.ts",
        "start": 415,
        "end": 433,
        "startLoc": {
          "line": 415,
          "column": 15,
          "position": 3276
        },
        "endLoc": {
          "line": 433,
          "column": 6,
          "position": 3402
        }
      },
      "secondFile": {
        "name": "src/types/config/TypeSafeConfig.ts",
        "start": 359,
        "end": 377,
        "startLoc": {
          "line": 359,
          "column": 6,
          "position": 2775
        },
        "endLoc": {
          "line": 377,
          "column": 6,
          "position": 2901
        }
      }
    },
    {
      "format": "typescript",
      "lines": 22,
      "fragment": "export interface ShipUpgradeStats {\n  hull: {\n    current: number;\n    upgraded: number;\n  };\n  shield: {\n    current: number;\n    upgraded: number;\n  };\n  weapons: {\n    current: number;\n    upgraded: number;\n  };\n  speed: {\n    current: number;\n    upgraded: number;\n  };\n}\n\n/**\n * Ship visual upgrade\n */",
      "tokens": 0,
      "firstFile": {
        "name": "src/types/buildings/ShipHangarTypes.ts",
        "start": 60,
        "end": 81,
        "startLoc": {
          "line": 60,
          "column": 1,
          "position": 338
        },
        "endLoc": {
          "line": 81,
          "column": 4,
          "position": 445
        }
      },
      "secondFile": {
        "name": "src/types/ships/CommonShipTypes.ts",
        "start": 158,
        "end": 177,
        "startLoc": {
          "line": 158,
          "column": 1,
          "position": 1007
        },
        "endLoc": {
          "line": 177,
          "column": 7,
          "position": 1114
        }
      }
    },
    {
      "format": "typescript",
      "lines": 18,
      "fragment": "snapshots.push({\n          timestamp: Date.now(),\n          memoryUsage: this.getMemoryUsage(),\n        });\n      }, snapshotInterval);\n\n      // Wait for test to complete\n      await new Promise<void>(resolve => {\n        const checkComplete = setInterval(() => {\n          if (!this.isRunning || Date.now() - startTime >= duration) {\n            clearInterval(checkComplete);\n            resolve();\n          }\n        }, 100);\n      });\n    }\n\n    testEndTime",
      "tokens": 0,
      "firstFile": {
        "name": "src/tests/performance/LongSessionMemoryTestSuite.ts",
        "start": 224,
        "end": 241,
        "startLoc": {
          "line": 224,
          "column": 9,
          "position": 1761
        },
        "endLoc": {
          "line": 241,
          "column": 12,
          "position": 1900
        }
      },
      "secondFile": {
        "name": "src/tests/performance/LongSessionMemoryTestSuite.ts",
        "start": 201,
        "end": 216,
        "startLoc": {
          "line": 201,
          "column": 9,
          "position": 1557
        },
        "endLoc": {
          "line": 216,
          "column": 5,
          "position": 1694
        }
      }
    },
    {
      "format": "typescript",
      "lines": 16,
      "fragment": ",\n      startTime,\n      endTime,\n      memoryBefore,\n      memoryAfter,\n      heapUsed: memoryAfter - memoryBefore,\n      duration: endTime - startTime,\n      passed: this.config.allowGC ? memoryAfter - memoryBefore < 1000000 : true, // 1MB threshold\n    };\n\n    this.results.push(result);\n\n    if (this.onTestCompleteCallback) {\n      this.onTestCompleteCallback(result);\n    }\n  }",
      "tokens": 0,
      "firstFile": {
        "name": "src/tests/performance/LongSessionMemoryTestSuite.ts",
        "start": 719,
        "end": 734,
        "startLoc": {
          "line": 719,
          "column": 26,
          "position": 6395
        },
        "endLoc": {
          "line": 734,
          "column": 2,
          "position": 6505
        }
      },
      "secondFile": {
        "name": "src/tests/performance/LongSessionMemoryTestSuite.ts",
        "start": 557,
        "end": 573,
        "startLoc": {
          "line": 557,
          "column": 22,
          "position": 4953
        },
        "endLoc": {
          "line": 573,
          "column": 26,
          "position": 5064
        }
      }
    },
    {
      "format": "typescript",
      "lines": 7,
      "fragment": "(\n    sessions: SessionPerformanceData[]\n  ): Record<string, Array<{ timestamp: number; value: number }>> {\n    const metrics: Record<string, Array<{ timestamp: number; value: number }>> = {};\n\n    // Initialize metrics\n    for (const metric of this.config.performanceMetrics",
      "tokens": 0,
      "firstFile": {
        "name": "src/services/telemetry/UserBehaviorCorrelationAnalysis.ts",
        "start": 243,
        "end": 249,
        "startLoc": {
          "line": 243,
          "column": 26,
          "position": 1745
        },
        "endLoc": {
          "line": 249,
          "column": 19,
          "position": 1837
        }
      },
      "secondFile": {
        "name": "src/services/telemetry/UserBehaviorCorrelationAnalysis.ts",
        "start": 175,
        "end": 181,
        "startLoc": {
          "line": 175,
          "column": 23,
          "position": 1125
        },
        "endLoc": {
          "line": 181,
          "column": 16,
          "position": 1217
        }
      }
    },
    {
      "format": "typescript",
      "lines": 20,
      "fragment": ";\n  private parentSystem: ResourceSystem;\n  private config: ResourceSystemConfig;\n  private isInitialized = false;\n\n  constructor(parentSystem: ResourceSystem, config: ResourceSystemConfig) {\n    this.parentSystem = parentSystem;\n    this.config = config;\n  }\n\n  /**\n   * Initialize the subsystem\n   */\n  public async initialize(): Promise<void> {\n    if (this.isInitialized) {\n      return;\n    }\n\n    try {\n      // Initialize default thresholds if needed",
      "tokens": 0,
      "firstFile": {
        "name": "src/resource/subsystems/ResourceThresholdSubsystem.ts",
        "start": 67,
        "end": 86,
        "startLoc": {
          "line": 67,
          "column": 2,
          "position": 428
        },
        "endLoc": {
          "line": 86,
          "column": 43,
          "position": 545
        }
      },
      "secondFile": {
        "name": "src/resource/subsystems/ResourceTransferSubsystem.ts",
        "start": 23,
        "end": 42,
        "startLoc": {
          "line": 23,
          "column": 2,
          "position": 132
        },
        "endLoc": {
          "line": 42,
          "column": 34,
          "position": 249
        }
      }
    },
    {
      "format": "typescript",
      "lines": 7,
      "fragment": "(type: ResourceTypeString | ResourceType): number {\n    let total = 0;\n\n    for (const container of this.containers.values()) {\n      const resourceState = container.resources.get(type as ResourceTypeString);\n      if (resourceState) {\n        total += resourceState.max",
      "tokens": 0,
      "firstFile": {
        "name": "src/resource/subsystems/ResourceStorageSubsystem.ts",
        "start": 777,
        "end": 783,
        "startLoc": {
          "line": 777,
          "column": 17,
          "position": 5525
        },
        "endLoc": {
          "line": 783,
          "column": 4,
          "position": 5610
        }
      },
      "secondFile": {
        "name": "src/resource/subsystems/ResourceStorageSubsystem.ts",
        "start": 761,
        "end": 767,
        "startLoc": {
          "line": 761,
          "column": 15,
          "position": 5413
        },
        "endLoc": {
          "line": 767,
          "column": 8,
          "position": 5498
        }
      }
    },
    {
      "format": "typescript",
      "lines": 8,
      "fragment": "(type: ResourceTypeString | ResourceType): number {\n    // Convert to string resource type for internal use\n    const stringType = ensureStringResourceType(type);\n\n    let total = 0;\n    for (const container of this.containers.values()) {\n      if (container.config.resourceTypes.includes(stringType)) {\n        const",
      "tokens": 0,
      "firstFile": {
        "name": "src/resource/subsystems/ResourceStorageSubsystem.ts",
        "start": 914,
        "end": 921,
        "startLoc": {
          "line": 914,
          "column": 25,
          "position": 6492
        },
        "endLoc": {
          "line": 921,
          "column": 6,
          "position": 6575
        }
      },
      "secondFile": {
        "name": "src/resource/subsystems/ResourceStorageSubsystem.ts",
        "start": 898,
        "end": 905,
        "startLoc": {
          "line": 898,
          "column": 24,
          "position": 6375
        },
        "endLoc": {
          "line": 905,
          "column": 6,
          "position": 6458
        }
      }
    },
    {
      "format": "typescript",
      "lines": 15,
      "fragment": ",\n            moduleId: RESOURCE_MANAGER_ID,\n            moduleType: RESOURCE_MANAGER_TYPE,\n            timestamp: now,\n            data: {\n              type: resourceType,\n              target: action.target,\n              amount: action.amount ?? 0,\n              priority: action.priority || 1,\n              severity: 'info',\n            },\n          });\n          break;\n\n        case 'transfer'",
      "tokens": 0,
      "firstFile": {
        "name": "src/managers/resource/ResourceThresholdManager.ts",
        "start": 446,
        "end": 460,
        "startLoc": {
          "line": 446,
          "column": 28,
          "position": 3130
        },
        "endLoc": {
          "line": 460,
          "column": 11,
          "position": 3226
        }
      },
      "secondFile": {
        "name": "src/managers/resource/ResourceThresholdManager.ts",
        "start": 430,
        "end": 444,
        "startLoc": {
          "line": 430,
          "column": 27,
          "position": 3019
        },
        "endLoc": {
          "line": 444,
          "column": 14,
          "position": 3115
        }
      }
    },
    {
      "format": "typescript",
      "lines": 15,
      "fragment": ",\n            moduleId: RESOURCE_MANAGER_ID,\n            moduleType: RESOURCE_MANAGER_TYPE,\n            timestamp: now,\n            data: {\n              type: resourceType,\n              target: action.target,\n              amount: action.amount ?? 0,\n              priority: action.priority || 1,\n              severity: 'info',\n            },\n          });\n          break;\n\n        case 'notification'",
      "tokens": 0,
      "firstFile": {
        "name": "src/managers/resource/ResourceThresholdManager.ts",
        "start": 462,
        "end": 476,
        "startLoc": {
          "line": 462,
          "column": 26,
          "position": 3241
        },
        "endLoc": {
          "line": 476,
          "column": 15,
          "position": 3337
        }
      },
      "secondFile": {
        "name": "src/managers/resource/ResourceThresholdManager.ts",
        "start": 430,
        "end": 444,
        "startLoc": {
          "line": 430,
          "column": 27,
          "position": 3019
        },
        "endLoc": {
          "line": 444,
          "column": 14,
          "position": 3115
        }
      }
    },
    {
      "format": "typescript",
      "lines": 52,
      "fragment": ">();\n\n    for (const type of config.resourceTypes) {\n      resources.set(type, {\n        current: 0,\n        min: 0,\n        max: config.capacity / config.resourceTypes.length, // Divide capacity equally by default\n        production: 0,\n        consumption: 0,\n      });\n    }\n\n    this.containers.set(config.id, {\n      config,\n      resources,\n      totalStored: 0,\n      lastUpdated: Date.now(),\n    });\n\n    return true;\n  }\n\n  /**\n   * Unregister a storage container\n   */\n  public unregisterContainer(id: string): boolean {\n    if (!this.containers.has(id)) {\n      return false;\n    }\n\n    this.containers.delete(id);\n    return true;\n  }\n\n  /**\n   * Get a storage container\n   */\n  public getContainer(id: string): StorageContainerState | undefined {\n    return this.containers.get(id);\n  }\n\n  /**\n   * Get all storage containers\n   */\n  public getAllContainers(): StorageContainerState[] {\n    return Array.from(this.containers.values());\n  }\n\n  /**\n   * Get containers by resource type\n   */\n  public getContainersByResourceType(type: ResourceType",
      "tokens": 0,
      "firstFile": {
        "name": "src/managers/resource/ResourceStorageManager.ts",
        "start": 131,
        "end": 182,
        "startLoc": {
          "line": 131,
          "column": 14,
          "position": 829
        },
        "endLoc": {
          "line": 182,
          "column": 13,
          "position": 1130
        }
      },
      "secondFile": {
        "name": "src/resource/subsystems/ResourceStorageSubsystem.ts",
        "start": 171,
        "end": 222,
        "startLoc": {
          "line": 171,
          "column": 20,
          "position": 1162
        },
        "endLoc": {
          "line": 222,
          "column": 19,
          "position": 1463
        }
      }
    },
    {
      "format": "typescript",
      "lines": 9,
      "fragment": "(containerId: string, type: ResourceType, amount: number): number {\n    const container = this.containers.get(containerId);\n    if (!container || !container.resources.has(type) || amount <= 0) {\n      return 0;\n    }\n\n    const resourceState = container.resources.get(type)!;\n\n    if",
      "tokens": 0,
      "firstFile": {
        "name": "src/managers/resource/ResourceStorageManager.ts",
        "start": 224,
        "end": 232,
        "startLoc": {
          "line": 224,
          "column": 17,
          "position": 1449
        },
        "endLoc": {
          "line": 232,
          "column": 3,
          "position": 1550
        }
      },
      "secondFile": {
        "name": "src/managers/resource/ResourceStorageManager.ts",
        "start": 189,
        "end": 196,
        "startLoc": {
          "line": 189,
          "column": 14,
          "position": 1184
        },
        "endLoc": {
          "line": 196,
          "column": 6,
          "position": 1284
        }
      }
    },
    {
      "format": "typescript",
      "lines": 14,
      "fragment": ")!;\n\n    if (resourceState.current <= 0) {\n      return 0;\n    }\n\n    const amountToRetrieve = Math.min(amount, resourceState.current);\n\n    resourceState.current -= amountToRetrieve;\n\n    container.totalStored -= amountToRetrieve;\n    container.lastUpdated = Date.now();\n\n    // Record transfer",
      "tokens": 0,
      "firstFile": {
        "name": "src/managers/resource/ResourceStorageManager.ts",
        "start": 230,
        "end": 243,
        "startLoc": {
          "line": 230,
          "column": 5,
          "position": 1544
        },
        "endLoc": {
          "line": 243,
          "column": 19,
          "position": 1632
        }
      },
      "secondFile": {
        "name": "src/resource/subsystems/ResourceStorageSubsystem.ts",
        "start": 320,
        "end": 332,
        "startLoc": {
          "line": 320,
          "column": 11,
          "position": 2206
        },
        "endLoc": {
          "line": 332,
          "column": 52,
          "position": 2293
        }
      }
    },
    {
      "format": "typescript",
      "lines": 13,
      "fragment": "} of sortedContainers) {\n      if (remainingAmount <= 0) {\n        break;\n      }\n\n      const amountStored = this.storeResource(containerId, type, remainingAmount);\n      totalStored += amountStored;\n      remainingAmount -= amountStored;\n    }\n\n    // Handle overflow if needed\n    if (remainingAmount > 0 && this.config.overflowPolicy !== 'reject') {\n      totalStored",
      "tokens": 0,
      "firstFile": {
        "name": "src/managers/resource/ResourceStorageManager.ts",
        "start": 280,
        "end": 292,
        "startLoc": {
          "line": 280,
          "column": 2,
          "position": 1886
        },
        "endLoc": {
          "line": 292,
          "column": 12,
          "position": 1986
        }
      },
      "secondFile": {
        "name": "src/resource/subsystems/ResourceStorageSubsystem.ts",
        "start": 410,
        "end": 422,
        "startLoc": {
          "line": 410,
          "column": 2,
          "position": 2855
        },
        "endLoc": {
          "line": 422,
          "column": 23,
          "position": 2955
        }
      }
    },
    {
      "format": "typescript",
      "lines": 19,
      "fragment": "} of sortedContainers) {\n      if (remainingAmount <= 0) {\n        break;\n      }\n\n      const amountRetrieved = this.retrieveResource(containerId, type, remainingAmount);\n      totalRetrieved += amountRetrieved;\n      remainingAmount -= amountRetrieved;\n    }\n\n    return totalRetrieved;\n  }\n\n  /**\n   * Calculate container scores for allocation\n   */\n  private calculateContainerScores(\n    containers: StorageContainerState[],\n    resourceType: ResourceType",
      "tokens": 0,
      "firstFile": {
        "name": "src/managers/resource/ResourceStorageManager.ts",
        "start": 329,
        "end": 347,
        "startLoc": {
          "line": 329,
          "column": 2,
          "position": 2243
        },
        "endLoc": {
          "line": 347,
          "column": 13,
          "position": 2346
        }
      },
      "secondFile": {
        "name": "src/resource/subsystems/ResourceStorageSubsystem.ts",
        "start": 469,
        "end": 487,
        "startLoc": {
          "line": 469,
          "column": 2,
          "position": 3259
        },
        "endLoc": {
          "line": 487,
          "column": 19,
          "position": 3362
        }
      }
    },
    {
      "format": "typescript",
      "lines": 14,
      "fragment": ";\n    const resourcePriorityValue = this.resourcePriorities.get(resourceType) || 5;\n\n    return containers.map(container => {\n      const resourceState = container.resources.get(resourceType)!;\n      const fillRatio = resourceState.current / resourceState.max;\n\n      // For storage, we prefer containers with lower fill percentage\n      // For retrieval, we prefer containers with higher fill percentage\n      const fillScore = forRetrieval ? fillRatio : 1 - fillRatio;\n\n      // Calculate weighted score\n      const score =\n        container.config.priority * containerPriority",
      "tokens": 0,
      "firstFile": {
        "name": "src/managers/resource/ResourceStorageManager.ts",
        "start": 350,
        "end": 363,
        "startLoc": {
          "line": 350,
          "column": 16,
          "position": 2402
        },
        "endLoc": {
          "line": 363,
          "column": 18,
          "position": 2524
        }
      },
      "secondFile": {
        "name": "src/resource/subsystems/ResourceStorageSubsystem.ts",
        "start": 494,
        "end": 508,
        "startLoc": {
          "line": 494,
          "column": 2,
          "position": 3428
        },
        "endLoc": {
          "line": 508,
          "column": 8,
          "position": 3551
        }
      }
    },
    {
      "format": "typescript",
      "lines": 17,
      "fragment": "// Sort by upgrade potential (containers with lower upgrade level first)\n    const upgradableContainers = relevantContainers\n      .filter(\n        container =>\n          container.config.upgradeLevel !== undefined &&\n          container.config.maxUpgradeLevel !== undefined &&\n          container.config.upgradeLevel < container.config.maxUpgradeLevel\n      )\n      .sort((a, b) => (a.config.upgradeLevel ?? 0) - (b.config.upgradeLevel ?? 0));\n\n    if (upgradableContainers.length === 0) {\n      return 0;\n    }\n\n    // Upgrade the first container\n    const containerToUpgrade = upgradableContainers[0];\n    const",
      "tokens": 0,
      "firstFile": {
        "name": "src/managers/resource/ResourceStorageManager.ts",
        "start": 405,
        "end": 421,
        "startLoc": {
          "line": 405,
          "column": 5,
          "position": 2762
        },
        "endLoc": {
          "line": 421,
          "column": 6,
          "position": 2913
        }
      },
      "secondFile": {
        "name": "src/resource/subsystems/ResourceStorageSubsystem.ts",
        "start": 540,
        "end": 557,
        "startLoc": {
          "line": 540,
          "column": 7,
          "position": 3759
        },
        "endLoc": {
          "line": 557,
          "column": 43,
          "position": 3911
        }
      }
    },
    {
      "format": "typescript",
      "lines": 21,
      "fragment": "): void {\n    const containers = this.getContainersByResourceType(type);\n\n    if (containers.length <= 1) {\n      return;\n    }\n\n    // Calculate fill ratios\n    const fillRatios = containers.map(container => {\n      const resourceState = container.resources.get(type)!;\n      return {\n        id: container.config.id,\n        fillRatio: resourceState.current / resourceState.max,\n      };\n    });\n\n    // Find min and max fill ratios\n    const minFill = Math.min(...fillRatios.map(r => r.fillRatio));\n    const maxFill = Math.max(...fillRatios.map(r => r.fillRatio));\n\n    // Check if imbalance exceeds threshold",
      "tokens": 0,
      "firstFile": {
        "name": "src/managers/resource/ResourceStorageManager.ts",
        "start": 451,
        "end": 471,
        "startLoc": {
          "line": 451,
          "column": 13,
          "position": 3085
        },
        "endLoc": {
          "line": 471,
          "column": 40,
          "position": 3269
        }
      },
      "secondFile": {
        "name": "src/resource/subsystems/ResourceStorageSubsystem.ts",
        "start": 607,
        "end": 627,
        "startLoc": {
          "line": 607,
          "column": 19,
          "position": 4286
        },
        "endLoc": {
          "line": 627,
          "column": 61,
          "position": 4470
        }
      }
    },
    {
      "format": "typescript",
      "lines": 58,
      "fragment": ", containers: StorageContainerState[]): void {\n    // Calculate target fill ratio (average)\n    let totalCurrent = 0;\n    let totalMax = 0;\n\n    for (const container of containers) {\n      const resourceState = container.resources.get(type)!;\n      totalCurrent += resourceState.current;\n      totalMax += resourceState.max;\n    }\n\n    const targetFillRatio = totalCurrent / totalMax;\n\n    // Calculate transfers needed\n    for (const container of containers) {\n      const resourceState = container.resources.get(type)!;\n      const currentFillRatio = resourceState.current / resourceState.max;\n\n      if (Math.abs(currentFillRatio - targetFillRatio) < 0.05) {\n        // Close enough, skip\n        continue;\n      }\n\n      const targetAmount = resourceState.max * targetFillRatio;\n      const difference = targetAmount - resourceState.current;\n\n      if (difference > 0) {\n        // Need to add resources\n        // Find container with excess\n        const sourceContainer = containers.find(c => {\n          const rs = c.resources.get(type)!;\n          return rs.current / rs.max > targetFillRatio + 0.05;\n        });\n\n        if (sourceContainer) {\n          const sourceState = sourceContainer.resources.get(type)!;\n          const availableToTransfer = sourceState.current - sourceState.max * targetFillRatio;\n          const transferAmount = Math.min(difference, availableToTransfer);\n\n          // Transfer resources\n          this.transferBetweenContainers(\n            sourceContainer.config.id,\n            container.config.id,\n            type,\n            transferAmount\n          );\n        }\n      }\n    }\n  }\n\n  /**\n   * Transfer resources between containers\n   */\n  public transferBetweenContainers(\n    sourceId: string,\n    targetId: string,\n    type: ResourceType",
      "tokens": 0,
      "firstFile": {
        "name": "src/managers/resource/ResourceStorageManager.ts",
        "start": 480,
        "end": 537,
        "startLoc": {
          "line": 480,
          "column": 13,
          "position": 3323
        },
        "endLoc": {
          "line": 537,
          "column": 13,
          "position": 3781
        }
      },
      "secondFile": {
        "name": "src/resource/subsystems/ResourceStorageSubsystem.ts",
        "start": 637,
        "end": 694,
        "startLoc": {
          "line": 637,
          "column": 19,
          "position": 4530
        },
        "endLoc": {
          "line": 694,
          "column": 19,
          "position": 4988
        }
      }
    },
    {
      "format": "typescript",
      "lines": 26,
      "fragment": "ResourceType,\n    amount: number\n  ): number {\n    if (amount <= 0 || sourceId === targetId) {\n      return 0;\n    }\n\n    // Retrieve from source\n    const retrievedAmount = this.retrieveResource(sourceId, type, amount);\n\n    if (retrievedAmount <= 0) {\n      return 0;\n    }\n\n    // Store in target\n    const storedAmount = this.storeResource(targetId, type, retrievedAmount);\n\n    // If not all was stored, return remainder to source\n    if (storedAmount < retrievedAmount) {\n      const remainder = retrievedAmount - storedAmount;\n      this.storeResource(sourceId, type, remainder);\n    }\n\n    // Record transfer\n    this.recordTransfer({\n      type,",
      "tokens": 0,
      "firstFile": {
        "name": "src/managers/resource/ResourceStorageManager.ts",
        "start": 537,
        "end": 562,
        "startLoc": {
          "line": 537,
          "column": 2,
          "position": 3781
        },
        "endLoc": {
          "line": 562,
          "column": 2,
          "position": 3963
        }
      },
      "secondFile": {
        "name": "src/resource/subsystems/ResourceStorageSubsystem.ts",
        "start": 694,
        "end": 719,
        "startLoc": {
          "line": 694,
          "column": 2,
          "position": 4992
        },
        "endLoc": {
          "line": 719,
          "column": 2,
          "position": 5174
        }
      }
    },
    {
      "format": "typescript",
      "lines": 7,
      "fragment": "(type: ResourceType): number {\n    let total = 0;\n\n    for (const container of Array.from(this.containers.values())) {\n      const resourceState = container.resources.get(type);\n      if (resourceState) {\n        total += resourceState.max",
      "tokens": 0,
      "firstFile": {
        "name": "src/managers/resource/ResourceStorageManager.ts",
        "start": 617,
        "end": 623,
        "startLoc": {
          "line": 617,
          "column": 17,
          "position": 4289
        },
        "endLoc": {
          "line": 623,
          "column": 4,
          "position": 4371
        }
      },
      "secondFile": {
        "name": "src/managers/resource/ResourceStorageManager.ts",
        "start": 601,
        "end": 607,
        "startLoc": {
          "line": 601,
          "column": 15,
          "position": 4180
        },
        "endLoc": {
          "line": 607,
          "column": 8,
          "position": 4262
        }
      }
    },
    {
      "format": "typescript",
      "lines": 24,
      "fragment": ") || 5;\n  }\n\n  /**\n   * Update container configuration\n   */\n  public updateContainerConfig(id: string, config: Partial<StorageContainerConfig>): boolean {\n    const container = this.containers.get(id);\n    if (!container) {\n      return false;\n    }\n\n    // Update config\n    container.config = {\n      ...container.config,\n      ...config,\n    };\n\n    return true;\n  }\n\n  /**\n   * Clean up resources\n   */",
      "tokens": 0,
      "firstFile": {
        "name": "src/managers/resource/ResourceStorageManager.ts",
        "start": 641,
        "end": 664,
        "startLoc": {
          "line": 641,
          "column": 5,
          "position": 4463
        },
        "endLoc": {
          "line": 664,
          "column": 6,
          "position": 4579
        }
      },
      "secondFile": {
        "name": "src/resource/subsystems/ResourceStorageSubsystem.ts",
        "start": 805,
        "end": 828,
        "startLoc": {
          "line": 805,
          "column": 11,
          "position": 5765
        },
        "endLoc": {
          "line": 828,
          "column": 6,
          "position": 5881
        }
      }
    },
    {
      "format": "typescript",
      "lines": 21,
      "fragment": ";\n\n/**\n * Pool allocation strategy\n */\nexport type PoolAllocationStrategy = 'equal' | 'priority' | 'demand-based' | 'custom';\n\n/**\n * Pool distribution rule\n */\nexport interface PoolDistributionRule {\n  id: string;\n  poolId: string;\n  targetIds: string[];\n  resourceType: ResourceType;\n  percentage: number;\n  minAmount?: number;\n  maxAmount?: number;\n  priority: number;\n  condition?: (state: ResourceState) => boolean;\n  enabled",
      "tokens": 0,
      "firstFile": {
        "name": "src/managers/resource/ResourcePoolManager.ts",
        "start": 7,
        "end": 27,
        "startLoc": {
          "line": 7,
          "column": 38,
          "position": 29
        },
        "endLoc": {
          "line": 27,
          "column": 8,
          "position": 146
        }
      },
      "secondFile": {
        "name": "src/types/resources/ResourcePoolTypes.ts",
        "start": 1,
        "end": 21,
        "startLoc": {
          "line": 1,
          "column": 18,
          "position": 14
        },
        "endLoc": {
          "line": 21,
          "column": 2,
          "position": 130
        }
      }
    },
    {
      "format": "typescript",
      "lines": 24,
      "fragment": ".resources = {\n        [ ResourceType.MINERALS ]: createResourceState(ResourceType.MINERALS),\n        [ ResourceType.ENERGY ]: createResourceState(ResourceType.ENERGY),\n        [ ResourceType.POPULATION ]: createResourceState(ResourceType.POPULATION),\n        [ ResourceType.RESEARCH ]: createResourceState(ResourceType.RESEARCH),\n        [ ResourceType.FOOD ]: createResourceState(ResourceType.FOOD),\n        [ ResourceType.WATER ]: createResourceState(ResourceType.WATER),\n        [ ResourceType.PLASMA ]: createResourceState(ResourceType.PLASMA),\n        [ ResourceType.GAS ]: createResourceState(ResourceType.GAS),\n        [ ResourceType.EXOTIC ]: createResourceState(ResourceType.EXOTIC),\n        [ ResourceType.ORGANIC ]: createResourceState(ResourceType.ORGANIC),\n        [ ResourceType.IRON ]: createResourceState(ResourceType.IRON),\n        [ ResourceType.COPPER ]: createResourceState(ResourceType.COPPER),\n        [ ResourceType.TITANIUM ]: createResourceState(ResourceType.TITANIUM),\n        [ ResourceType.URANIUM ]: createResourceState(ResourceType.URANIUM),\n        [ ResourceType.HELIUM ]: createResourceState(ResourceType.HELIUM),\n        [ ResourceType.DEUTERIUM ]: createResourceState(ResourceType.DEUTERIUM),\n        [ ResourceType.ANTIMATTER ]: createResourceState(ResourceType.ANTIMATTER),\n        [ ResourceType.DARK_MATTER ]: createResourceState(ResourceType.DARK_MATTER),\n        [ ResourceType.EXOTIC_MATTER ]: createResourceState(ResourceType.EXOTIC_MATTER),\n      };\n    }\n\n    if",
      "tokens": 0,
      "firstFile": {
        "name": "src/managers/resource/ResourcePoolManager.ts",
        "start": 684,
        "end": 707,
        "startLoc": {
          "line": 684,
          "column": 16,
          "position": 5330
        },
        "endLoc": {
          "line": 707,
          "column": 3,
          "position": 5688
        }
      },
      "secondFile": {
        "name": "src/managers/resource/ResourcePoolManager.ts",
        "start": 356,
        "end": 379,
        "startLoc": {
          "line": 356,
          "column": 10,
          "position": 2574
        },
        "endLoc": {
          "line": 379,
          "column": 29,
          "position": 2932
        }
      }
    },
    {
      "format": "typescript",
      "lines": 24,
      "fragment": ".resources = {\n        [ ResourceType.MINERALS ]: createResourceState(ResourceType.MINERALS),\n        [ ResourceType.ENERGY ]: createResourceState(ResourceType.ENERGY),\n        [ ResourceType.POPULATION ]: createResourceState(ResourceType.POPULATION),\n        [ ResourceType.RESEARCH ]: createResourceState(ResourceType.RESEARCH),\n        [ ResourceType.FOOD ]: createResourceState(ResourceType.FOOD),\n        [ ResourceType.WATER ]: createResourceState(ResourceType.WATER),\n        [ ResourceType.PLASMA ]: createResourceState(ResourceType.PLASMA),\n        [ ResourceType.GAS ]: createResourceState(ResourceType.GAS),\n        [ ResourceType.EXOTIC ]: createResourceState(ResourceType.EXOTIC),\n        [ ResourceType.ORGANIC ]: createResourceState(ResourceType.ORGANIC),\n        [ ResourceType.IRON ]: createResourceState(ResourceType.IRON),\n        [ ResourceType.COPPER ]: createResourceState(ResourceType.COPPER),\n        [ ResourceType.TITANIUM ]: createResourceState(ResourceType.TITANIUM),\n        [ ResourceType.URANIUM ]: createResourceState(ResourceType.URANIUM),\n        [ ResourceType.HELIUM ]: createResourceState(ResourceType.HELIUM),\n        [ ResourceType.DEUTERIUM ]: createResourceState(ResourceType.DEUTERIUM),\n        [ ResourceType.ANTIMATTER ]: createResourceState(ResourceType.ANTIMATTER),\n        [ ResourceType.DARK_MATTER ]: createResourceState(ResourceType.DARK_MATTER),\n        [ ResourceType.EXOTIC_MATTER ]: createResourceState(ResourceType.EXOTIC_MATTER),\n      };\n    }\n\n    // Check if source has enough resources",
      "tokens": 0,
      "firstFile": {
        "name": "src/managers/resource/ResourcePoolManager.ts",
        "start": 708,
        "end": 731,
        "startLoc": {
          "line": 708,
          "column": 16,
          "position": 5701
        },
        "endLoc": {
          "line": 731,
          "column": 40,
          "position": 6059
        }
      },
      "secondFile": {
        "name": "src/managers/resource/ResourcePoolManager.ts",
        "start": 356,
        "end": 379,
        "startLoc": {
          "line": 356,
          "column": 10,
          "position": 2574
        },
        "endLoc": {
          "line": 379,
          "column": 29,
          "position": 2932
        }
      }
    },
    {
      "format": "typescript",
      "lines": 22,
      "fragment": "as ModuleEventType, event => {\n      // Type guard for event data\n      if (!event?.data || typeof event?.data !== 'object') {\n        return;\n      }\n\n      // Extract and validate resource type\n      const resourceType = event?.data?.type;\n      if (!this.isValidResourceType(resourceType)) {\n        return;\n      }\n\n      const enumType = toEnumResourceType(resourceType);\n\n      // Get resource state\n      const resourceState = this.resourceManager.getResourceState(enumType);\n      if (resourceState) {\n        this.updateResourceState(resourceType, resourceState);\n      }\n    });\n\n    // Subscribe to resource transferred events",
      "tokens": 0,
      "firstFile": {
        "name": "src/managers/resource/ResourceIntegration.ts",
        "start": 112,
        "end": 133,
        "startLoc": {
          "line": 112,
          "column": 2,
          "position": 724
        },
        "endLoc": {
          "line": 133,
          "column": 44,
          "position": 879
        }
      },
      "secondFile": {
        "name": "src/managers/resource/ResourceIntegration.ts",
        "start": 90,
        "end": 111,
        "startLoc": {
          "line": 90,
          "column": 2,
          "position": 560
        },
        "endLoc": {
          "line": 111,
          "column": 41,
          "position": 715
        }
      }
    },
    {
      "format": "typescript",
      "lines": 31,
      "fragment": ";\n  }\n\n  /**\n   * Register a container\n   */\n  public registerContainer(container: ResourceContainer): boolean {\n    if (!container.id) {\n      console.error('Invalid container:', container);\n      return false;\n    }\n\n    this.containers.set(container.id, container);\n    return true;\n  }\n\n  /**\n   * Unregister a container\n   */\n  public unregisterContainer(id: string): boolean {\n    if (!this.containers.has(id)) {\n      return false;\n    }\n\n    this.containers.delete(id);\n    return true;\n  }\n\n  /**\n   * Set discount for a resource type\n   */",
      "tokens": 0,
      "firstFile": {
        "name": "src/managers/resource/ResourceCostManager.ts",
        "start": 57,
        "end": 87,
        "startLoc": {
          "line": 57,
          "column": 2,
          "position": 411
        },
        "endLoc": {
          "line": 87,
          "column": 6,
          "position": 564
        }
      },
      "secondFile": {
        "name": "src/managers/resource/ResourcePoolManager.ts",
        "start": 113,
        "end": 143,
        "startLoc": {
          "line": 113,
          "column": 5,
          "position": 754
        },
        "endLoc": {
          "line": 143,
          "column": 6,
          "position": 907
        }
      }
    },
    {
      "format": "typescript",
      "lines": 13,
      "fragment": ", (effect, moduleId) => {\n      const module = moduleManager.getModule(moduleId);\n      if (!module) {\n        return {\n          success: false,\n          effectType: effect.type,\n          target: effect.target,\n          value: effect.value,\n          error: `Module ${moduleId} not found`,\n        };\n      }\n\n      // Apply resource boost",
      "tokens": 0,
      "firstFile": {
        "name": "src/managers/module/SubModuleManager.ts",
        "start": 193,
        "end": 205,
        "startLoc": {
          "line": 193,
          "column": 17,
          "position": 991
        },
        "endLoc": {
          "line": 205,
          "column": 24,
          "position": 1088
        }
      },
      "secondFile": {
        "name": "src/managers/module/SubModuleManager.ts",
        "start": 167,
        "end": 179,
        "startLoc": {
          "line": 167,
          "column": 13,
          "position": 780
        },
        "endLoc": {
          "line": 179,
          "column": 69,
          "position": 877
        }
      }
    },
    {
      "format": "typescript",
      "lines": 12,
      "fragment": "${moduleId}: ${effect.target} ${effect.isPercentage ? '+' : ''}${effect.value}${effect.isPercentage ? '%' : ''}`\n      );\n\n      return {\n        success: true,\n        effectType: effect.type,\n        target: effect.target,\n        value: effect.value,\n      };\n    });\n\n    // Unlock ability effect handler",
      "tokens": 0,
      "firstFile": {
        "name": "src/managers/module/SubModuleManager.ts",
        "start": 207,
        "end": 218,
        "startLoc": {
          "line": 207,
          "column": 47,
          "position": 1098
        },
        "endLoc": {
          "line": 218,
          "column": 33,
          "position": 1194
        }
      },
      "secondFile": {
        "name": "src/managers/module/SubModuleManager.ts",
        "start": 181,
        "end": 192,
        "startLoc": {
          "line": 181,
          "column": 43,
          "position": 887
        },
        "endLoc": {
          "line": 192,
          "column": 33,
          "position": 983
        }
      }
    },
    {
      "format": "typescript",
      "lines": 13,
      "fragment": ", (effect, moduleId) => {\n      const module = moduleManager.getModule(moduleId);\n      if (!module) {\n        return {\n          success: false,\n          effectType: effect.type,\n          target: effect.target,\n          value: effect.value,\n          error: `Module ${moduleId} not found`,\n        };\n      }\n\n      // Unlock ability",
      "tokens": 0,
      "firstFile": {
        "name": "src/managers/module/SubModuleManager.ts",
        "start": 219,
        "end": 231,
        "startLoc": {
          "line": 219,
          "column": 17,
          "position": 1202
        },
        "endLoc": {
          "line": 231,
          "column": 18,
          "position": 1299
        }
      },
      "secondFile": {
        "name": "src/managers/module/SubModuleManager.ts",
        "start": 167,
        "end": 179,
        "startLoc": {
          "line": 167,
          "column": 13,
          "position": 780
        },
        "endLoc": {
          "line": 179,
          "column": 69,
          "position": 877
        }
      }
    },
    {
      "format": "typescript",
      "lines": 13,
      "fragment": ", (effect, moduleId) => {\n      const module = moduleManager.getModule(moduleId);\n      if (!module) {\n        return {\n          success: false,\n          effectType: effect.type,\n          target: effect.target,\n          value: effect.value,\n          error: `Module ${moduleId} not found`,\n        };\n      }\n\n      // Reduce cost",
      "tokens": 0,
      "firstFile": {
        "name": "src/managers/module/SubModuleManager.ts",
        "start": 243,
        "end": 255,
        "startLoc": {
          "line": 243,
          "column": 14,
          "position": 1379
        },
        "endLoc": {
          "line": 255,
          "column": 15,
          "position": 1476
        }
      },
      "secondFile": {
        "name": "src/managers/module/SubModuleManager.ts",
        "start": 167,
        "end": 179,
        "startLoc": {
          "line": 167,
          "column": 13,
          "position": 780
        },
        "endLoc": {
          "line": 179,
          "column": 69,
          "position": 877
        }
      }
    },
    {
      "format": "typescript",
      "lines": 12,
      "fragment": " : ''}${effect.value}${effect.isPercentage ? '%' : ''}`\n      );\n\n      return {\n        success: true,\n        effectType: effect.type,\n        target: effect.target,\n        value: effect.value,\n      };\n    });\n\n    // Automation effect handler",
      "tokens": 0,
      "firstFile": {
        "name": "src/managers/module/SubModuleManager.ts",
        "start": 257,
        "end": 268,
        "startLoc": {
          "line": 257,
          "column": 4,
          "position": 1503
        },
        "endLoc": {
          "line": 268,
          "column": 29,
          "position": 1582
        }
      },
      "secondFile": {
        "name": "src/managers/module/SubModuleManager.ts",
        "start": 181,
        "end": 192,
        "startLoc": {
          "line": 181,
          "column": 4,
          "position": 904
        },
        "endLoc": {
          "line": 192,
          "column": 33,
          "position": 983
        }
      }
    },
    {
      "format": "typescript",
      "lines": 13,
      "fragment": ", (effect, moduleId) => {\n      const module = moduleManager.getModule(moduleId);\n      if (!module) {\n        return {\n          success: false,\n          effectType: effect.type,\n          target: effect.target,\n          value: effect.value,\n          error: `Module ${moduleId} not found`,\n        };\n      }\n\n      // Apply automation",
      "tokens": 0,
      "firstFile": {
        "name": "src/managers/module/SubModuleManager.ts",
        "start": 269,
        "end": 281,
        "startLoc": {
          "line": 269,
          "column": 13,
          "position": 1590
        },
        "endLoc": {
          "line": 281,
          "column": 20,
          "position": 1687
        }
      },
      "secondFile": {
        "name": "src/managers/module/SubModuleManager.ts",
        "start": 167,
        "end": 179,
        "startLoc": {
          "line": 167,
          "column": 13,
          "position": 780
        },
        "endLoc": {
          "line": 179,
          "column": 69,
          "position": 877
        }
      }
    },
    {
      "format": "typescript",
      "lines": 13,
      "fragment": ", (effect, moduleId) => {\n      const module = moduleManager.getModule(moduleId);\n      if (!module) {\n        return {\n          success: false,\n          effectType: effect.type,\n          target: effect.target,\n          value: effect.value,\n          error: `Module ${moduleId} not found`,\n        };\n      }\n\n      // Apply special effect",
      "tokens": 0,
      "firstFile": {
        "name": "src/managers/module/SubModuleManager.ts",
        "start": 293,
        "end": 305,
        "startLoc": {
          "line": 293,
          "column": 10,
          "position": 1767
        },
        "endLoc": {
          "line": 305,
          "column": 24,
          "position": 1864
        }
      },
      "secondFile": {
        "name": "src/managers/module/SubModuleManager.ts",
        "start": 167,
        "end": 179,
        "startLoc": {
          "line": 167,
          "column": 13,
          "position": 780
        },
        "endLoc": {
          "line": 179,
          "column": 69,
          "position": 877
        }
      }
    },
    {
      "format": "typescript",
      "lines": 19,
      "fragment": "= (event: ModuleEvent): void => {\n    // Type guard for event data\n    if (!event?.data || typeof event?.data !== 'object') {\n      return;\n    }\n\n    // Safely extract moduleId with type checking\n    const moduleId = typeof event?.data?.moduleId === 'string' ? event?.data?.moduleId : undefined;\n    if (!moduleId) {\n      return;\n    }\n\n    // Check if module has sub-modules\n    const module = moduleManager.getModule(moduleId);\n    if (!module || !module.subModules || module.subModules.length === 0) {\n      return;\n    }\n\n    // Activate sub-modules that should be active",
      "tokens": 0,
      "firstFile": {
        "name": "src/managers/module/SubModuleManager.ts",
        "start": 813,
        "end": 831,
        "startLoc": {
          "line": 813,
          "column": 2,
          "position": 5508
        },
        "endLoc": {
          "line": 831,
          "column": 46,
          "position": 5674
        }
      },
      "secondFile": {
        "name": "src/managers/module/SubModuleManager.ts",
        "start": 782,
        "end": 800,
        "startLoc": {
          "line": 782,
          "column": 2,
          "position": 5272
        },
        "endLoc": {
          "line": 800,
          "column": 53,
          "position": 5438
        }
      }
    },
    {
      "format": "typescript",
      "lines": 19,
      "fragment": "= (event: ModuleEvent): void => {\n    // Type guard for event data\n    if (!event?.data || typeof event?.data !== 'object') {\n      return;\n    }\n\n    // Safely extract moduleId with type checking\n    const moduleId = typeof event?.data?.moduleId === 'string' ? event?.data?.moduleId : undefined;\n    if (!moduleId) {\n      return;\n    }\n\n    // Check if module has sub-modules\n    const module = moduleManager.getModule(moduleId);\n    if (!module || !module.subModules || module.subModules.length === 0) {\n      return;\n    }\n\n    // Deactivate all sub-modules",
      "tokens": 0,
      "firstFile": {
        "name": "src/managers/module/SubModuleManager.ts",
        "start": 842,
        "end": 860,
        "startLoc": {
          "line": 842,
          "column": 2,
          "position": 5745
        },
        "endLoc": {
          "line": 860,
          "column": 30,
          "position": 5911
        }
      },
      "secondFile": {
        "name": "src/managers/module/SubModuleManager.ts",
        "start": 782,
        "end": 800,
        "startLoc": {
          "line": 782,
          "column": 2,
          "position": 5272
        },
        "endLoc": {
          "line": 800,
          "column": 53,
          "position": 5438
        }
      }
    },
    {
      "format": "typescript",
      "lines": 14,
      "fragment": "// Apply trait bonuses\n    officer.traits.forEach(traitId => {\n      const trait = OFFICER_TRAITS.find(t => t.id === traitId);\n      if (trait?.effects.bonuses?.squadBonus) {\n        bonus *= 1 + trait.effects.bonuses.squadBonus;\n      }\n    });\n\n    return bonus;\n  }\n\n  /**\n   * Add experience to an officer and handle level ups\n   */",
      "tokens": 0,
      "firstFile": {
        "name": "src/managers/module/OfficerManager.ts",
        "start": 458,
        "end": 471,
        "startLoc": {
          "line": 458,
          "column": 5,
          "position": 3659
        },
        "endLoc": {
          "line": 471,
          "column": 6,
          "position": 3754
        }
      },
      "secondFile": {
        "name": "src/managers/module/OfficerManager.ts",
        "start": 428,
        "end": 441,
        "startLoc": {
          "line": 428,
          "column": 5,
          "position": 3428
        },
        "endLoc": {
          "line": 441,
          "column": 6,
          "position": 3523
        }
      }
    },
    {
      "format": "typescript",
      "lines": 17,
      "fragment": ";\n      }\n    }\n\n    // Check tech requirements\n    if (requirements.techRequirements) {\n      // TODO: Implement tech requirement checking\n      // This would require integration with a tech tree system\n    }\n\n    // Check module requirements\n    if (requirements.moduleRequirements) {\n      for (const req of requirements.moduleRequirements) {\n        const modules = moduleManager.getModulesByType(req.type);\n        const hasRequiredModule = modules.some(m => m.level >= req.level);\n        if (!hasRequiredModule) {\n          missingRequirements",
      "tokens": 0,
      "firstFile": {
        "name": "src/managers/module/ModuleUpgradeManager.ts",
        "start": 344,
        "end": 360,
        "startLoc": {
          "line": 344,
          "column": 2,
          "position": 2246
        },
        "endLoc": {
          "line": 360,
          "column": 20,
          "position": 2365
        }
      },
      "secondFile": {
        "name": "src/managers/module/ModuleUpgradeManager.ts",
        "start": 276,
        "end": 292,
        "startLoc": {
          "line": 276,
          "column": 6,
          "position": 1718
        },
        "endLoc": {
          "line": 292,
          "column": 7,
          "position": 1837
        }
      }
    },
    {
      "format": "typescript",
      "lines": 17,
      "fragment": ";\n        }\n      }\n    }\n\n    // Check building level\n    if (requirements.buildingLevel) {\n      // Find the building this module is attached to\n      let attachedBuilding = undefined;\n      for (const building of moduleManager.getBuildings()) {\n        if (building.modules.some(m => m.id === moduleId)) {\n          attachedBuilding = building;\n          break;\n        }\n      }\n\n      if (!attachedBuilding)",
      "tokens": 0,
      "firstFile": {
        "name": "src/managers/module/ModuleUpgradeManager.ts",
        "start": 360,
        "end": 376,
        "startLoc": {
          "line": 360,
          "column": 2,
          "position": 2383
        },
        "endLoc": {
          "line": 376,
          "column": 2,
          "position": 2492
        }
      },
      "secondFile": {
        "name": "src/managers/module/ModuleUpgradeManager.ts",
        "start": 292,
        "end": 308,
        "startLoc": {
          "line": 292,
          "column": 6,
          "position": 1840
        },
        "endLoc": {
          "line": 308,
          "column": 3,
          "position": 1950
        }
      }
    },
    {
      "format": "typescript",
      "lines": 11,
      "fragment": "this.unsubscribeHandles.push(\n      moduleEventBus.subscribe('MODULE_UPGRADED' as ModuleEventType, this.handleModuleUpgraded)\n    );\n    this.unsubscribeHandles.push(\n      moduleEventBus.subscribe('MODULE_ACTIVATED' as ModuleEventType, this.handleModuleActivated)\n    );\n    this.unsubscribeHandles.push(\n      moduleEventBus.subscribe('MODULE_DEACTIVATED' as ModuleEventType, this.handleModuleDeactivated)\n    );\n\n    // Status events",
      "tokens": 0,
      "firstFile": {
        "name": "src/managers/module/ModuleStatusManager.ts",
        "start": 146,
        "end": 156,
        "startLoc": {
          "line": 146,
          "column": 5,
          "position": 821
        },
        "endLoc": {
          "line": 156,
          "column": 17,
          "position": 909
        }
      },
      "secondFile": {
        "name": "src/managers/module/SubModuleManager.ts",
        "start": 151,
        "end": 160,
        "startLoc": {
          "line": 151,
          "column": 5,
          "position": 666
        },
        "endLoc": {
          "line": 160,
          "column": 2,
          "position": 753
        }
      }
    },
    {
      "format": "typescript",
      "lines": 16,
      "fragment": "interface Hazard {\n  id: string;\n  type: 'asteroids' | 'debris' | 'radiation' | 'anomaly';\n  position: Position;\n  radius: number;\n  severity: 'low' | 'medium' | 'high';\n  effect: {\n    type: 'damage' | 'slow' | 'shield' | 'weapon';\n    value: number;\n  };\n  movement?: {\n    speed: number;\n    direction: number;\n  };\n  particles?: number;\n}",
      "tokens": 0,
      "firstFile": {
        "name": "src/managers/game/AsteroidFieldManager.ts",
        "start": 19,
        "end": 34,
        "startLoc": {
          "line": 19,
          "column": 1,
          "position": 117
        },
        "endLoc": {
          "line": 34,
          "column": 2,
          "position": 247
        }
      },
      "secondFile": {
        "name": "src/types/combat/HazardTypes.ts",
        "start": 3,
        "end": 18,
        "startLoc": {
          "line": 3,
          "column": 2,
          "position": 16
        },
        "endLoc": {
          "line": 18,
          "column": 4,
          "position": 147
        }
      }
    },
    {
      "format": "typescript",
      "lines": 6,
      "fragment": "const distanceToField = Math.sqrt(\n        Math.pow(position.x - field.position.x, 2) + Math.pow(position.y - field.position.y, 2)\n      );\n\n      if (distanceToField <= field.radius) {\n        // Apply field density effects",
      "tokens": 0,
      "firstFile": {
        "name": "src/managers/game/AsteroidFieldManager.ts",
        "start": 623,
        "end": 628,
        "startLoc": {
          "line": 623,
          "column": 7,
          "position": 5413
        },
        "endLoc": {
          "line": 628,
          "column": 31,
          "position": 5488
        }
      },
      "secondFile": {
        "name": "src/managers/game/AsteroidFieldManager.ts",
        "start": 460,
        "end": 465,
        "startLoc": {
          "line": 460,
          "column": 7,
          "position": 3945
        },
        "endLoc": {
          "line": 465,
          "column": 8,
          "position": 4020
        }
      }
    },
    {
      "format": "typescript",
      "lines": 10,
      "fragment": "{\n    this.ships.set(ship.id, ship);\n    this.publish({\n      type: EventType.EXPLORATION_SHIP_REGISTERED,\n      moduleId: ship.id,\n      moduleType: 'ship' as ModuleType,\n      timestamp: Date.now(),\n      data: { shipId: ship.id, ship },\n    });\n  }",
      "tokens": 0,
      "firstFile": {
        "name": "src/managers/exploration/ReconShipManagerImpl.ts",
        "start": 262,
        "end": 271,
        "startLoc": {
          "line": 262,
          "column": 2,
          "position": 1874
        },
        "endLoc": {
          "line": 271,
          "column": 2,
          "position": 1964
        }
      },
      "secondFile": {
        "name": "src/managers/exploration/ReconShipManagerImpl.ts",
        "start": 155,
        "end": 164,
        "startLoc": {
          "line": 155,
          "column": 2,
          "position": 1144
        },
        "endLoc": {
          "line": 164,
          "column": 7,
          "position": 1234
        }
      }
    },
    {
      "format": "typescript",
      "lines": 28,
      "fragment": ";\n    status: 'unmapped' | 'mapped' | 'scanning' | 'analyzed';\n    position?: { x: number; y: number };\n  }): StarSystem {\n    const now = Date.now();\n\n    const newSystem: StarSystem = {\n      ...system,\n      position: system.position || { x: 0, y: 0 },\n      assignedShips: [],\n      discoveredAt: now,\n    };\n\n    this.systems.set(system.id, newSystem);\n    this.stats.systemsCreated++;\n\n    // Emit event\n    const event = this.createEvent(ExplorationEvents.SYSTEM_CREATED, {\n      system: newSystem,\n    });\n    this.publishEvent(event);\n\n    return newSystem;\n  }\n\n  /**\n   * Update a star system\n   */",
      "tokens": 0,
      "firstFile": {
        "name": "src/managers/exploration/ExplorationManagerImpl.ts",
        "start": 221,
        "end": 248,
        "startLoc": {
          "line": 221,
          "column": 2,
          "position": 1358
        },
        "endLoc": {
          "line": 248,
          "column": 6,
          "position": 1567
        }
      },
      "secondFile": {
        "name": "src/managers/exploration/ExplorationManagerImpl.ts",
        "start": 175,
        "end": 202,
        "startLoc": {
          "line": 175,
          "column": 7,
          "position": 1031
        },
        "endLoc": {
          "line": 202,
          "column": 6,
          "position": 1240
        }
      }
    },
    {
      "format": "typescript",
      "lines": 19,
      "fragment": "}\n\n// Define interfaces for the types used\nexport interface StarSystem {\n  id: string;\n  name: string;\n  type?: string;\n  resources?: ResourceType[];\n  status: 'unmapped' | 'mapped' | 'scanning' | 'analyzed';\n  assignedShips: string[];\n  position: {\n    x: number;\n    y: number;\n  };\n  lastScanned?: number;\n  discoveredAt?: number;\n}\n\nexport interface Sector",
      "tokens": 0,
      "firstFile": {
        "name": "src/managers/exploration/ExplorationManager.ts",
        "start": 75,
        "end": 93,
        "startLoc": {
          "line": 75,
          "column": 1,
          "position": 512
        },
        "endLoc": {
          "line": 93,
          "column": 7,
          "position": 632
        }
      },
      "secondFile": {
        "name": "src/managers/exploration/ExplorationManagerImpl.ts",
        "start": 32,
        "end": 50,
        "startLoc": {
          "line": 32,
          "column": 1,
          "position": 187
        },
        "endLoc": {
          "line": 50,
          "column": 21,
          "position": 307
        }
      }
    },
    {
      "format": "typescript",
      "lines": 21,
      "fragment": "interface ParticleSystemConfig {\n  maxParticles: number;\n  spawnRate: number;\n  position: Position;\n  spread: number;\n  initialVelocity: {\n    min: Position;\n    max: Position;\n  };\n  acceleration: Position;\n  size: {\n    min: number;\n    max: number;\n  };\n  life: {\n    min: number;\n    max: number;\n  };\n  color: string | string[];\n  blendMode?: 'normal' | 'additive';\n  quality",
      "tokens": 0,
      "firstFile": {
        "name": "src/managers/effects/ParticleSystemManager.ts",
        "start": 29,
        "end": 49,
        "startLoc": {
          "line": 29,
          "column": 2,
          "position": 171
        },
        "endLoc": {
          "line": 49,
          "column": 8,
          "position": 310
        }
      },
      "secondFile": {
        "name": "src/managers/game/ParticleSystemManager.ts",
        "start": 120,
        "end": 140,
        "startLoc": {
          "line": 120,
          "column": 1,
          "position": 950
        },
        "endLoc": {
          "line": 140,
          "column": 2,
          "position": 1088
        }
      }
    },
    {
      "format": "typescript",
      "lines": 16,
      "fragment": ",\n      active: false,\n      position: { x: 0, y: 0 },\n      velocity: { x: 0, y: 0 },\n      acceleration: { x: 0, y: 0 },\n      size: 1,\n      color: '#ffffff',\n      opacity: 1,\n      life: 1,\n      maxLife: 1,\n      reset(): void {\n        this.active = false;\n        this.position = { x: 0, y: 0 };\n        this.velocity = { x: 0, y: 0 };\n        this.acceleration = { x: 0, y: 0 };\n        this.opacity",
      "tokens": 0,
      "firstFile": {
        "name": "src/managers/effects/ParticleSystemManager.ts",
        "start": 120,
        "end": 135,
        "startLoc": {
          "line": 120,
          "column": 2,
          "position": 1000
        },
        "endLoc": {
          "line": 135,
          "column": 8,
          "position": 1196
        }
      },
      "secondFile": {
        "name": "src/managers/game/ParticleSystemManager.ts",
        "start": 41,
        "end": 56,
        "startLoc": {
          "line": 41,
          "column": 2,
          "position": 313
        },
        "endLoc": {
          "line": 56,
          "column": 5,
          "position": 509
        }
      }
    },
    {
      "format": "typescript",
      "lines": 17,
      "fragment": "};\n    particle.velocity = {\n      x:\n        this.config.initialVelocity.min.x +\n        Math.random() * (this.config.initialVelocity.max.x - this.config.initialVelocity.min.x),\n      y:\n        this.config.initialVelocity.min.y +\n        Math.random() * (this.config.initialVelocity.max.y - this.config.initialVelocity.min.y),\n    };\n    particle.acceleration = { ...this.config.acceleration };\n    particle.size =\n      this.config.size.min + Math.random() * (this.config.size.max - this.config.size.min);\n    particle.life =\n      this.config.life.min + Math.random() * (this.config.life.max - this.config.life.min);\n    particle.maxLife = particle.life;\n\n    this",
      "tokens": 0,
      "firstFile": {
        "name": "src/managers/effects/ParticleSystemManager.ts",
        "start": 292,
        "end": 308,
        "startLoc": {
          "line": 292,
          "column": 2,
          "position": 2399
        },
        "endLoc": {
          "line": 308,
          "column": 5,
          "position": 2644
        }
      },
      "secondFile": {
        "name": "src/managers/game/ParticleSystemManager.ts",
        "start": 176,
        "end": 195,
        "startLoc": {
          "line": 176,
          "column": 5,
          "position": 1388
        },
        "endLoc": {
          "line": 195,
          "column": 3,
          "position": 1636
        }
      }
    },
    {
      "format": "typescript",
      "lines": 13,
      "fragment": "readyWeapon.state.status = 'cooling';\n        readyWeapon.state.currentStats.cooldown = Date.now();\n        ship.energy -=\n          readyWeapon.config.baseStats.energyCost * (ship.techBonuses?.energyEfficiency || 1);\n\n        // Update combat stats\n        ship.combatStats.damageDealt +=\n          readyWeapon.config.baseStats.damage * (ship.techBonuses?.weaponEfficiency || 1);\n      }\n    }\n  }\n\n  private",
      "tokens": 0,
      "firstFile": {
        "name": "src/managers/combat/WarShipManagerImpl.ts",
        "start": 317,
        "end": 329,
        "startLoc": {
          "line": 317,
          "column": 9,
          "position": 2973
        },
        "endLoc": {
          "line": 329,
          "column": 8,
          "position": 3083
        }
      },
      "secondFile": {
        "name": "src/managers/combat/WarShipManagerImpl.ts",
        "start": 202,
        "end": 214,
        "startLoc": {
          "line": 202,
          "column": 13,
          "position": 1823
        },
        "endLoc": {
          "line": 214,
          "column": 22,
          "position": 1933
        }
      }
    },
    {
      "format": "typescript",
      "lines": 14,
      "fragment": "for (const object of this.detectables.values()) {\n          // Skip objects of the same faction (assumed to share IFF)\n          if (object.faction === detector.faction) {\n            continue;\n          }\n\n          // Skip inactive objects\n          if (!object.isActive) {\n            continue;\n          }\n\n          const distance = getDistance(detector.position, object.position);\n\n          // Apply scan boost",
      "tokens": 0,
      "firstFile": {
        "name": "src/managers/combat/ObjectDetectionSystem.ts",
        "start": 343,
        "end": 356,
        "startLoc": {
          "line": 343,
          "column": 9,
          "position": 2458
        },
        "endLoc": {
          "line": 356,
          "column": 20,
          "position": 2551
        }
      },
      "secondFile": {
        "name": "src/managers/combat/ObjectDetectionSystem.ts",
        "start": 243,
        "end": 256,
        "startLoc": {
          "line": 243,
          "column": 5,
          "position": 1725
        },
        "endLoc": {
          "line": 256,
          "column": 35,
          "position": 1818
        }
      }
    },
    {
      "format": "typescript",
      "lines": 20,
      "fragment": "}\n  ): number {\n    const deltaX = target.x - source.x;\n    const deltaY = target.y - source.y;\n\n    // Calculate angle in radians\n    const angleRad = Math.atan2(deltaY, deltaX);\n\n    // Convert to degrees and ensure 0-359 range\n    let angleDeg = ((angleRad * 180) / Math.PI) % 360;\n    if (angleDeg < 0) {\n      angleDeg += 360;\n    }\n\n    return angleDeg;\n  }\n\n  /**\n   * Register event listener\n   */",
      "tokens": 0,
      "firstFile": {
        "name": "src/managers/combat/ObjectDetectionSystem.ts",
        "start": 471,
        "end": 490,
        "startLoc": {
          "line": 471,
          "column": 2,
          "position": 3444
        },
        "endLoc": {
          "line": 490,
          "column": 6,
          "position": 3580
        }
      },
      "secondFile": {
        "name": "src/managers/combat/ThreatAssessmentManager.ts",
        "start": 489,
        "end": 509,
        "startLoc": {
          "line": 489,
          "column": 2,
          "position": 3399
        },
        "endLoc": {
          "line": 509,
          "column": 6,
          "position": 3535
        }
      }
    },
    {
      "format": "typescript",
      "lines": 14,
      "fragment": "(([ resource, amount ]) => {\n      // Convert string resource to ResourceType enum\n      let resourceType: ResourceType;\n      switch (resource) {\n        case ResourceType.MINERALS:\n          resourceType = ResourceType.MINERALS;\n          break;\n        case ResourceType.ENERGY:\n          resourceType = ResourceType.ENERGY;\n          break;\n        default:\n          resourceType = ResourceType.MINERALS; // Default case\n      }\n      return",
      "tokens": 0,
      "firstFile": {
        "name": "src/managers/colony/ColonyManagerImpl.ts",
        "start": 382,
        "end": 395,
        "startLoc": {
          "line": 382,
          "column": 6,
          "position": 2951
        },
        "endLoc": {
          "line": 395,
          "column": 7,
          "position": 3052
        }
      },
      "secondFile": {
        "name": "src/managers/colony/ColonyManagerImpl.ts",
        "start": 333,
        "end": 346,
        "startLoc": {
          "line": 333,
          "column": 8,
          "position": 2547
        },
        "endLoc": {
          "line": 346,
          "column": 16,
          "position": 2648
        }
      }
    },
    {
      "format": "typescript",
      "lines": 7,
      "fragment": "const { target, value } = condition;\n            if (target && value !== undefined) {\n              const resourceAmount = this.getResourceAmount(target as ResourceType);\n              // Extract numeric value for comparison\n              const threshold =\n                typeof value === 'number' ? value : (value as ResourceConditionValue).amount;\n              if (resourceAmount <",
      "tokens": 0,
      "firstFile": {
        "name": "src/managers/automation/GlobalAutomationManager.ts",
        "start": 374,
        "end": 380,
        "startLoc": {
          "line": 374,
          "column": 13,
          "position": 2521
        },
        "endLoc": {
          "line": 380,
          "column": 2,
          "position": 2615
        }
      },
      "secondFile": {
        "name": "src/managers/automation/GlobalAutomationManager.ts",
        "start": 361,
        "end": 367,
        "startLoc": {
          "line": 361,
          "column": 13,
          "position": 2379
        },
        "endLoc": {
          "line": 367,
          "column": 2,
          "position": 2473
        }
      }
    },
    {
      "format": "typescript",
      "lines": 11,
      "fragment": ");\n        if (!entry || !entry.initialized) {\n          continue;\n        }\n\n        try {\n          await entry.instance.dispose();\n          entry.initialized = false;\n        } catch (error) {\n          errorLoggingService.logError(error as Error, ErrorType.INITIALIZATION, undefined, {\n            service",
      "tokens": 0,
      "firstFile": {
        "name": "src/lib/registry/ServiceRegistry.ts",
        "start": 216,
        "end": 226,
        "startLoc": {
          "line": 216,
          "column": 12,
          "position": 1488
        },
        "endLoc": {
          "line": 226,
          "column": 8,
          "position": 1577
        }
      },
      "secondFile": {
        "name": "src/lib/registry/ServiceRegistry.ts",
        "start": 198,
        "end": 208,
        "startLoc": {
          "line": 198,
          "column": 12,
          "position": 1318
        },
        "endLoc": {
          "line": 208,
          "column": 8,
          "position": 1407
        }
      }
    },
    {
      "format": "typescript",
      "lines": 13,
      "fragment": "interface RenderItem {\n  id: string;\n  position: Position;\n  size: { width: number; height: number };\n  rotation: number;\n  opacity: number;\n  color: string;\n  texture?: string;\n  shader?: string;\n  uniforms?: Record<string, unknown>;\n}\n\ninterface",
      "tokens": 0,
      "firstFile": {
        "name": "src/lib/optimization/RenderBatcher.d.ts",
        "start": 11,
        "end": 23,
        "startLoc": {
          "line": 11,
          "column": 1,
          "position": 66
        },
        "endLoc": {
          "line": 23,
          "column": 10,
          "position": 160
        }
      },
      "secondFile": {
        "name": "src/lib/optimization/RenderBatcher.ts",
        "start": 11,
        "end": 23,
        "startLoc": {
          "line": 11,
          "column": 2,
          "position": 70
        },
        "endLoc": {
          "line": 23,
          "column": 7,
          "position": 164
        }
      }
    },
    {
      "format": "typescript",
      "lines": 6,
      "fragment": "// Collect dependencies\n    const deps: Record<string, BaseManager> = {};\n    for (const depName of config.dependencies ?? []) {\n      const dep = this.services.get(depName);\n      if (!dep) {\n        throw new Error(`Dependency '${depName}' not found for service '${name",
      "tokens": 0,
      "firstFile": {
        "name": "src/lib/managers/ServiceRegistry.ts",
        "start": 224,
        "end": 229,
        "startLoc": {
          "line": 224,
          "column": 5,
          "position": 1428
        },
        "endLoc": {
          "line": 229,
          "column": 5,
          "position": 1513
        }
      },
      "secondFile": {
        "name": "src/lib/managers/ServiceRegistry.ts",
        "start": 181,
        "end": 186,
        "startLoc": {
          "line": 181,
          "column": 9,
          "position": 1069
        },
        "endLoc": {
          "line": 186,
          "column": 12,
          "position": 1154
        }
      }
    },
    {
      "format": "typescript",
      "lines": 13,
      "fragment": "// Get handlers for this event type\n    const handlersMap = this.handlers.get(event?.type);\n    if (!handlersMap || handlersMap.size === 0) {\n      return;\n    }\n\n    try {\n      // Convert to array and sort by priority\n      const handlers = Array.from(handlersMap.values()).sort(\n        (a, b) => (b.options?.priority ?? 0) - (a.options?.priority ?? 0)\n      );\n\n      // Call each handler",
      "tokens": 0,
      "firstFile": {
        "name": "src/lib/events/UnifiedEventSystem.ts",
        "start": 248,
        "end": 260,
        "startLoc": {
          "line": 248,
          "column": 5,
          "position": 1735
        },
        "endLoc": {
          "line": 260,
          "column": 21,
          "position": 1860
        }
      },
      "secondFile": {
        "name": "src/lib/events/UnifiedEventSystem.ts",
        "start": 183,
        "end": 195,
        "startLoc": {
          "line": 183,
          "column": 5,
          "position": 1167
        },
        "endLoc": {
          "line": 195,
          "column": 41,
          "position": 1292
        }
      }
    },
    {
      "format": "typescript",
      "lines": 9,
      "fragment": "} catch (error) {\n      if (options?.errorMode === 'throw') {\n        throw error;\n      } else {\n        errorLoggingService.logError(\n          error instanceof Error ? error : new Error(String(error)),\n          ErrorType.RUNTIME,\n          undefined,\n          { context: 'EventSystem.publishSync'",
      "tokens": 0,
      "firstFile": {
        "name": "src/lib/events/UnifiedEventSystem.ts",
        "start": 285,
        "end": 293,
        "startLoc": {
          "line": 285,
          "column": 5,
          "position": 2059
        },
        "endLoc": {
          "line": 293,
          "column": 26,
          "position": 2144
        }
      },
      "secondFile": {
        "name": "src/lib/events/UnifiedEventSystem.ts",
        "start": 271,
        "end": 279,
        "startLoc": {
          "line": 271,
          "column": 11,
          "position": 1944
        },
        "endLoc": {
          "line": 279,
          "column": 34,
          "position": 2029
        }
      }
    },
    {
      "format": "typescript",
      "lines": 12,
      "fragment": ") {\n        for (const [id, subscription] of handlersMap.entries()) {\n          if (subscription.scope === scope) {\n            handlersMap.delete(id);\n          }\n        }\n        if (handlersMap.size === 0) {\n          this.handlers.delete(eventType);\n        }\n      }\n    } else {\n      // Clear all subscriptions",
      "tokens": 0,
      "firstFile": {
        "name": "src/lib/events/UnifiedEventSystem.ts",
        "start": 369,
        "end": 380,
        "startLoc": {
          "line": 369,
          "column": 2,
          "position": 2655
        },
        "endLoc": {
          "line": 380,
          "column": 27,
          "position": 2753
        }
      },
      "secondFile": {
        "name": "src/lib/events/UnifiedEventSystem.ts",
        "start": 353,
        "end": 364,
        "startLoc": {
          "line": 353,
          "column": 12,
          "position": 2503
        },
        "endLoc": {
          "line": 364,
          "column": 53,
          "position": 2601
        }
      }
    },
    {
      "format": "typescript",
      "lines": 7,
      "fragment": "as EventType,\n      timestamp: Date.now(),\n      moduleId: (data as { moduleId?: string })?.moduleId || 'unknown',\n      moduleType: (data as { moduleType?: ModuleType })?.moduleType || 'radar',\n      data: data as Record<string, unknown>,\n    };\n    this",
      "tokens": 0,
      "firstFile": {
        "name": "src/lib/events/BaseEventEmitter.ts",
        "start": 85,
        "end": 91,
        "startLoc": {
          "line": 85,
          "column": 2,
          "position": 475
        },
        "endLoc": {
          "line": 91,
          "column": 5,
          "position": 569
        }
      },
      "secondFile": {
        "name": "src/lib/events/ModuleEventBus.ts",
        "start": 66,
        "end": 72,
        "startLoc": {
          "line": 66,
          "column": 2,
          "position": 451
        },
        "endLoc": {
          "line": 72,
          "column": 6,
          "position": 545
        }
      }
    },
    {
      "format": "typescript",
      "lines": 14,
      "fragment": "{\n      // Mark as mounted\n      isMounted.current = true;\n\n      // Call onMount callback if provided\n      if (options?.onMount) {\n        try {\n          options?.onMount();\n        } catch (error) {\n          errorLoggingService.logError(\n            error instanceof Error ? error : new Error('Error in onMount callback'),\n            ErrorType.RUNTIME,\n            ErrorSeverity.MEDIUM,\n            { componentName: 'useDynamicComponentLifecycle'",
      "tokens": 0,
      "firstFile": {
        "name": "src/hooks/ui/useComponentLifecycle.ts",
        "start": 215,
        "end": 228,
        "startLoc": {
          "line": 215,
          "column": 2,
          "position": 1029
        },
        "endLoc": {
          "line": 228,
          "column": 31,
          "position": 1130
        }
      },
      "secondFile": {
        "name": "src/hooks/ui/useComponentLifecycle.ts",
        "start": 73,
        "end": 86,
        "startLoc": {
          "line": 73,
          "column": 2,
          "position": 209
        },
        "endLoc": {
          "line": 86,
          "column": 24,
          "position": 310
        }
      }
    },
    {
      "format": "typescript",
      "lines": 20,
      "fragment": "}\n    }\n\n    // Set up event subscriptions\n    const unsubscribers: Array<() => void> = [];\n\n    if (options?.eventSubscriptions) {\n      options?.eventSubscriptions.forEach(subscription => {\n        // Subscribe to the event\n        const unsubscribe = moduleEventBus.subscribe(subscription.eventType, event => {\n          // Only call handler if component is still mounted\n          if (isMounted.current) {\n            try {\n              subscription.handler(event);\n            } catch (error) {\n              errorLoggingService.logError(\n                error instanceof Error ? error : new Error(`Error handling event ${subscription.eventType}`),\n                ErrorType.EVENT_HANDLING,\n                ErrorSeverity.MEDIUM,\n                { componentName: 'useDynamicComponentLifecycle'",
      "tokens": 0,
      "firstFile": {
        "name": "src/hooks/ui/useComponentLifecycle.ts",
        "start": 231,
        "end": 250,
        "startLoc": {
          "line": 231,
          "column": 7,
          "position": 1148
        },
        "endLoc": {
          "line": 250,
          "column": 31,
          "position": 1321
        }
      },
      "secondFile": {
        "name": "src/hooks/ui/useComponentLifecycle.ts",
        "start": 88,
        "end": 107,
        "startLoc": {
          "line": 88,
          "column": 7,
          "position": 325
        },
        "endLoc": {
          "line": 107,
          "column": 24,
          "position": 498
        }
      }
    },
    {
      "format": "typescript",
      "lines": 14,
      "fragment": "{\n        // Mark as unmounted\n        isMounted.current = false;\n\n        // Call onUnmount callback if provided\n        if (options?.onUnmount) {\n          try {\n            options?.onUnmount();\n          } catch (error) {\n            errorLoggingService.logError(\n              error instanceof Error ? error : new Error('Error in onUnmount callback'),\n              ErrorType.RUNTIME,\n              ErrorSeverity.MEDIUM,\n              { componentName: 'useDynamicComponentLifecycle'",
      "tokens": 0,
      "firstFile": {
        "name": "src/hooks/ui/useComponentLifecycle.ts",
        "start": 264,
        "end": 277,
        "startLoc": {
          "line": 264,
          "column": 2,
          "position": 1403
        },
        "endLoc": {
          "line": 277,
          "column": 31,
          "position": 1504
        }
      },
      "secondFile": {
        "name": "src/hooks/ui/useComponentLifecycle.ts",
        "start": 119,
        "end": 132,
        "startLoc": {
          "line": 119,
          "column": 2,
          "position": 564
        },
        "endLoc": {
          "line": 132,
          "column": 24,
          "position": 665
        }
      }
    },
    {
      "format": "typescript",
      "lines": 17,
      "fragment": "= useCallback(\n    (type: ResourceType, amount: number) => {\n      if (amount <= 0) {\n        return;\n      }\n\n      setState(prev => {\n        const resources = new Map(prev.resources);\n        const current = resources.get(type) || {\n          current: 0,\n          min: 0,\n          max: 100,\n          production: 0,\n          consumption: 0,\n        };\n\n        const newValue = Math.max",
      "tokens": 0,
      "firstFile": {
        "name": "src/hooks/resources/useResourceTracking.ts",
        "start": 401,
        "end": 417,
        "startLoc": {
          "line": 401,
          "column": 2,
          "position": 3213
        },
        "endLoc": {
          "line": 417,
          "column": 4,
          "position": 3350
        }
      },
      "secondFile": {
        "name": "src/hooks/resources/useResourceTracking.ts",
        "start": 355,
        "end": 371,
        "startLoc": {
          "line": 355,
          "column": 2,
          "position": 2890
        },
        "endLoc": {
          "line": 371,
          "column": 4,
          "position": 3027
        }
      }
    },
    {
      "format": "typescript",
      "lines": 19,
      "fragment": ",\n          amount,\n          timestamp: Date.now(),\n        };\n\n        const history = [transfer, ...prev.history].slice(0, historyLimit);\n\n        return {\n          ...prev,\n          resources,\n          history,\n          lastUpdated: Date.now(),\n        };\n      });\n    },\n    [historyLimit]\n  );\n\n  // Transfer resource",
      "tokens": 0,
      "firstFile": {
        "name": "src/hooks/resources/useResourceTracking.ts",
        "start": 428,
        "end": 446,
        "startLoc": {
          "line": 428,
          "column": 14,
          "position": 3427
        },
        "endLoc": {
          "line": 446,
          "column": 21,
          "position": 3529
        }
      },
      "secondFile": {
        "name": "src/hooks/resources/useResourceTracking.ts",
        "start": 382,
        "end": 400,
        "startLoc": {
          "line": 382,
          "column": 10,
          "position": 3104
        },
        "endLoc": {
          "line": 400,
          "column": 22,
          "position": 3206
        }
      }
    },
    {
      "format": "typescript",
      "lines": 10,
      "fragment": "= useCallback(\n    (percentage: number) => {\n      const result: ResourceType[] = [];\n\n      // Convert Map entries to array to avoid MapIterator error\n      const resourceEntries = Array.from(state.resources.entries());\n      for (const [type, resource] of resourceEntries) {\n        const resourcePercentage = (resource.current / resource.max) * 100;\n\n        if (resourcePercentage <=",
      "tokens": 0,
      "firstFile": {
        "name": "src/hooks/resources/useResourceTracking.ts",
        "start": 604,
        "end": 613,
        "startLoc": {
          "line": 604,
          "column": 2,
          "position": 4776
        },
        "endLoc": {
          "line": 613,
          "column": 3,
          "position": 4885
        }
      },
      "secondFile": {
        "name": "src/hooks/resources/useResourceTracking.ts",
        "start": 584,
        "end": 593,
        "startLoc": {
          "line": 584,
          "column": 2,
          "position": 4613
        },
        "endLoc": {
          "line": 593,
          "column": 3,
          "position": 4722
        }
      }
    },
    {
      "format": "tsx",
      "lines": 6,
      "fragment": "setResourceStates(prev => {\n      const newStates = new Map(prev);\n      Object.entries(resources).forEach(([type, amount]) => {\n        const enumType = ensureEnumResourceType(type);\n        const currentState = newStates.get(enumType) || { ...defaultResourceState };\n        newStates",
      "tokens": 0,
      "firstFile": {
        "name": "src/hooks/resources/useResourceManagement.tsx",
        "start": 193,
        "end": 198,
        "startLoc": {
          "line": 193,
          "column": 5,
          "position": 1648
        },
        "endLoc": {
          "line": 198,
          "column": 10,
          "position": 1732
        }
      },
      "secondFile": {
        "name": "src/hooks/resources/useResourceManagement.tsx",
        "start": 161,
        "end": 166,
        "startLoc": {
          "line": 161,
          "column": 5,
          "position": 1322
        },
        "endLoc": {
          "line": 166,
          "column": 6,
          "position": 1406
        }
      }
    },
    {
      "format": "typescript",
      "lines": 12,
      "fragment": "try {\n        // Get all modules\n        const modules = moduleManager.getActiveModules();\n\n        // Filter modules with available upgrades\n        const availableUpgrades = modules.filter(module => {\n          const status = moduleUpgradeManager.getUpgradeStatus(module.id);\n          return status?.upgradeAvailable && status?.requirementsMet;\n        });\n\n        setModuleIds(availableUpgrades.map(module => module.id));\n      }",
      "tokens": 0,
      "firstFile": {
        "name": "src/hooks/modules/useModuleUpgrade.ts",
        "start": 198,
        "end": 209,
        "startLoc": {
          "line": 198,
          "column": 7,
          "position": 1542
        },
        "endLoc": {
          "line": 209,
          "column": 2,
          "position": 1642
        }
      },
      "secondFile": {
        "name": "src/hooks/modules/useModuleUpgrade.ts",
        "start": 177,
        "end": 188,
        "startLoc": {
          "line": 177,
          "column": 5,
          "position": 1366
        },
        "endLoc": {
          "line": 188,
          "column": 13,
          "position": 1466
        }
      }
    },
    {
      "format": "typescript",
      "lines": 10,
      "fragment": "if (hours > 0) {\n      return `${hours}h ${minutes % 60}m`;\n    }\n    if (minutes > 0) {\n      return `${minutes}m ${seconds % 60}s`;\n    }\n    return `${seconds}s`;\n  }, []);\n\n  return",
      "tokens": 0,
      "firstFile": {
        "name": "src/hooks/modules/useModuleStatus.ts",
        "start": 210,
        "end": 219,
        "startLoc": {
          "line": 210,
          "column": 5,
          "position": 1731
        },
        "endLoc": {
          "line": 219,
          "column": 7,
          "position": 1817
        }
      },
      "secondFile": {
        "name": "src/hooks/modules/useModuleUpgrade.ts",
        "start": 118,
        "end": 129,
        "startLoc": {
          "line": 118,
          "column": 5,
          "position": 907
        },
        "endLoc": {
          "line": 129,
          "column": 26,
          "position": 995
        }
      }
    },
    {
      "format": "typescript",
      "lines": 16,
      "fragment": "handler: (event: ModuleManagerEvent) => void, // Revert handler type to ModuleManagerEvent\n  options: { enabled?: boolean; deps?: React.DependencyList; } = {}\n): void {\n  const { enabled = true, deps = [] } = options;\n  const handlerRef = useRef(handler);\n\n  useEffect(() => {\n    handlerRef.current = handler;\n  }, [ handler, ...deps ]);\n\n  useEffect(() => {\n    if (!enabled) {\n      return;\n    }\n\n    const",
      "tokens": 0,
      "firstFile": {
        "name": "src/hooks/modules/useModuleEvents.ts",
        "start": 104,
        "end": 119,
        "startLoc": {
          "line": 104,
          "column": 3,
          "position": 733
        },
        "endLoc": {
          "line": 119,
          "column": 6,
          "position": 892
        }
      },
      "secondFile": {
        "name": "src/hooks/modules/useModuleEvents.ts",
        "start": 67,
        "end": 82,
        "startLoc": {
          "line": 67,
          "column": 3,
          "position": 440
        },
        "endLoc": {
          "line": 82,
          "column": 39,
          "position": 599
        }
      }
    },
    {
      "format": "typescript",
      "lines": 10,
      "fragment": "|| null);\n            setError(null);\n          } catch (e) {\n            const error = e instanceof Error ? e : new Error(String(e));\n            setError(error);\n\n            // Log error\n            errorLoggingService.logError(error, ErrorType.UI, ErrorSeverity.MEDIUM, {\n              component: 'useResource',\n              resourceType,",
      "tokens": 0,
      "firstFile": {
        "name": "src/hooks/integration/useResourceSystemIntegration.ts",
        "start": 78,
        "end": 87,
        "startLoc": {
          "line": 78,
          "column": 2,
          "position": 582
        },
        "endLoc": {
          "line": 87,
          "column": 2,
          "position": 676
        }
      },
      "secondFile": {
        "name": "src/hooks/integration/useResourceSystemIntegration.ts",
        "start": 47,
        "end": 57,
        "startLoc": {
          "line": 47,
          "column": 2,
          "position": 350
        },
        "endLoc": {
          "line": 57,
          "column": 2,
          "position": 446
        }
      }
    },
    {
      "format": "typescript",
      "lines": 8,
      "fragment": "setError(null);\n      } catch (e) {\n        const error = e instanceof Error ? e : new Error(String(e));\n        setError(error);\n\n        // Log error\n        errorLoggingService.logError(error, ErrorType.UI, ErrorSeverity.MEDIUM, {\n          component: 'useResources'",
      "tokens": 0,
      "firstFile": {
        "name": "src/hooks/integration/useResourceSystemIntegration.ts",
        "start": 164,
        "end": 171,
        "startLoc": {
          "line": 164,
          "column": 9,
          "position": 1239
        },
        "endLoc": {
          "line": 171,
          "column": 15,
          "position": 1321
        }
      },
      "secondFile": {
        "name": "src/hooks/integration/useResourceSystemIntegration.ts",
        "start": 48,
        "end": 55,
        "startLoc": {
          "line": 48,
          "column": 9,
          "position": 357
        },
        "endLoc": {
          "line": 55,
          "column": 14,
          "position": 439
        }
      }
    },
    {
      "format": "typescript",
      "lines": 11,
      "fragment": "}\n\n              setError(null);\n            } catch (e) {\n              const error = e instanceof Error ? e : new Error(String(e));\n              setError(error);\n\n              // Log error\n              errorLoggingService.logError(error, ErrorType.UI, ErrorSeverity.MEDIUM, {\n                component: 'useResources',\n                resourceType",
      "tokens": 0,
      "firstFile": {
        "name": "src/hooks/integration/useResourceSystemIntegration.ts",
        "start": 201,
        "end": 211,
        "startLoc": {
          "line": 201,
          "column": 15,
          "position": 1563
        },
        "endLoc": {
          "line": 211,
          "column": 13,
          "position": 1653
        }
      },
      "secondFile": {
        "name": "src/hooks/integration/useResourceSystemIntegration.ts",
        "start": 162,
        "end": 172,
        "startLoc": {
          "line": 162,
          "column": 9,
          "position": 1235
        },
        "endLoc": {
          "line": 172,
          "column": 14,
          "position": 1325
        }
      }
    },
    {
      "format": "typescript",
      "lines": 13,
      "fragment": "amount;\n        resourceManager.setResourceAmount(resourceType, newAmount);\n        return true;\n      }\n      return false;\n    } catch (e) {\n      const error = e instanceof Error ? e : new Error(String(e));\n      setError(error);\n\n      // Log error\n      errorLoggingService.logError(error, ErrorType.UI, ErrorSeverity.MEDIUM, {\n        component: 'useResourceActions',\n        method: 'consumeResource'",
      "tokens": 0,
      "firstFile": {
        "name": "src/hooks/integration/useResourceSystemIntegration.ts",
        "start": 281,
        "end": 293,
        "startLoc": {
          "line": 281,
          "column": 2,
          "position": 2191
        },
        "endLoc": {
          "line": 293,
          "column": 18,
          "position": 2304
        }
      },
      "secondFile": {
        "name": "src/hooks/integration/useResourceSystemIntegration.ts",
        "start": 250,
        "end": 262,
        "startLoc": {
          "line": 250,
          "column": 2,
          "position": 1921
        },
        "endLoc": {
          "line": 262,
          "column": 14,
          "position": 2034
        }
      }
    },
    {
      "format": "typescript",
      "lines": 9,
      "fragment": ";\n    } catch (e) {\n      const error = e instanceof Error ? e : new Error(String(e));\n      setError(error);\n\n      // Log error\n      errorLoggingService.logError(error, ErrorType.UI, ErrorSeverity.MEDIUM, {\n        component: 'useResourceActions',\n        method: 'setResource'",
      "tokens": 0,
      "firstFile": {
        "name": "src/hooks/integration/useResourceSystemIntegration.ts",
        "start": 307,
        "end": 315,
        "startLoc": {
          "line": 307,
          "column": 5,
          "position": 2404
        },
        "endLoc": {
          "line": 315,
          "column": 14,
          "position": 2489
        }
      },
      "secondFile": {
        "name": "src/hooks/integration/useResourceSystemIntegration.ts",
        "start": 254,
        "end": 262,
        "startLoc": {
          "line": 254,
          "column": 6,
          "position": 1949
        },
        "endLoc": {
          "line": 262,
          "column": 14,
          "position": 2034
        }
      }
    },
    {
      "format": "typescript",
      "lines": 9,
      "fragment": ");\n      return true;\n    } catch (e) {\n      const error = e instanceof Error ? e : new Error(String(e));\n      setError(error);\n      \n      // Log error\n      errorLoggingService.logError(error, ErrorType.RUNTIME, ErrorSeverity.MEDIUM, {\n        component: 'useModule.deactivateModule'",
      "tokens": 0,
      "firstFile": {
        "name": "src/hooks/integration/useModuleSystemIntegration.ts",
        "start": 99,
        "end": 107,
        "startLoc": {
          "line": 99,
          "column": 6,
          "position": 747
        },
        "endLoc": {
          "line": 107,
          "column": 29,
          "position": 833
        }
      },
      "secondFile": {
        "name": "src/hooks/integration/useModuleSystemIntegration.ts",
        "start": 79,
        "end": 87,
        "startLoc": {
          "line": 79,
          "column": 5,
          "position": 591
        },
        "endLoc": {
          "line": 87,
          "column": 27,
          "position": 677
        }
      }
    },
    {
      "format": "typescript",
      "lines": 9,
      "fragment": ");\n      return true;\n    } catch (e) {\n      const error = e instanceof Error ? e : new Error(String(e));\n      setError(error);\n      \n      // Log error\n      errorLoggingService.logError(error, ErrorType.RUNTIME, ErrorSeverity.MEDIUM, {\n        component: 'useModule.upgradeModule'",
      "tokens": 0,
      "firstFile": {
        "name": "src/hooks/integration/useModuleSystemIntegration.ts",
        "start": 118,
        "end": 126,
        "startLoc": {
          "line": 118,
          "column": 9,
          "position": 897
        },
        "endLoc": {
          "line": 126,
          "column": 26,
          "position": 983
        }
      },
      "secondFile": {
        "name": "src/hooks/integration/useModuleSystemIntegration.ts",
        "start": 79,
        "end": 87,
        "startLoc": {
          "line": 79,
          "column": 5,
          "position": 591
        },
        "endLoc": {
          "line": 87,
          "column": 27,
          "position": 677
        }
      }
    },
    {
      "format": "typescript",
      "lines": 9,
      "fragment": ");\n        setError(null);\n      } catch (e) {\n        const error = e instanceof Error ? e : new Error(String(e));\n        setError(error);\n        \n        // Log error\n        errorLoggingService.logError(error, ErrorType.RUNTIME, ErrorSeverity.MEDIUM, {\n          component: 'useModules'",
      "tokens": 0,
      "firstFile": {
        "name": "src/hooks/integration/useModuleSystemIntegration.ts",
        "start": 172,
        "end": 180,
        "startLoc": {
          "line": 172,
          "column": 2,
          "position": 1274
        },
        "endLoc": {
          "line": 180,
          "column": 13,
          "position": 1361
        }
      },
      "secondFile": {
        "name": "src/hooks/integration/useModuleSystemIntegration.ts",
        "start": 33,
        "end": 41,
        "startLoc": {
          "line": 33,
          "column": 5,
          "position": 262
        },
        "endLoc": {
          "line": 41,
          "column": 12,
          "position": 349
        }
      }
    },
    {
      "format": "typescript",
      "lines": 10,
      "fragment": ");\n      \n      return true;\n    } catch (e) {\n      const error = e instanceof Error ? e : new Error(String(e));\n      setError(error);\n      \n      // Log error\n      errorLoggingService.logError(error, ErrorType.RUNTIME, ErrorSeverity.MEDIUM, {\n        component: 'useModules.removeModule'",
      "tokens": 0,
      "firstFile": {
        "name": "src/hooks/integration/useModuleSystemIntegration.ts",
        "start": 259,
        "end": 268,
        "startLoc": {
          "line": 259,
          "column": 2,
          "position": 1992
        },
        "endLoc": {
          "line": 268,
          "column": 26,
          "position": 2080
        }
      },
      "secondFile": {
        "name": "src/hooks/integration/useModuleSystemIntegration.ts",
        "start": 79,
        "end": 87,
        "startLoc": {
          "line": 79,
          "column": 5,
          "position": 591
        },
        "endLoc": {
          "line": 87,
          "column": 27,
          "position": 677
        }
      }
    },
    {
      "format": "typescript",
      "lines": 13,
      "fragment": ",\n  handler: (event: BaseEvent) => void,\n  deps: unknown[] = []\n) {\n  // Use ref to store the handler to prevent unnecessary re-subscriptions\n  const handlerRef = useRef(handler);\n  \n  // Update handler ref when handler changes\n  useEffect(() => {\n    handlerRef.current = handler;\n  }, [handler]);\n  \n  // Set up subscriptions",
      "tokens": 0,
      "firstFile": {
        "name": "src/hooks/integration/useEventSystemIntegration.ts",
        "start": 51,
        "end": 63,
        "startLoc": {
          "line": 51,
          "column": 2,
          "position": 270
        },
        "endLoc": {
          "line": 63,
          "column": 24,
          "position": 359
        }
      },
      "secondFile": {
        "name": "src/hooks/integration/useEventSystemIntegration.ts",
        "start": 20,
        "end": 32,
        "startLoc": {
          "line": 20,
          "column": 10,
          "position": 87
        },
        "endLoc": {
          "line": 32,
          "column": 54,
          "position": 176
        }
      }
    },
    {
      "format": "typescript",
      "lines": 9,
      "fragment": "const avgThreat = threats.reduce(\n    (acc, threat) => ({\n      x: acc.x + threat.position.x / threats.length,\n      y: acc.y + threat.position.y / threats.length,\n    }),\n    { x: 0, y: 0 }\n  );\n\n  // Retreat in opposite direction",
      "tokens": 0,
      "firstFile": {
        "name": "src/hooks/factions/useEnemyAI.ts",
        "start": 211,
        "end": 219,
        "startLoc": {
          "line": 211,
          "column": 3,
          "position": 1841
        },
        "endLoc": {
          "line": 219,
          "column": 33,
          "position": 1938
        }
      },
      "secondFile": {
        "name": "src/hooks/factions/useFleetAI.ts",
        "start": 673,
        "end": 681,
        "startLoc": {
          "line": 673,
          "column": 3,
          "position": 6628
        },
        "endLoc": {
          "line": 681,
          "column": 6,
          "position": 6725
        }
      }
    },
    {
      "format": "typescript",
      "lines": 18,
      "fragment": ");\n\n  // Track whether we're subscribed and how munknown events we've received\n  const [subscribed, setSubscribed] = useState<boolean>(false);\n  const receivedCountRef = useRef<number>(0);\n\n  // Track the unsubscribe function\n  const unsubscribeRef = useRef<(() => void) | null>(null);\n\n  // Memoize the handler function to include filtering\n  const eventHandler = useCallback(\n    (event: T) => {\n      // Apply filter if provided\n      if (filter && !filter(event)) {\n        return;\n      }\n\n      // Update latest events if tracking",
      "tokens": 0,
      "firstFile": {
        "name": "src/hooks/events/useEventSubscription.ts",
        "start": 179,
        "end": 196,
        "startLoc": {
          "line": 179,
          "column": 3,
          "position": 987
        },
        "endLoc": {
          "line": 196,
          "column": 36,
          "position": 1117
        }
      },
      "secondFile": {
        "name": "src/hooks/events/useEventSubscription.ts",
        "start": 75,
        "end": 92,
        "startLoc": {
          "line": 75,
          "column": 5,
          "position": 330
        },
        "endLoc": {
          "line": 92,
          "column": 35,
          "position": 460
        }
      }
    },
    {
      "format": "typescript",
      "lines": 26,
      "fragment": "event: ModuleEvent | null;\n\n  /**\n   * Clear the current event\n   */\n  clearEvent: () => void;\n\n  /**\n   * Whether an event is available\n   */\n  hasEvent: boolean;\n\n  /**\n   * Event type of the current event\n   */\n  eventType: ModuleEventType | null;\n\n  /**\n   * Module ID of the current event\n   */\n  moduleId: string | null;\n} {\n  // State for the current event\n  const [event, setEvent] = useState<ModuleEvent | null>(null);\n\n  // Subscribe to throttled events",
      "tokens": 0,
      "firstFile": {
        "name": "src/hooks/events/useEventBatching.ts",
        "start": 220,
        "end": 245,
        "startLoc": {
          "line": 220,
          "column": 3,
          "position": 1162
        },
        "endLoc": {
          "line": 245,
          "column": 33,
          "position": 1263
        }
      },
      "secondFile": {
        "name": "src/hooks/events/useEventBatching.ts",
        "start": 144,
        "end": 169,
        "startLoc": {
          "line": 144,
          "column": 3,
          "position": 749
        },
        "endLoc": {
          "line": 169,
          "column": 33,
          "position": 850
        }
      }
    },
    {
      "format": "typescript",
      "lines": 20,
      "fragment": "]);\n\n  // Clear the current event\n  const clearEvent = () => {\n    setEvent(null);\n  };\n\n  // Derived values\n  const hasEvent = event !== null;\n  const eventType = event?.type || null;\n  const moduleId = event?.moduleId || null;\n\n  return {\n    event,\n    clearEvent,\n    hasEvent,\n    eventType,\n    moduleId,\n  };\n}",
      "tokens": 0,
      "firstFile": {
        "name": "src/hooks/events/useEventBatching.ts",
        "start": 265,
        "end": 284,
        "startLoc": {
          "line": 265,
          "column": 13,
          "position": 1412
        },
        "endLoc": {
          "line": 284,
          "column": 2,
          "position": 1527
        }
      },
      "secondFile": {
        "name": "src/hooks/events/useEventBatching.ts",
        "start": 189,
        "end": 208,
        "startLoc": {
          "line": 189,
          "column": 13,
          "position": 1007
        },
        "endLoc": {
          "line": 208,
          "column": 2,
          "position": 1122
        }
      }
    },
    {
      "format": "typescript",
      "lines": 20,
      "fragment": ") ?? []\n      ).map(unit => ({\n        ...unit,\n        velocity: { x: 0, y: 0 }, // Add default velocity for units\n        status: convertStatus(unit.status),\n        weapons: unit.weapons.map(weapon => ({\n          id: weapon.id,\n          type: weapon.type as WeaponCategory,\n          damage: weapon.damage,\n          range: weapon.range,\n          cooldown: weapon.cooldown,\n          status: weapon.status as WeaponStatus,\n        })),\n        stats: {\n          ...unit.stats,\n          armor: 0, // Add default armor value\n        },\n      }));\n\n      // Update formation based on combat situation",
      "tokens": 0,
      "firstFile": {
        "name": "src/hooks/combat/useCombatAI.ts",
        "start": 139,
        "end": 158,
        "startLoc": {
          "line": 139,
          "column": 7,
          "position": 1281
        },
        "endLoc": {
          "line": 158,
          "column": 46,
          "position": 1459
        }
      },
      "secondFile": {
        "name": "src/hooks/combat/useCombatAI.ts",
        "start": 117,
        "end": 136,
        "startLoc": {
          "line": 117,
          "column": 10,
          "position": 1052
        },
        "endLoc": {
          "line": 136,
          "column": 6,
          "position": 1230
        }
      }
    },
    {
      "format": "typescript",
      "lines": 14,
      "fragment": "status: convertStatus(unit.status),\n          weapons: unit.weapons.map(weapon => ({\n            id: weapon.id,\n            type: weapon.type as WeaponCategory,\n            damage: weapon.damage,\n            range: weapon.range,\n            cooldown: weapon.cooldown,\n            status: weapon.status as WeaponStatus,\n          })),\n          stats: {\n            ...unit.stats,\n            armor: 0, // Add default armor value\n          },\n          target",
      "tokens": 0,
      "firstFile": {
        "name": "src/hooks/combat/useCombatAI.ts",
        "start": 166,
        "end": 179,
        "startLoc": {
          "line": 166,
          "column": 11,
          "position": 1525
        },
        "endLoc": {
          "line": 179,
          "column": 7,
          "position": 1648
        }
      },
      "secondFile": {
        "name": "src/hooks/combat/useCombatAI.ts",
        "start": 121,
        "end": 134,
        "startLoc": {
          "line": 121,
          "column": 9,
          "position": 1100
        },
        "endLoc": {
          "line": 134,
          "column": 2,
          "position": 1223
        }
      }
    },
    {
      "format": "typescript",
      "lines": 17,
      "fragment": "= useCallback(\n    (\n      name: string,\n      description: string,\n      systems: SystemId[],\n      actions: AutomationAction[],\n      options?: {\n        conditions?: AutomationCondition[];\n        interval?: number;\n        priority?: MessagePriority;\n        enabled?: boolean;\n        tags?: string[];\n      }\n    ): string => {\n      return createRoutine(\n        name,\n        'performance-optimization'",
      "tokens": 0,
      "firstFile": {
        "name": "src/hooks/automation/useGlobalAutomation.ts",
        "start": 284,
        "end": 300,
        "startLoc": {
          "line": 284,
          "column": 2,
          "position": 2011
        },
        "endLoc": {
          "line": 300,
          "column": 27,
          "position": 2126
        }
      },
      "secondFile": {
        "name": "src/hooks/automation/useGlobalAutomation.ts",
        "start": 222,
        "end": 238,
        "startLoc": {
          "line": 222,
          "column": 2,
          "position": 1565
        },
        "endLoc": {
          "line": 238,
          "column": 21,
          "position": 1680
        }
      }
    },
    {
      "format": "typescript",
      "lines": 9,
      "fragment": "} = props;\n\n  // Create fallback function if FallbackComponent is provided\n  let fallback: ((error: Error, reset: () => void) => React.ReactNode) | undefined = undefined;\n  if (FallbackComponent) {\n    fallback = (error: Error, reset: () => void) => {\n      return React.createElement(FallbackComponent, {\n        error,\n        resetErrorBoundary",
      "tokens": 0,
      "firstFile": {
        "name": "src/errorHandling/utils/migration.ts",
        "start": 92,
        "end": 100,
        "startLoc": {
          "line": 92,
          "column": 2,
          "position": 685
        },
        "endLoc": {
          "line": 100,
          "column": 19,
          "position": 790
        }
      },
      "secondFile": {
        "name": "src/errorHandling/utils/migration.ts",
        "start": 33,
        "end": 41,
        "startLoc": {
          "line": 33,
          "column": 2,
          "position": 261
        },
        "endLoc": {
          "line": 41,
          "column": 14,
          "position": 366
        }
      }
    },
    {
      "format": "tsx",
      "lines": 6,
      "fragment": ":</p>\n    <pre className=\"mb-3 overflow-auto rounded bg-red-100 p-2 text-sm\">{error.message}</pre>\n    {errorContext && (\n      <div className=\"mb-3\">\n        <h4 className=\"mb-1 font-medium\">Error Context:</h4>\n        <pre className=\"overflow-auto rounded bg-red-100 p-2 text-xs",
      "tokens": 0,
      "firstFile": {
        "name": "src/errorHandling/utils/errorBoundaryHOC.tsx",
        "start": 30,
        "end": 35,
        "startLoc": {
          "line": 30,
          "column": 10,
          "position": 214
        },
        "endLoc": {
          "line": 35,
          "column": 45,
          "position": 282
        }
      },
      "secondFile": {
        "name": "src/components/ui/visualization/D3VisualizationErrorBoundary.tsx",
        "start": 29,
        "end": 34,
        "startLoc": {
          "line": 29,
          "column": 14,
          "position": 197
        },
        "endLoc": {
          "line": 34,
          "column": 45,
          "position": 265
        }
      }
    },
    {
      "format": "tsx",
      "lines": 7,
      "fragment": ">,\n  onError?: (error: Error, errorInfo: ErrorInfo, componentName: string) => void\n): React.FC<P & { errorContext?: Record<string, unknown>; resetKeys?: unknown[] }> {\n  return (props: P & { errorContext?: Record<string, unknown>; resetKeys?: unknown[] }) => {\n    const { errorContext, resetKeys, ...componentProps } = props;\n\n    // Custom error handler that includes the component name",
      "tokens": 0,
      "firstFile": {
        "name": "src/errorHandling/utils/errorBoundaryHOC.tsx",
        "start": 65,
        "end": 71,
        "startLoc": {
          "line": 65,
          "column": 24,
          "position": 396
        },
        "endLoc": {
          "line": 71,
          "column": 57,
          "position": 530
        }
      },
      "secondFile": {
        "name": "src/components/ui/visualization/D3VisualizationErrorBoundary.tsx",
        "start": 194,
        "end": 200,
        "startLoc": {
          "line": 194,
          "column": 19,
          "position": 1166
        },
        "endLoc": {
          "line": 200,
          "column": 7,
          "position": 1300
        }
      }
    },
    {
      "format": "tsx",
      "lines": 32,
      "fragment": ";\n\n// Define custom element types for Three.js components\ntype ThreePointsProps = {\n  ref?: React.RefObject<THREE.Points>;\n  [key: string]: unknown;\n};\n\ntype ThreeBufferGeometryProps = {\n  [key: string]: unknown;\n};\n\ntype ThreeBufferAttributeProps = {\n  attach: string;\n  count: number;\n  array: Float32Array;\n  itemSize: number;\n  [key: string]: unknown;\n};\n\ntype ThreeShaderMaterialProps = {\n  attach?: string;\n  transparent?: boolean;\n  depthWrite?: boolean;\n  blending?: THREE.Blending;\n  uniforms?: Record<string, { value: unknown }>;\n  vertexShader?: string;\n  fragmentShader?: string;\n  [key: string]: unknown;\n};\n\ninterface",
      "tokens": 0,
      "firstFile": {
        "name": "src/effects/component_effects/SmokeTrailEffect.tsx",
        "start": 70,
        "end": 101,
        "startLoc": {
          "line": 70,
          "column": 2,
          "position": 529
        },
        "endLoc": {
          "line": 101,
          "column": 10,
          "position": 742
        }
      },
      "secondFile": {
        "name": "src/effects/component_effects/ThrusterEffect.tsx",
        "start": 8,
        "end": 39,
        "startLoc": {
          "line": 8,
          "column": 8,
          "position": 51
        },
        "endLoc": {
          "line": 39,
          "column": 60,
          "position": 264
        }
      }
    },
    {
      "format": "tsx",
      "lines": 39,
      "fragment": ";\n\n  // Use React.createElement with type assertions for Three.js elements\n  return React.createElement(\n    React.Fragment,\n    null,\n    React.createElement(\n      'points',\n      { ref: pointsRef } as ThreePointsProps,\n      React.createElement(\n        'bufferGeometry',\n        {} as ThreeBufferGeometryProps,\n        React.createElement('bufferAttribute', {\n          attach: 'attributes.position',\n          count: particleCount,\n          array: positions,\n          itemSize: 3,\n        } as ThreeBufferAttributeProps),\n        React.createElement('bufferAttribute', {\n          attach: 'attributes.size',\n          count: particleCount,\n          array: sizes,\n          itemSize: 1,\n        } as ThreeBufferAttributeProps),\n        React.createElement('bufferAttribute', {\n          attach: 'attributes.opacity',\n          count: particleCount,\n          array: opacities,\n          itemSize: 1,\n        } as ThreeBufferAttributeProps)\n      ),\n      React.createElement('shaderMaterial', {\n        transparent: true,\n        depthWrite: false,\n        blending: THREE.AdditiveBlending,\n        uniforms: {\n          color: { value: new THREE.Color(color) },\n        },\n        vertexShader:",
      "tokens": 0,
      "firstFile": {
        "name": "src/effects/component_effects/SmokeTrailEffect.tsx",
        "start": 268,
        "end": 306,
        "startLoc": {
          "line": 268,
          "column": 4,
          "position": 2257
        },
        "endLoc": {
          "line": 306,
          "column": 2,
          "position": 2534
        }
      },
      "secondFile": {
        "name": "src/effects/component_effects/ThrusterEffect.tsx",
        "start": 307,
        "end": 345,
        "startLoc": {
          "line": 307,
          "column": 4,
          "position": 2305
        },
        "endLoc": {
          "line": 345,
          "column": 2,
          "position": 2582
        }
      }
    },
    {
      "format": "tsx",
      "lines": 18,
      "fragment": ";\n  const glowIntensity = quality === 'low' ? 2 : quality === 'medium' ? 4 : 8;\n\n  // Calculate path\n  const dx = target.x - source.x;\n  const dy = target.y - source.y;\n  const distance = Math.sqrt(dx * dx + dy * dy);\n  const midX = (source.x + target.x) / 2;\n  const midY = (source.y + target.y) / 2;\n  const curvature = distance * 0.2;\n\n  // Path data for curved line\n  const path = `\n    M ${source.x} ${source.y}\n    Q ${midX} ${midY - curvature} ${target.x} ${target.y}\n  `;\n\n  // Get color based on ship type",
      "tokens": 0,
      "firstFile": {
        "name": "src/effects/component_effects/ShipPathEffect.tsx",
        "start": 15,
        "end": 32,
        "startLoc": {
          "line": 15,
          "column": 2,
          "position": 153
        },
        "endLoc": {
          "line": 32,
          "column": 32,
          "position": 368
        }
      },
      "secondFile": {
        "name": "src/effects/component_effects/TradeRouteEffect.tsx",
        "start": 21,
        "end": 38,
        "startLoc": {
          "line": 21,
          "column": 2,
          "position": 177
        },
        "endLoc": {
          "line": 38,
          "column": 7,
          "position": 392
        }
      }
    },
    {
      "format": "tsx",
      "lines": 19,
      "fragment": "useEffect(() => {\n    let frameId: number;\n    const state: FrameState = { clock: { elapsedTime: 0 } };\n    let lastTime = 0;\n\n    const animate = (time: number) => {\n      const delta = (time - lastTime) / 1000;\n      lastTime = time;\n      state.clock.elapsedTime += delta;\n      callback(state);\n      frameId = requestAnimationFrame(animate);\n    };\n\n    frameId = requestAnimationFrame(animate);\n    return () => cancelAnimationFrame(frameId);\n  }, [callback]);\n};\n\n// Mock for extend",
      "tokens": 0,
      "firstFile": {
        "name": "src/effects/component_effects/ShieldEffect.tsx",
        "start": 144,
        "end": 162,
        "startLoc": {
          "line": 144,
          "column": 2,
          "position": 921
        },
        "endLoc": {
          "line": 162,
          "column": 19,
          "position": 1097
        }
      },
      "secondFile": {
        "name": "src/effects/component_effects/SmokeTrailEffect.tsx",
        "start": 16,
        "end": 34,
        "startLoc": {
          "line": 16,
          "column": 3,
          "position": 108
        },
        "endLoc": {
          "line": 34,
          "column": 25,
          "position": 284
        }
      }
    },
    {
      "format": "tsx",
      "lines": 8,
      "fragment": "const Canvas: React.FC<CanvasProps> = ({ children, camera, style }) => {\n  // Apply camera settings to the container style\n  const enhancedStyle = {\n    ...style,\n    // Use camera position to adjust perspective\n    perspective: `${1000 / (camera.fov / 75)}px`,\n    perspectiveOrigin: `${50 + camera.position[0] * 5}% ${50 - camera.position[1] * 5}%`,\n  }",
      "tokens": 0,
      "firstFile": {
        "name": "src/effects/component_effects/ShieldEffect.tsx",
        "start": 457,
        "end": 464,
        "startLoc": {
          "line": 457,
          "column": 1,
          "position": 2219
        },
        "endLoc": {
          "line": 464,
          "column": 2,
          "position": 2333
        }
      },
      "secondFile": {
        "name": "src/effects/component_effects/SmokeTrailEffect.tsx",
        "start": 58,
        "end": 65,
        "startLoc": {
          "line": 58,
          "column": 1,
          "position": 347
        },
        "endLoc": {
          "line": 65,
          "column": 71,
          "position": 461
        }
      }
    },
    {
      "format": "javascript",
      "lines": 35,
      "fragment": ")}\n            >\n              {/* Energy flow nodes */}\n              {Array.from({ length: 4 }).map((_, i) => (\n                <motion.div\n                  key={`inner-energy-${i}`}\n                  className=\"absolute h-6 w-6 rounded-full bg-yellow-500/80\"\n                  style={{\n                    top: '50%',\n                    left: '50%',\n                    transform: `rotate(${i * 90}deg) translateY(-24px)`,\n                    opacity: energyFlowIntensity,\n                  }}\n                  animate={{\n                    scale: [1, 1.2, 1],\n                  }}\n                  transition={{\n                    duration: 2,\n                    repeat: Infinity,\n                    repeatType: 'loop',\n                  }}\n                >\n                  <Zap className=\"h-6 w-6 text-yellow-300\" />\n                </motion.div>\n              ))}\n            </motion.div>\n          )}\n\n          {/* Middle ring */}\n          {sections.includes('middle') && (\n            <motion.div\n              initial={{ scale: 0, opacity: 0 }}\n              animate={{ scale: 1, opacity: 1 }}\n              exit={{ scale: 0, opacity: 0 }}\n              transition={{ duration: animationDuration, delay: 0.2",
      "tokens": 0,
      "firstFile": {
        "name": "src/effects/component_effects/MothershipSuperstructure.tsx",
        "start": 101,
        "end": 135,
        "startLoc": {
          "line": 101,
          "column": 8,
          "position": 863
        },
        "endLoc": {
          "line": 135,
          "column": 4,
          "position": 1144
        }
      },
      "secondFile": {
        "name": "src/effects/component_effects/MothershipSuperstructure.tsx",
        "start": 82,
        "end": 96,
        "startLoc": {
          "line": 82,
          "column": 7,
          "position": 700
        },
        "endLoc": {
          "line": 96,
          "column": 4,
          "position": 827
        }
      }
    },
    {
      "format": "javascript",
      "lines": 34,
      "fragment": ")}\n            >\n              {/* Material flow nodes */}\n              {Array.from({ length: 6 }).map((_, i) => (\n                <motion.div\n                  key={`middle-material-${i}`}\n                  className=\"absolute h-5 w-5 rounded-full bg-blue-500/80\"\n                  style={{\n                    top: '50%',\n                    left: '50%',\n                    transform: `rotate(${i * 60}deg) translateY(-32px)`,\n                    opacity: materialsFlowIntensity,\n                  }}\n                  animate={{\n                    scale: [1, 1.1, 1],\n                  }}\n                  transition={{\n                    duration: 3,\n                    repeat: Infinity,\n                    repeatType: 'loop',\n                    delay: i * 0.5,\n                  }}\n                />\n              ))}\n            </motion.div>\n          )}\n\n          {/* Outer ring */}\n          {sections.includes('outer') && (\n            <motion.div\n              initial={{ scale: 0, opacity: 0 }}\n              animate={{ scale: 1, opacity: 1 }}\n              exit={{ scale: 0, opacity: 0 }}\n              transition={{ duration: animationDuration, delay: 0.3",
      "tokens": 0,
      "firstFile": {
        "name": "src/effects/component_effects/MothershipSuperstructure.tsx",
        "start": 140,
        "end": 173,
        "startLoc": {
          "line": 140,
          "column": 9,
          "position": 1180
        },
        "endLoc": {
          "line": 173,
          "column": 4,
          "position": 1456
        }
      },
      "secondFile": {
        "name": "src/effects/component_effects/MothershipSuperstructure.tsx",
        "start": 82,
        "end": 96,
        "startLoc": {
          "line": 82,
          "column": 7,
          "position": 700
        },
        "endLoc": {
          "line": 96,
          "column": 4,
          "position": 827
        }
      }
    },
    {
      "format": "tsx",
      "lines": 19,
      "fragment": ")\n    ),\n\n    /* Progress Ring */\n    React.createElement(\n      'svg',\n      { className: 'absolute inset-0', viewBox: '0 0 100 100' },\n      React.createElement('circle', {\n        cx: '50',\n        cy: '50',\n        r: '45',\n        fill: 'none',\n        stroke: `rgb(var(--color-${color}-500))`,\n        strokeWidth: '2',\n        strokeDasharray: `${progress * 283} 283`,\n        transform: 'rotate(-90 50 50)',\n        className: 'opacity-30',\n      })\n    ),",
      "tokens": 0,
      "firstFile": {
        "name": "src/effects/component_effects/ModuleUpgradeTransition.tsx",
        "start": 110,
        "end": 128,
        "startLoc": {
          "line": 110,
          "column": 2,
          "position": 988
        },
        "endLoc": {
          "line": 128,
          "column": 2,
          "position": 1115
        }
      },
      "secondFile": {
        "name": "src/effects/component_effects/ProgressionEffects.tsx",
        "start": 89,
        "end": 108,
        "startLoc": {
          "line": 89,
          "column": 9,
          "position": 759
        },
        "endLoc": {
          "line": 108,
          "column": 2,
          "position": 888
        }
      }
    },
    {
      "format": "tsx",
      "lines": 12,
      "fragment": ") => void): void => {\n  // This is a mock implementation\n  useEffect(() => {\n    let frameId: number;\n    const state: FrameState = { clock: { elapsedTime: 0 } };\n    let lastTime = 0;\n\n    const animate = (time: number) => {\n      const delta = (time - lastTime) / 1000;\n      lastTime = time;\n      state.clock.elapsedTime += delta;\n      callback(state,",
      "tokens": 0,
      "firstFile": {
        "name": "src/effects/component_effects/ExplosionEffect.tsx",
        "start": 14,
        "end": 25,
        "startLoc": {
          "line": 14,
          "column": 7,
          "position": 96
        },
        "endLoc": {
          "line": 25,
          "column": 2,
          "position": 232
        }
      },
      "secondFile": {
        "name": "src/effects/component_effects/SmokeTrailEffect.tsx",
        "start": 14,
        "end": 25,
        "startLoc": {
          "line": 14,
          "column": 11,
          "position": 90
        },
        "endLoc": {
          "line": 25,
          "column": 2,
          "position": 226
        }
      }
    },
    {
      "format": "tsx",
      "lines": 13,
      "fragment": ",\n            style: {\n              left: `${Math.random() * 100}%`,\n              top: `${Math.random() * 100}%`,\n              animationDelay: `${Math.random() * 2}s`,\n              opacity: 0.5 + Math.random() * 0.5,\n            },\n          })\n        )\n      )\n    ),\n\n    /* Hub Info */",
      "tokens": 0,
      "firstFile": {
        "name": "src/effects/component_effects/ExplorationHub.tsx",
        "start": 271,
        "end": 283,
        "startLoc": {
          "line": 271,
          "column": 58,
          "position": 1970
        },
        "endLoc": {
          "line": 283,
          "column": 15,
          "position": 2074
        }
      },
      "secondFile": {
        "name": "src/effects/component_effects/MineralProcessing.tsx",
        "start": 204,
        "end": 216,
        "startLoc": {
          "line": 204,
          "column": 59,
          "position": 1520
        },
        "endLoc": {
          "line": 216,
          "column": 22,
          "position": 1624
        }
      }
    },
    {
      "format": "tsx",
      "lines": 9,
      "fragment": ",\n              style: {\n                left: `${Math.random() * 100}%`,\n                top: `${Math.random() * 100}%`,\n                animationDelay: `${Math.random() * 2}s`,\n                opacity: 0.5 + Math.random() * 0.5,\n              },\n            })\n          ),",
      "tokens": 0,
      "firstFile": {
        "name": "src/effects/component_effects/ColonyStarStation.tsx",
        "start": 175,
        "end": 183,
        "startLoc": {
          "line": 175,
          "column": 58,
          "position": 1316
        },
        "endLoc": {
          "line": 183,
          "column": 2,
          "position": 1410
        }
      },
      "secondFile": {
        "name": "src/effects/component_effects/MineralProcessing.tsx",
        "start": 204,
        "end": 213,
        "startLoc": {
          "line": 204,
          "column": 59,
          "position": 1520
        },
        "endLoc": {
          "line": 213,
          "column": 2,
          "position": 1616
        }
      }
    },
    {
      "format": "tsx",
      "lines": 13,
      "fragment": ",\n            style: {\n              left: `${Math.random() * 100}%`,\n              top: `${Math.random() * 100}%`,\n              animationDelay: `${Math.random() * 2}s`,\n              opacity: 0.5 + Math.random() * 0.5,\n            },\n          })\n        )\n      )\n    ),\n\n    /* Status Indicators */",
      "tokens": 0,
      "firstFile": {
        "name": "src/effects/component_effects/CentralMothership.tsx",
        "start": 105,
        "end": 117,
        "startLoc": {
          "line": 105,
          "column": 60,
          "position": 801
        },
        "endLoc": {
          "line": 117,
          "column": 24,
          "position": 905
        }
      },
      "secondFile": {
        "name": "src/effects/component_effects/MineralProcessing.tsx",
        "start": 204,
        "end": 216,
        "startLoc": {
          "line": 204,
          "column": 59,
          "position": 1520
        },
        "endLoc": {
          "line": 216,
          "column": 22,
          "position": 1624
        }
      }
    },
    {
      "format": "tsx",
      "lines": 10,
      "fragment": ",\n        React.createElement(\n          'div',\n          { className: 'flex items-center space-x-1' },\n          Array.from({ length: tier }).map((_, i) =>\n            React.createElement(Star, { key: i, className: `h-3 w-3 text-${color}-400` })\n          )\n        )\n      )\n    )",
      "tokens": 0,
      "firstFile": {
        "name": "src/effects/component_effects/BuildingUpgradeEffect.tsx",
        "start": 49,
        "end": 58,
        "startLoc": {
          "line": 49,
          "column": 2,
          "position": 386
        },
        "endLoc": {
          "line": 58,
          "column": 2,
          "position": 473
        }
      },
      "secondFile": {
        "name": "src/effects/component_effects/ProgressionEffects.tsx",
        "start": 38,
        "end": 46,
        "startLoc": {
          "line": 38,
          "column": 2,
          "position": 302
        },
        "endLoc": {
          "line": 46,
          "column": 2,
          "position": 387
        }
      }
    },
    {
      "format": "tsx",
      "lines": 9,
      "fragment": "Array.from({ length: particleCount }).map((_, i) =>\n        React.createElement('div', {\n          key: i,\n          className: `absolute h-2 w-2 rounded-full bg-${color}-400`,\n          style: {\n            left: `${Math.random() * 100}%`,\n            top: `${Math.random() * 100}%`,\n            animation: `float ${3 + Math.random() * 2}s infinite`,\n            opacity: 0.3",
      "tokens": 0,
      "firstFile": {
        "name": "src/effects/component_effects/BuildingUpgradeEffect.tsx",
        "start": 73,
        "end": 81,
        "startLoc": {
          "line": 73,
          "column": 7,
          "position": 578
        },
        "endLoc": {
          "line": 81,
          "column": 4,
          "position": 701
        }
      },
      "secondFile": {
        "name": "src/effects/component_effects/ProgressionEffects.tsx",
        "start": 62,
        "end": 70,
        "startLoc": {
          "line": 62,
          "column": 7,
          "position": 482
        },
        "endLoc": {
          "line": 70,
          "column": 4,
          "position": 605
        }
      }
    },
    {
      "format": "tsx",
      "lines": 11,
      "fragment": "React.createElement(\n        'svg',\n        { className: 'absolute inset-0', viewBox: '0 0 100 100' },\n        React.createElement('circle', {\n          cx: '50',\n          cy: '50',\n          r: '45',\n          fill: 'none',\n          stroke: `rgb(var(--color-${color}-500))`,\n          strokeWidth: '2',\n          strokeDasharray: `${upgradeProgress ",
      "tokens": 0,
      "firstFile": {
        "name": "src/effects/component_effects/BuildingUpgradeEffect.tsx",
        "start": 105,
        "end": 115,
        "startLoc": {
          "line": 105,
          "column": 7,
          "position": 964
        },
        "endLoc": {
          "line": 115,
          "column": 17,
          "position": 1052
        }
      },
      "secondFile": {
        "name": "src/effects/component_effects/ProgressionEffects.tsx",
        "start": 93,
        "end": 103,
        "startLoc": {
          "line": 93,
          "column": 5,
          "position": 770
        },
        "endLoc": {
          "line": 103,
          "column": 10,
          "position": 858
        }
      }
    },
    {
      "format": "tsx",
      "lines": 20,
      "fragment": "useEffect(() => {\n    const canvas = canvasRef.current;\n    if (!canvas) {\n      return;\n    }\n\n    const ctx = canvas.getContext('2d');\n    if (!ctx) {\n      return;\n    }\n\n    // Set canvas size\n    const resizeCanvas = () => {\n      canvas.width = window.innerWidth;\n      canvas.height = window.innerHeight;\n    };\n    resizeCanvas();\n    window.addEventListener('resize', resizeCanvas);\n\n    // Particle system",
      "tokens": 0,
      "firstFile": {
        "name": "src/effects/component_effects/BackgroundEffect.tsx",
        "start": 15,
        "end": 34,
        "startLoc": {
          "line": 15,
          "column": 3,
          "position": 122
        },
        "endLoc": {
          "line": 34,
          "column": 19,
          "position": 259
        }
      },
      "secondFile": {
        "name": "src/effects/component_effects/StarSystemBackdrop.tsx",
        "start": 13,
        "end": 32,
        "startLoc": {
          "line": 13,
          "column": 2,
          "position": 92
        },
        "endLoc": {
          "line": 32,
          "column": 28,
          "position": 229
        }
      }
    },
    {
      "format": "tsx",
      "lines": 16,
      "fragment": ");\n\n        ctx.fillStyle = nebulaGradient;\n        ctx.fillRect(0, 0, canvas.width, canvas.height);\n      }\n\n      animationFrame = requestAnimationFrame(animate);\n    };\n\n    animate();\n\n    return () => {\n      window.removeEventListener('resize', resizeCanvas);\n      cancelAnimationFrame(animationFrame);\n    };\n  }, [quality, intensity",
      "tokens": 0,
      "firstFile": {
        "name": "src/effects/component_effects/BackgroundEffect.tsx",
        "start": 139,
        "end": 154,
        "startLoc": {
          "line": 139,
          "column": 19,
          "position": 1224
        },
        "endLoc": {
          "line": 154,
          "column": 10,
          "position": 1328
        }
      },
      "secondFile": {
        "name": "src/effects/component_effects/StarSystemBackdrop.tsx",
        "start": 100,
        "end": 115,
        "startLoc": {
          "line": 100,
          "column": 14,
          "position": 916
        },
        "endLoc": {
          "line": 115,
          "column": 14,
          "position": 1020
        }
      }
    },
    {
      "format": "typescript",
      "lines": 16,
      "fragment": ",\n    weapons: [\n      {\n        id: 'rail-1',\n        size: 'large' as WeaponMountSize,\n        position: 'front' as WeaponMountPosition,\n        rotation: 0,\n        allowedCategories: ['railGun'],\n        currentWeapon: {\n          config: {\n            id: 'heavy-railgun',\n            name: 'Heavy Railgun',\n            category: 'railGun',\n            tier: 3,\n            baseStats: {\n              damage: 300",
      "tokens": 0,
      "firstFile": {
        "name": "src/config/ships/lostNovaShips.ts",
        "start": 110,
        "end": 125,
        "startLoc": {
          "line": 110,
          "column": 12,
          "position": 710
        },
        "endLoc": {
          "line": 125,
          "column": 4,
          "position": 816
        }
      },
      "secondFile": {
        "name": "src/config/ships/spaceRatsShips.ts",
        "start": 504,
        "end": 519,
        "startLoc": {
          "line": 504,
          "column": 13,
          "position": 3321
        },
        "endLoc": {
          "line": 519,
          "column": 4,
          "position": 3427
        }
      }
    },
    {
      "format": "typescript",
      "lines": 16,
      "fragment": ",\n    weapons: [\n      {\n        id: 'mgss-1',\n        size: 'medium' as WeaponMountSize,\n        position: 'turret' as WeaponMountPosition,\n        rotation: 0,\n        allowedCategories: ['mgss'],\n        currentWeapon: {\n          config: {\n            id: 'mgss-cannon',\n            name: 'MGSS Cannon',\n            category: 'mgss',\n            tier: 2,\n            baseStats: {\n              damage: 40",
      "tokens": 0,
      "firstFile": {
        "name": "src/config/ships/lostNovaShips.ts",
        "start": 189,
        "end": 204,
        "startLoc": {
          "line": 189,
          "column": 12,
          "position": 1233
        },
        "endLoc": {
          "line": 204,
          "column": 3,
          "position": 1339
        }
      },
      "secondFile": {
        "name": "src/config/ships/spaceRatsShips.ts",
        "start": 583,
        "end": 598,
        "startLoc": {
          "line": 583,
          "column": 13,
          "position": 3844
        },
        "endLoc": {
          "line": 598,
          "column": 3,
          "position": 3950
        }
      }
    },
    {
      "format": "typescript",
      "lines": 14,
      "fragment": ",\n    cargo: 250,\n    tier: 3,\n    faction: 'lost-nova',\n    weapons: [\n      {\n        id: 'rail-1',\n        size: 'large' as WeaponMountSize,\n        position: 'front' as WeaponMountPosition,\n        rotation: 0,\n        allowedCategories: ['railGun'],\n        currentWeapon: {\n          config: {\n            id: 'heavy-railgun'",
      "tokens": 0,
      "firstFile": {
        "name": "src/config/ships/lostNovaShips.ts",
        "start": 502,
        "end": 515,
        "startLoc": {
          "line": 502,
          "column": 2,
          "position": 3304
        },
        "endLoc": {
          "line": 515,
          "column": 16,
          "position": 3397
        }
      },
      "secondFile": {
        "name": "src/config/ships/lostNovaShips.ts",
        "start": 344,
        "end": 357,
        "startLoc": {
          "line": 344,
          "column": 2,
          "position": 2258
        },
        "endLoc": {
          "line": 357,
          "column": 19,
          "position": 2351
        }
      }
    },
    {
      "format": "typescript",
      "lines": 19,
      "fragment": ",\n    tier: 3,\n    faction: 'lost-nova',\n    weapons: [\n      {\n        id: 'rail-1',\n        size: 'large' as WeaponMountSize,\n        position: 'front' as WeaponMountPosition,\n        rotation: 0,\n        allowedCategories: ['railGun'],\n        currentWeapon: {\n          config: {\n            id: 'heavy-railgun',\n            name: 'Heavy Railgun',\n            category: 'railGun',\n            tier: 3,\n            baseStats: {\n              damage: 200,\n              range: 1300",
      "tokens": 0,
      "firstFile": {
        "name": "src/config/ships/lostNovaShips.ts",
        "start": 503,
        "end": 521,
        "startLoc": {
          "line": 503,
          "column": 4,
          "position": 3311
        },
        "endLoc": {
          "line": 521,
          "column": 5,
          "position": 3438
        }
      },
      "secondFile": {
        "name": "src/config/ships/lostNovaShips.ts",
        "start": 108,
        "end": 520,
        "startLoc": {
          "line": 108,
          "column": 4,
          "position": 696
        },
        "endLoc": {
          "line": 520,
          "column": 5,
          "position": 3434
        }
      }
    },
    {
      "format": "typescript",
      "lines": 14,
      "fragment": ",\n    weapons: [\n      {\n        id: 'rocket-1',\n        size: 'large' as WeaponMountSize,\n        position: 'front' as WeaponMountPosition,\n        rotation: 0,\n        allowedCategories: ['rockets'],\n        currentWeapon: {\n          config: {\n            id: 'heavy-rockets',\n            name: 'Heavy Rockets',\n            category: 'rockets',\n            tier: 3",
      "tokens": 0,
      "firstFile": {
        "name": "src/config/ships/lostNovaShips.ts",
        "start": 584,
        "end": 597,
        "startLoc": {
          "line": 584,
          "column": 12,
          "position": 3848
        },
        "endLoc": {
          "line": 597,
          "column": 2,
          "position": 3941
        }
      },
      "secondFile": {
        "name": "src/config/ships/spaceRatsShips.ts",
        "start": 425,
        "end": 438,
        "startLoc": {
          "line": 425,
          "column": 13,
          "position": 2798
        },
        "endLoc": {
          "line": 438,
          "column": 2,
          "position": 2891
        }
      }
    },
    {
      "format": "typescript",
      "lines": 14,
      "fragment": ",\n    weapons: [\n      {\n        id: 'gauss-1',\n        size: 'medium' as WeaponMountSize,\n        position: 'front' as WeaponMountPosition,\n        rotation: 0,\n        allowedCategories: ['gaussCannon'],\n        currentWeapon: {\n          config: {\n            id: 'gauss-cannon',\n            name: 'Gauss Cannon',\n            category: 'gaussCannon',\n            tier: 3",
      "tokens": 0,
      "firstFile": {
        "name": "src/config/ships/lostNovaShips.ts",
        "start": 663,
        "end": 676,
        "startLoc": {
          "line": 663,
          "column": 12,
          "position": 4371
        },
        "endLoc": {
          "line": 676,
          "column": 2,
          "position": 4464
        }
      },
      "secondFile": {
        "name": "src/config/ships/spaceRatsShips.ts",
        "start": 662,
        "end": 675,
        "startLoc": {
          "line": 662,
          "column": 13,
          "position": 4367
        },
        "endLoc": {
          "line": 675,
          "column": 2,
          "position": 4460
        }
      }
    },
    {
      "format": "typescript",
      "lines": 15,
      "fragment": ",\n    faction: 'lost-nova',\n    weapons: [\n      {\n        id: 'mgss-1',\n        size: 'medium' as WeaponMountSize,\n        position: 'front' as WeaponMountPosition,\n        rotation: 0,\n        allowedCategories: ['mgss'],\n        currentWeapon: {\n          config: {\n            id: 'mgss-cannon',\n            name: 'MGSS Cannon',\n            category: 'mgss',\n            tier: 3",
      "tokens": 0,
      "firstFile": {
        "name": "src/config/ships/lostNovaShips.ts",
        "start": 741,
        "end": 755,
        "startLoc": {
          "line": 741,
          "column": 2,
          "position": 4887
        },
        "endLoc": {
          "line": 755,
          "column": 2,
          "position": 4987
        }
      },
      "secondFile": {
        "name": "src/config/ships/lostNovaShips.ts",
        "start": 425,
        "end": 439,
        "startLoc": {
          "line": 425,
          "column": 2,
          "position": 2795
        },
        "endLoc": {
          "line": 439,
          "column": 2,
          "position": 2895
        }
      }
    },
    {
      "format": "typescript",
      "lines": 16,
      "fragment": ",\n    weapons: [\n      {\n        id: 'rocket-1',\n        size: 'large' as WeaponMountSize,\n        position: 'front' as WeaponMountPosition,\n        rotation: 0,\n        allowedCategories: ['rockets'],\n        currentWeapon: {\n          config: {\n            id: 'heavy-rockets',\n            name: 'Heavy Rockets',\n            category: 'rockets',\n            tier: 3,\n            baseStats: {\n              damage: 280",
      "tokens": 0,
      "firstFile": {
        "name": "src/config/ships/equatorHorizonShips.ts",
        "start": 566,
        "end": 581,
        "startLoc": {
          "line": 566,
          "column": 18,
          "position": 3797
        },
        "endLoc": {
          "line": 581,
          "column": 4,
          "position": 3903
        }
      },
      "secondFile": {
        "name": "src/config/ships/spaceRatsShips.ts",
        "start": 425,
        "end": 599,
        "startLoc": {
          "line": 425,
          "column": 13,
          "position": 2798
        },
        "endLoc": {
          "line": 599,
          "column": 4,
          "position": 3954
        }
      }
    },
    {
      "format": "typescript",
      "lines": 16,
      "fragment": ",\n    weapons: [\n      {\n        id: 'rail-1',\n        size: 'large' as WeaponMountSize,\n        position: 'front' as WeaponMountPosition,\n        rotation: 0,\n        allowedCategories: ['railGun'],\n        currentWeapon: {\n          config: {\n            id: 'heavy-railgun',\n            name: 'Heavy Railgun',\n            category: 'railGun',\n            tier: 3,\n            baseStats: {\n              damage: 350",
      "tokens": 0,
      "firstFile": {
        "name": "src/config/ships/equatorHorizonShips.ts",
        "start": 724,
        "end": 739,
        "startLoc": {
          "line": 724,
          "column": 18,
          "position": 4843
        },
        "endLoc": {
          "line": 739,
          "column": 4,
          "position": 4949
        }
      },
      "secondFile": {
        "name": "src/config/ships/spaceRatsShips.ts",
        "start": 504,
        "end": 519,
        "startLoc": {
          "line": 504,
          "column": 13,
          "position": 3321
        },
        "endLoc": {
          "line": 519,
          "column": 4,
          "position": 3427
        }
      }
    },
    {
      "format": "typescript",
      "lines": 16,
      "fragment": ",\n    weapons: [\n      {\n        id: 'mgss-1',\n        size: 'medium' as WeaponMountSize,\n        position: 'front' as WeaponMountPosition,\n        rotation: 0,\n        allowedCategories: ['mgss'],\n        currentWeapon: {\n          config: {\n            id: 'mgss-cannon',\n            name: 'MGSS Cannon',\n            category: 'mgss',\n            tier: 3,\n            baseStats: {\n              damage: 100",
      "tokens": 0,
      "firstFile": {
        "name": "src/config/ships/equatorHorizonShips.ts",
        "start": 803,
        "end": 818,
        "startLoc": {
          "line": 803,
          "column": 18,
          "position": 5366
        },
        "endLoc": {
          "line": 818,
          "column": 4,
          "position": 5472
        }
      },
      "secondFile": {
        "name": "src/config/ships/lostNovaShips.ts",
        "start": 426,
        "end": 757,
        "startLoc": {
          "line": 426,
          "column": 12,
          "position": 2802
        },
        "endLoc": {
          "line": 757,
          "column": 3,
          "position": 5000
        }
      }
    },
    {
      "format": "typescript",
      "lines": 15,
      "fragment": ",\n              energyCost: 10,\n              cooldown: 3,\n              effects: [PLASMA_EFFECT],\n            },\n            visualAsset: 'weapons/mgss/advanced',\n            mountRequirements: {\n              size: 'medium' as WeaponMountSize,\n              power: 25,\n            },\n          },\n          state: {\n            status: 'ready' as WeaponStatus,\n            currentStats: {\n              damage: 100",
      "tokens": 0,
      "firstFile": {
        "name": "src/config/ships/equatorHorizonShips.ts",
        "start": 821,
        "end": 835,
        "startLoc": {
          "line": 821,
          "column": 2,
          "position": 5494
        },
        "endLoc": {
          "line": 835,
          "column": 4,
          "position": 5589
        }
      },
      "secondFile": {
        "name": "src/config/ships/lostNovaShips.ts",
        "start": 760,
        "end": 774,
        "startLoc": {
          "line": 760,
          "column": 2,
          "position": 5022
        },
        "endLoc": {
          "line": 774,
          "column": 3,
          "position": 5117
        }
      }
    },
    {
      "format": "typescript",
      "lines": 18,
      "fragment": ",\n    tier: 3,\n    faction: 'equator-horizon',\n    weapons: [\n      {\n        id: 'gauss-1',\n        size: 'large' as WeaponMountSize,\n        position: 'front' as WeaponMountPosition,\n        rotation: 0,\n        allowedCategories: ['gaussCannon'],\n        currentWeapon: {\n          config: {\n            id: 'gauss-cannon',\n            name: 'Gauss Cannon',\n            category: 'gaussCannon',\n            tier: 3,\n            baseStats: {\n              damage: 240",
      "tokens": 0,
      "firstFile": {
        "name": "src/config/ships/equatorHorizonShips.ts",
        "start": 880,
        "end": 897,
        "startLoc": {
          "line": 880,
          "column": 4,
          "position": 5875
        },
        "endLoc": {
          "line": 897,
          "column": 4,
          "position": 5995
        }
      },
      "secondFile": {
        "name": "src/config/ships/equatorHorizonShips.ts",
        "start": 643,
        "end": 660,
        "startLoc": {
          "line": 643,
          "column": 4,
          "position": 4306
        },
        "endLoc": {
          "line": 660,
          "column": 4,
          "position": 4426
        }
      }
    },
    {
      "format": "typescript",
      "lines": 11,
      "fragment": ",\n    requirements: {\n      minLevel: 1,\n      buildingType: ['colony'],\n      resourceCosts: [\n        { type: ResourceType.MINERALS, amount: 400 },\n        { type: ResourceType.ENERGY, amount: 300 },\n      ],\n    },\n    baseStats: {\n      power: 70",
      "tokens": 0,
      "firstFile": {
        "name": "src/config/modules/defaultModuleConfigs.ts",
        "start": 98,
        "end": 108,
        "startLoc": {
          "line": 98,
          "column": 45,
          "position": 760
        },
        "endLoc": {
          "line": 108,
          "column": 3,
          "position": 846
        }
      },
      "secondFile": {
        "name": "src/config/modules/defaultModuleConfigs.ts",
        "start": 62,
        "end": 72,
        "startLoc": {
          "line": 62,
          "column": 51,
          "position": 488
        },
        "endLoc": {
          "line": 72,
          "column": 3,
          "position": 574
        }
      }
    },
    {
      "format": "typescript",
      "lines": 11,
      "fragment": ",\n    requirements: {\n      minLevel: 1,\n      buildingType: ['mothership', 'colony'],\n      resourceCosts: [\n        { type: ResourceType.MINERALS, amount: 300 },\n        { type: ResourceType.ENERGY, amount: 200 },\n      ],\n    },\n    baseStats: {\n      power: 40",
      "tokens": 0,
      "firstFile": {
        "name": "src/config/modules/defaultModuleConfigs.ts",
        "start": 116,
        "end": 126,
        "startLoc": {
          "line": 116,
          "column": 48,
          "position": 896
        },
        "endLoc": {
          "line": 126,
          "column": 3,
          "position": 985
        }
      },
      "secondFile": {
        "name": "src/config/modules/defaultModuleConfigs.ts",
        "start": 8,
        "end": 18,
        "startLoc": {
          "line": 8,
          "column": 41,
          "position": 74
        },
        "endLoc": {
          "line": 18,
          "column": 3,
          "position": 163
        }
      }
    },
    {
      "format": "typescript",
      "lines": 11,
      "fragment": ",\n    requirements: {\n      minLevel: 1,\n      buildingType: ['colony'],\n      resourceCosts: [\n        { type: ResourceType.MINERALS, amount: 500 },\n        { type: ResourceType.ENERGY, amount: 300 },\n      ],\n    },\n    baseStats: {\n      power: 60",
      "tokens": 0,
      "firstFile": {
        "name": "src/config/modules/defaultModuleConfigs.ts",
        "start": 134,
        "end": 144,
        "startLoc": {
          "line": 134,
          "column": 47,
          "position": 1041
        },
        "endLoc": {
          "line": 144,
          "column": 3,
          "position": 1127
        }
      },
      "secondFile": {
        "name": "src/config/modules/defaultModuleConfigs.ts",
        "start": 80,
        "end": 90,
        "startLoc": {
          "line": 80,
          "column": 46,
          "position": 624
        },
        "endLoc": {
          "line": 90,
          "column": 3,
          "position": 710
        }
      }
    },
    {
      "format": "tsx",
      "lines": 8,
      "fragment": ".damage}</span>\n            <span className=\"text-sm text-gray-400\">DPS</span>\n          </div>\n        </div>\n        <div>\n          <div className=\"mb-1 text-sm text-gray-400\">Range</div>\n          <div className=\"flex items-baseline space-x-1\">\n            <span className=\"text-2xl font-bold text-white\">{weapon.stats",
      "tokens": 0,
      "firstFile": {
        "name": "src/components/weapons/WeaponControl.tsx",
        "start": 59,
        "end": 66,
        "startLoc": {
          "line": 59,
          "column": 6,
          "position": 500
        },
        "endLoc": {
          "line": 66,
          "column": 6,
          "position": 576
        }
      },
      "secondFile": {
        "name": "src/components/weapons/WeaponSystem.tsx",
        "start": 59,
        "end": 67,
        "startLoc": {
          "line": 59,
          "column": 13,
          "position": 429
        },
        "endLoc": {
          "line": 67,
          "column": 6,
          "position": 507
        }
      }
    },
    {
      "format": "tsx",
      "lines": 10,
      "fragment": "bg-${color}-600 hover:bg-${color}-700 text-white`\n            : 'cursor-not-allowed bg-gray-700 text-gray-500'\n        }`}\n      >\n        <Crosshair className=\"h-5 w-5\" />\n        <span>Fire Weapon</span>\n      </button>\n    </div>\n  );\n}",
      "tokens": 0,
      "firstFile": {
        "name": "src/components/weapons/WeaponControl.tsx",
        "start": 151,
        "end": 160,
        "startLoc": {
          "line": 151,
          "column": 16,
          "position": 1359
        },
        "endLoc": {
          "line": 160,
          "column": 2,
          "position": 1425
        }
      },
      "secondFile": {
        "name": "src/components/weapons/WeaponSystem.tsx",
        "start": 109,
        "end": 118,
        "startLoc": {
          "line": 109,
          "column": 16,
          "position": 824
        },
        "endLoc": {
          "line": 118,
          "column": 2,
          "position": 890
        }
      }
    },
    {
      "format": "tsx",
      "lines": 16,
      "fragment": "}\n          >\n            <div className=\"mb-1 flex items-center justify-between\">\n              <span className=\"text-sm font-medium text-white\">{effect.name}</span>\n              {effect.active ? (\n                <span className=\"text-xs text-green-400\">Active</span>\n              ) : (\n                <span className=\"text-xs text-gray-400\">{effect.cooldown}s</span>\n              )}\n            </div>\n            <p className=\"text-xs text-gray-400\">{effect.description}</p>\n          </button>\n        ))}\n      </div>\n    </div>\n  );",
      "tokens": 0,
      "firstFile": {
        "name": "src/components/weapons/WeaponComponents.tsx",
        "start": 139,
        "end": 154,
        "startLoc": {
          "line": 139,
          "column": 15,
          "position": 1099
        },
        "endLoc": {
          "line": 154,
          "column": 2,
          "position": 1236
        }
      },
      "secondFile": {
        "name": "src/components/weapons/WeaponControl.tsx",
        "start": 128,
        "end": 143,
        "startLoc": {
          "line": 128,
          "column": 19,
          "position": 1185
        },
        "endLoc": {
          "line": 143,
          "column": 2,
          "position": 1322
        }
      }
    },
    {
      "format": "tsx",
      "lines": 8,
      "fragment": "\">\n          <div className=\"text-xs font-medium text-gray-300\">{upgrade.specialEffect.name}</div>\n          <div className=\"text-xs text-gray-400\">{upgrade.specialEffect.description}</div>\n        </div>\n      )}\n\n      {/* Requirements */}\n      <div className=\"mb-3 space-y-2",
      "tokens": 0,
      "firstFile": {
        "name": "src/components/weapons/WeaponComponents.tsx",
        "start": 219,
        "end": 226,
        "startLoc": {
          "line": 219,
          "column": 32,
          "position": 1764
        },
        "endLoc": {
          "line": 226,
          "column": 15,
          "position": 1831
        }
      },
      "secondFile": {
        "name": "src/components/weapons/WeaponUpgradeSystem.tsx",
        "start": 97,
        "end": 106,
        "startLoc": {
          "line": 97,
          "column": 29,
          "position": 873
        },
        "endLoc": {
          "line": 106,
          "column": 15,
          "position": 944
        }
      }
    },
    {
      "format": "tsx",
      "lines": 18,
      "fragment": ");\n  const isDragging = useRef(false);\n  const lastPosition = useRef({ x: 0, y: 0 });\n\n  const handleMouseDown = (e: React.MouseEvent) => {\n    isDragging.current = true;\n    lastPosition.current = { x: e.clientX, y: e.clientY };\n  };\n\n  const handleMouseMove = (e: React.MouseEvent) => {\n    if (!isDragging.current) {\n      return;\n    }\n\n    const deltaX = e.clientX - lastPosition.current.x;\n    const deltaY = e.clientY - lastPosition.current.y;\n\n    setView",
      "tokens": 0,
      "firstFile": {
        "name": "src/components/ui/SprawlView.tsx",
        "start": 189,
        "end": 206,
        "startLoc": {
          "line": 189,
          "column": 5,
          "position": 1615
        },
        "endLoc": {
          "line": 206,
          "column": 8,
          "position": 1802
        }
      },
      "secondFile": {
        "name": "src/components/buildings/modules/ExplorationHub/ExplorationWindow.tsx",
        "start": 133,
        "end": 49,
        "startLoc": {
          "line": 133,
          "column": 2,
          "position": 1052
        },
        "endLoc": {
          "line": 49,
          "column": 12,
          "position": 464
        }
      }
    },
    {
      "format": "tsx",
      "lines": 12,
      "fragment": ",\n    }));\n\n    lastPosition.current = { x: e.clientX, y: e.clientY };\n  };\n\n  const handleMouseUp = () => {\n    isDragging.current = false;\n  };\n\n  const handleZoom = (delta: number) => {\n    setView",
      "tokens": 0,
      "firstFile": {
        "name": "src/components/ui/SprawlView.tsx",
        "start": 211,
        "end": 222,
        "startLoc": {
          "line": 211,
          "column": 2,
          "position": 1854
        },
        "endLoc": {
          "line": 222,
          "column": 8,
          "position": 1943
        }
      },
      "secondFile": {
        "name": "src/components/buildings/modules/MiningHub/MiningMap.tsx",
        "start": 51,
        "end": 62,
        "startLoc": {
          "line": 51,
          "column": 7,
          "position": 497
        },
        "endLoc": {
          "line": 62,
          "column": 8,
          "position": 586
        }
      }
    },
    {
      "format": "javascript",
      "lines": 21,
      "fragment": "}>{resource.baseValue}</span>\n        </div>\n\n        <div style={styles.resourceProperty}>\n          <span style={styles.resourcePropertyLabel}>Weight:</span>\n          <span style={styles.resourcePropertyValue}>{resource.weight}</span>\n        </div>\n\n        <div style={styles.resourceProperty}>\n          <span style={styles.resourcePropertyLabel}>Storage Efficiency:</span>\n          <span style={styles.resourcePropertyValue}>\n            {(resource.storageEfficiency * 100).toFixed(0)}%\n          </span>\n        </div>\n\n        <div style={styles.resourceProperty}>\n          <span style={styles.resourcePropertyLabel}>Max Storage:</span>\n          <span style={styles.resourcePropertyValue}>{resource.defaultMax}</span>\n        </div>\n\n        <div style={styles.qualityLevels",
      "tokens": 0,
      "firstFile": {
        "name": "src/components/ui/ResourceRegistryUI.tsx",
        "start": 480,
        "end": 500,
        "startLoc": {
          "line": 480,
          "column": 22,
          "position": 3584
        },
        "endLoc": {
          "line": 500,
          "column": 14,
          "position": 3804
        }
      },
      "secondFile": {
        "name": "src/components/ui/ResourceRegistryUI.tsx",
        "start": 472,
        "end": 495,
        "startLoc": {
          "line": 472,
          "column": 12,
          "position": 3517
        },
        "endLoc": {
          "line": 495,
          "column": 17,
          "position": 3744
        }
      }
    },
    {
      "format": "tsx",
      "lines": 40,
      "fragment": "= useRef<HTMLDivElement>(null);\n  const isDragging = useRef(false);\n  const lastPosition = useRef({ x: 0, y: 0 });\n\n  const handleMouseDown = (e: React.MouseEvent) => {\n    isDragging.current = true;\n    lastPosition.current = { x: e.clientX, y: e.clientY };\n  };\n\n  const handleMouseMove = (e: React.MouseEvent) => {\n    if (!isDragging.current) {\n      return;\n    }\n\n    const deltaX = e.clientX - lastPosition.current.x;\n    const deltaY = e.clientY - lastPosition.current.y;\n\n    setView(prev => ({\n      ...prev,\n      position: {\n        x: prev.position.x + deltaX,\n        y: prev.position.y + deltaY,\n      },\n    }));\n\n    lastPosition.current = { x: e.clientX, y: e.clientY };\n  };\n\n  const handleMouseUp = () => {\n    isDragging.current = false;\n  };\n\n  const handleZoom = (delta: number) => {\n    setView(prev => ({\n      ...prev,\n      zoom: Math.max(0.5, Math.min(2, prev.zoom + delta)),\n    }));\n  };\n\n  const selectSystem",
      "tokens": 0,
      "firstFile": {
        "name": "src/components/ui/GalaxyMap.tsx",
        "start": 186,
        "end": 225,
        "startLoc": {
          "line": 186,
          "column": 2,
          "position": 1711
        },
        "endLoc": {
          "line": 225,
          "column": 13,
          "position": 2104
        }
      },
      "secondFile": {
        "name": "src/components/ui/SprawlView.tsx",
        "start": 189,
        "end": 228,
        "startLoc": {
          "line": 189,
          "column": 2,
          "position": 1607
        },
        "endLoc": {
          "line": 228,
          "column": 11,
          "position": 2000
        }
      }
    },
    {
      "format": "tsx",
      "lines": 11,
      "fragment": ">\n        <div\n          className=\"absolute inset-0 transition-transform duration-300 ease-out\"\n          style={{\n            transform: `translate(${view.position.x}px, ${view.position.y}px) scale(${view.zoom})`,\n          }}\n        >\n          {/* Trade Routes */}\n          {view.activeOverlays.includes('trade') && (\n            <svg className=\"pointer-events-none absolute inset-0\">\n              {mockSystems",
      "tokens": 0,
      "firstFile": {
        "name": "src/components/ui/GalaxyMap.tsx",
        "start": 362,
        "end": 372,
        "startLoc": {
          "line": 362,
          "column": 7,
          "position": 3124
        },
        "endLoc": {
          "line": 372,
          "column": 12,
          "position": 3210
        }
      },
      "secondFile": {
        "name": "src/components/ui/SprawlView.tsx",
        "start": 425,
        "end": 435,
        "startLoc": {
          "line": 425,
          "column": 9,
          "position": 3506
        },
        "endLoc": {
          "line": 435,
          "column": 7,
          "position": 3592
        }
      }
    },
    {
      "format": "tsx",
      "lines": 9,
      "fragment": "=> {\n      const x =\n        padding.left + ((snapshot.timestamp - startTime) / (endTime - startTime)) * chartWidth;\n      const y =\n        padding.top +\n        chartHeight -\n        ((snapshot.usedHeapSizeMB - minMemory) / (maxMemory - minMemory)) * chartHeight;\n\n      ctx",
      "tokens": 0,
      "firstFile": {
        "name": "src/components/performance/LongSessionMemoryVisualizer.tsx",
        "start": 374,
        "end": 382,
        "startLoc": {
          "line": 374,
          "column": 2,
          "position": 3112
        },
        "endLoc": {
          "line": 382,
          "column": 4,
          "position": 3206
        }
      },
      "secondFile": {
        "name": "src/components/performance/LongSessionMemoryVisualizer.tsx",
        "start": 356,
        "end": 364,
        "startLoc": {
          "line": 356,
          "column": 2,
          "position": 2947
        },
        "endLoc": {
          "line": 364,
          "column": 3,
          "position": 3041
        }
      }
    },
    {
      "format": "tsx",
      "lines": 17,
      "fragment": ">\n            <li className=\"flex items-start\">\n              <svg\n                className=\"mr-1 mt-0.5 h-5 w-5 text-red-500\"\n                fill=\"none\"\n                stroke=\"currentColor\"\n                viewBox=\"0 0 24 24\"\n                xmlns=\"http://www.w3.org/2000/svg\"\n              >\n                <path\n                  strokeLinecap=\"round\"\n                  strokeLinejoin=\"round\"\n                  strokeWidth={2}\n                  d=\"M12 9v2m0 4h.01m-6.938 4h13.856c1.54 0 2.502-1.667 1.732-3L13.732 4c-.77-1.333-2.694-1.333-3.464 0L3.34 16c-.77 1.333.192 3 1.732 3z\"\n                />\n              </svg>\n              <span>High",
      "tokens": 0,
      "firstFile": {
        "name": "src/components/performance/DeviceCapabilityReport.tsx",
        "start": 556,
        "end": 572,
        "startLoc": {
          "line": 556,
          "column": 3,
          "position": 3648
        },
        "endLoc": {
          "line": 572,
          "column": 5,
          "position": 3736
        }
      },
      "secondFile": {
        "name": "src/components/performance/DeviceCapabilityReport.tsx",
        "start": 539,
        "end": 555,
        "startLoc": {
          "line": 539,
          "column": 2,
          "position": 3540
        },
        "endLoc": {
          "line": 555,
          "column": 9,
          "position": 3628
        }
      }
    },
    {
      "format": "tsx",
      "lines": 14,
      "fragment": "\"\n                fill=\"none\"\n                stroke=\"currentColor\"\n                viewBox=\"0 0 24 24\"\n                xmlns=\"http://www.w3.org/2000/svg\"\n              >\n                <path\n                  strokeLinecap=\"round\"\n                  strokeLinejoin=\"round\"\n                  strokeWidth={2}\n                  d=\"M12 9v2m0 4h.01m-6.938 4h13.856c1.54 0 2.502-1.667 1.732-3L13.732 4c-.77-1.333-2.694-1.333-3.464 0L3.34 16c-.77 1.333.192 3 1.732 3z\"\n                />\n              </svg>\n              <span>JavaScript",
      "tokens": 0,
      "firstFile": {
        "name": "src/components/performance/DeviceCapabilityReport.tsx",
        "start": 576,
        "end": 589,
        "startLoc": {
          "line": 576,
          "column": 36,
          "position": 3775
        },
        "endLoc": {
          "line": 589,
          "column": 11,
          "position": 3842
        }
      },
      "secondFile": {
        "name": "src/components/performance/DeviceCapabilityReport.tsx",
        "start": 542,
        "end": 555,
        "startLoc": {
          "line": 542,
          "column": 33,
          "position": 3561
        },
        "endLoc": {
          "line": 555,
          "column": 9,
          "position": 3628
        }
      }
    },
    {
      "format": "tsx",
      "lines": 17,
      "fragment": ">\n            <li className=\"flex items-start\">\n              <svg\n                className=\"mr-1 mt-0.5 h-5 w-5 text-green-500\"\n                fill=\"none\"\n                stroke=\"currentColor\"\n                viewBox=\"0 0 24 24\"\n                xmlns=\"http://www.w3.org/2000/svg\"\n              >\n                <path\n                  strokeLinecap=\"round\"\n                  strokeLinejoin=\"round\"\n                  strokeWidth={2}\n                  d=\"M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z\"\n                />\n              </svg>\n              <span>Reduce",
      "tokens": 0,
      "firstFile": {
        "name": "src/components/performance/DeviceCapabilityReport.tsx",
        "start": 613,
        "end": 629,
        "startLoc": {
          "line": 613,
          "column": 3,
          "position": 4016
        },
        "endLoc": {
          "line": 629,
          "column": 7,
          "position": 4104
        }
      },
      "secondFile": {
        "name": "src/components/performance/DeviceCapabilityReport.tsx",
        "start": 596,
        "end": 612,
        "startLoc": {
          "line": 596,
          "column": 2,
          "position": 3910
        },
        "endLoc": {
          "line": 612,
          "column": 10,
          "position": 3998
        }
      }
    },
    {
      "format": "tsx",
      "lines": 18,
      "fragment": "</span>\n            </li>\n            <li className=\"flex items-start\">\n              <svg\n                className=\"mr-1 mt-0.5 h-5 w-5 text-green-500\"\n                fill=\"none\"\n                stroke=\"currentColor\"\n                viewBox=\"0 0 24 24\"\n                xmlns=\"http://www.w3.org/2000/svg\"\n              >\n                <path\n                  strokeLinecap=\"round\"\n                  strokeLinejoin=\"round\"\n                  strokeWidth={2}\n                  d=\"M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z\"\n                />\n              </svg>\n              <span>Optimize",
      "tokens": 0,
      "firstFile": {
        "name": "src/components/performance/DeviceCapabilityReport.tsx",
        "start": 629,
        "end": 646,
        "startLoc": {
          "line": 629,
          "column": 10,
          "position": 4117
        },
        "endLoc": {
          "line": 646,
          "column": 9,
          "position": 4212
        }
      },
      "secondFile": {
        "name": "src/components/performance/DeviceCapabilityReport.tsx",
        "start": 612,
        "end": 612,
        "startLoc": {
          "line": 612,
          "column": 15,
          "position": 4009
        },
        "endLoc": {
          "line": 612,
          "column": 10,
          "position": 3998
        }
      }
    },
    {
      "format": "tsx",
      "lines": 14,
      "fragment": ";\n  };\n\n  if (isLoading) {\n    return (\n      <div className=\"flex h-96 items-center justify-center\">\n        <div className=\"h-12 w-12 animate-spin rounded-full border-b-2 border-t-2 border-blue-500\"></div>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"py-6\">\n      <div className=\"mb-6",
      "tokens": 0,
      "firstFile": {
        "name": "src/components/performance/DeviceCapabilityReport.tsx",
        "start": 769,
        "end": 782,
        "startLoc": {
          "line": 769,
          "column": 2,
          "position": 5210
        },
        "endLoc": {
          "line": 782,
          "column": 5,
          "position": 5292
        }
      },
      "secondFile": {
        "name": "src/components/performance/GeographicAnalysisDashboard.tsx",
        "start": 611,
        "end": 624,
        "startLoc": {
          "line": 611,
          "column": 2,
          "position": 4675
        },
        "endLoc": {
          "line": 624,
          "column": 39,
          "position": 4757
        }
      }
    },
    {
      "format": "tsx",
      "lines": 16,
      "fragment": "0,\n            status: 'neutral',\n            tradingEnabled: true,\n            lastInteraction: Date.now(),\n          }}\n          availableActions={[\n            {\n              type: 'ceasefire',\n              name: 'Negotiate Ceasefire',\n              description: 'Attempt to establish temporary peace',\n              requirements: [{ type: 'Credits', value: 5000 }],\n              available: true,\n            },\n          ]}\n          onAction={() => {}}\n          onClose={() => setShowDiplomacy",
      "tokens": 0,
      "firstFile": {
        "name": "src/components/factions/FactionManager.tsx",
        "start": 195,
        "end": 210,
        "startLoc": {
          "line": 195,
          "column": 2,
          "position": 1709
        },
        "endLoc": {
          "line": 210,
          "column": 17,
          "position": 1830
        }
      },
      "secondFile": {
        "name": "src/components/ships/FactionShips/FactionDashboard.tsx",
        "start": 292,
        "end": 307,
        "startLoc": {
          "line": 292,
          "column": 2,
          "position": 2639
        },
        "endLoc": {
          "line": 307,
          "column": 19,
          "position": 2760
        }
      }
    },
    {
      "format": "tsx",
      "lines": 16,
      "fragment": ",\n              lastUpdate: Date.now(),\n            };\n          }\n          return ship;\n        })\n      );\n\n      setUpdateStats(prev => ({\n        ...prev,\n        sectorsUpdated: prev.sectorsUpdated + 1,\n        shipsUpdated: prev.shipsUpdated + 1,\n      }));\n    };\n\n    const handleAnomalyDetected",
      "tokens": 0,
      "firstFile": {
        "name": "src/components/exploration/RealTimeMapUpdates.tsx",
        "start": 179,
        "end": 194,
        "startLoc": {
          "line": 179,
          "column": 12,
          "position": 1459
        },
        "endLoc": {
          "line": 194,
          "column": 22,
          "position": 1549
        }
      },
      "secondFile": {
        "name": "src/components/exploration/RealTimeMapUpdates.tsx",
        "start": 138,
        "end": 153,
        "startLoc": {
          "line": 138,
          "column": 9,
          "position": 1163
        },
        "endLoc": {
          "line": 153,
          "column": 19,
          "position": 1253
        }
      }
    },
    {
      "format": "tsx",
      "lines": 14,
      "fragment": "interface Sector {\n  id: string;\n  name: string;\n  status: 'unmapped' | 'mapped' | 'scanning' | 'analyzed';\n  coordinates: { x: number; y: number };\n  resourcePotential: number;\n  habitabilityScore: number;\n  anomalies: Anomaly[];\n  lastScanned?: number;\n  resources?: Array<{\n    type: ResourceType;\n    amount: number;\n  }>;\n  factionControl",
      "tokens": 0,
      "firstFile": {
        "name": "src/components/exploration/GalaxyMappingSystem.tsx",
        "start": 7,
        "end": 20,
        "startLoc": {
          "line": 7,
          "column": 1,
          "position": 82
        },
        "endLoc": {
          "line": 20,
          "column": 15,
          "position": 201
        }
      },
      "secondFile": {
        "name": "src/components/exploration/RealTimeMapUpdates.tsx",
        "start": 16,
        "end": 29,
        "startLoc": {
          "line": 16,
          "column": 1,
          "position": 159
        },
        "endLoc": {
          "line": 29,
          "column": 2,
          "position": 277
        }
      }
    },
    {
      "format": "tsx",
      "lines": 11,
      "fragment": ";\n\n      setCosmicEvents(prev => [...prev, newEvent]);\n\n      // Remove event after duration\n      setTimeout(() => {\n        setCosmicEvents(prev => prev.filter(e => e.id !== newEvent.id));\n      }, newEvent.duration);\n    };\n\n    const interval = setInterval(generateEvent",
      "tokens": 0,
      "firstFile": {
        "name": "src/components/exploration/GalaxyMappingSystem.tsx",
        "start": 124,
        "end": 134,
        "startLoc": {
          "line": 124,
          "column": 2,
          "position": 1149
        },
        "endLoc": {
          "line": 134,
          "column": 14,
          "position": 1235
        }
      },
      "secondFile": {
        "name": "src/components/ui/GalaxyMap.tsx",
        "start": 127,
        "end": 136,
        "startLoc": {
          "line": 127,
          "column": 2,
          "position": 1115
        },
        "endLoc": {
          "line": 136,
          "column": 11,
          "position": 1200
        }
      }
    },
    {
      "format": "tsx",
      "lines": 11,
      "fragment": "{/* Aurora Effect */}\n        <div\n          className=\"absolute inset-0 bg-gradient-to-b from-indigo-500/5 via-transparent to-transparent\"\n          style={{\n            transform: `translateY(${Math.sin(view.dayNightCycle * Math.PI * 2) * 20}px)`,\n            opacity: 0.3 + Math.sin(view.dayNightCycle * Math.PI * 2) * 0.2,\n          }}\n        />\n      </div>\n\n      {/* Overlay Controls */",
      "tokens": 0,
      "firstFile": {
        "name": "src/components/exploration/GalaxyMappingSystem.tsx",
        "start": 180,
        "end": 190,
        "startLoc": {
          "line": 180,
          "column": 9,
          "position": 1641
        },
        "endLoc": {
          "line": 190,
          "column": 23,
          "position": 1738
        }
      },
      "secondFile": {
        "name": "src/components/ui/SprawlView.tsx",
        "start": 315,
        "end": 325,
        "startLoc": {
          "line": 315,
          "column": 11,
          "position": 2657
        },
        "endLoc": {
          "line": 325,
          "column": 15,
          "position": 2754
        }
      }
    },
    {
      "format": "tsx",
      "lines": 12,
      "fragment": "}`}\n            style={{\n              width: `${event?.radius * 2}px`,\n              height: `${event?.radius * 2}px`,\n            }}\n          >\n            <div className=\"absolute inset-0 flex items-center justify-center\">\n              {event?.type === 'storm' && <Zap className=\"h-8 w-8 text-purple-400\" />}\n              {event?.type === 'solarFlare' && (\n                <AlertTriangle className=\"h-8 w-8 text-orange-400\" />\n              )}\n              {event?.type === 'anomaly' && <",
      "tokens": 0,
      "firstFile": {
        "name": "src/components/exploration/GalaxyMappingSystem.tsx",
        "start": 264,
        "end": 275,
        "startLoc": {
          "line": 264,
          "column": 13,
          "position": 2209
        },
        "endLoc": {
          "line": 275,
          "column": 2,
          "position": 2340
        }
      },
      "secondFile": {
        "name": "src/components/ui/GalaxyMap.tsx",
        "start": 427,
        "end": 438,
        "startLoc": {
          "line": 427,
          "column": 17,
          "position": 3635
        },
        "endLoc": {
          "line": 438,
          "column": 2,
          "position": 3766
        }
      }
    },
    {
      "format": "tsx",
      "lines": 12,
      "fragment": "{/* Tutorial Overlay */}\n      {view.showTutorial && (\n        <div className=\"fixed inset-0 z-50 flex items-center justify-center bg-black/50\">\n          <div className=\"max-w-md rounded-lg border border-gray-700 bg-gray-800/95 p-6 backdrop-blur-sm\">\n            <h3 className=\"mb-4 text-xl font-bold text-white\">Welcome to the Galaxy Map</h3>\n            <div className=\"space-y-4 text-gray-300\">\n              <p>• Click and drag to pan across the galaxy</p>\n              <p>• Use the mouse wheel or buttons to zoom in/out</p>\n              <p>• Click on star systems to view details and options</p>\n              <p>• Toggle overlays to view faction territories and trade routes</p>\n              <p>• Watch out for cosmic events that may affect travel!</p>\n              <",
      "tokens": 0,
      "firstFile": {
        "name": "src/components/exploration/GalaxyMappingSystem.tsx",
        "start": 295,
        "end": 306,
        "startLoc": {
          "line": 295,
          "column": 7,
          "position": 2448
        },
        "endLoc": {
          "line": 306,
          "column": 2,
          "position": 2655
        }
      },
      "secondFile": {
        "name": "src/components/ui/GalaxyMap.tsx",
        "start": 613,
        "end": 624,
        "startLoc": {
          "line": 613,
          "column": 7,
          "position": 5137
        },
        "endLoc": {
          "line": 624,
          "column": 3,
          "position": 5344
        }
      }
    },
    {
      "format": "tsx",
      "lines": 17,
      "fragment": "interface Sector {\n  id: string;\n  name: string;\n  status: 'unmapped' | 'mapped' | 'scanning' | 'analyzed';\n  coordinates: { x: number; y: number };\n  resourcePotential: number;\n  habitabilityScore: number;\n  anomalies: Anomaly[];\n  lastScanned?: number;\n  resources?: Array<{\n    type: ResourceType;\n    amount: number;\n  }>;\n  factionControl?: FactionControl;\n}\n\ninterface FactionControl",
      "tokens": 0,
      "firstFile": {
        "name": "src/components/exploration/GalaxyMapSystem.tsx",
        "start": 6,
        "end": 22,
        "startLoc": {
          "line": 6,
          "column": 1,
          "position": 71
        },
        "endLoc": {
          "line": 22,
          "column": 15,
          "position": 202
        }
      },
      "secondFile": {
        "name": "src/components/exploration/RealTimeMapUpdates.tsx",
        "start": 16,
        "end": 23,
        "startLoc": {
          "line": 16,
          "column": 1,
          "position": 159
        },
        "endLoc": {
          "line": 23,
          "column": 8,
          "position": 213
        }
      }
    },
    {
      "format": "tsx",
      "lines": 24,
      "fragment": "interface Sector {\n  id: string;\n  name: string;\n  status: 'unmapped' | 'mapped' | 'scanning' | 'analyzed';\n  coordinates: { x: number; y: number };\n  resourcePotential: number;\n  habitabilityScore: number;\n  anomalies: Anomaly[];\n  lastScanned?: number;\n  resources?: Array<{\n    type: ResourceType;\n    amount: number;\n  }>;\n}\n\ninterface Anomaly {\n  id: string;\n  type: 'artifact' | 'signal' | 'phenomenon';\n  severity: 'low' | 'medium' | 'high';\n  description: string;\n  investigated: boolean;\n}\n\ninterface",
      "tokens": 0,
      "firstFile": {
        "name": "src/components/exploration/ExplorationSystemIntegration.tsx",
        "start": 11,
        "end": 34,
        "startLoc": {
          "line": 11,
          "column": 1,
          "position": 68
        },
        "endLoc": {
          "line": 34,
          "column": 10,
          "position": 249
        }
      },
      "secondFile": {
        "name": "src/components/exploration/RealTimeMapUpdates.tsx",
        "start": 16,
        "end": 39,
        "startLoc": {
          "line": 16,
          "column": 1,
          "position": 159
        },
        "endLoc": {
          "line": 39,
          "column": 5,
          "position": 340
        }
      }
    },
    {
      "format": "tsx",
      "lines": 13,
      "fragment": ";\n}\n\ninterface Sector {\n  id: string;\n  name: string;\n  status: 'unmapped' | 'mapped' | 'scanning' | 'analyzed';\n  coordinates: { x: number; y: number };\n  resourcePotential: number;\n  habitabilityScore: number;\n  anomalies: Anomaly[];\n  lastScanned?: number;\n}",
      "tokens": 0,
      "firstFile": {
        "name": "src/components/exploration/ExplorationDataManager.tsx",
        "start": 25,
        "end": 37,
        "startLoc": {
          "line": 25,
          "column": 2,
          "position": 213
        },
        "endLoc": {
          "line": 37,
          "column": 2,
          "position": 308
        }
      },
      "secondFile": {
        "name": "src/components/exploration/RealTimeMapUpdates.tsx",
        "start": 13,
        "end": 25,
        "startLoc": {
          "line": 13,
          "column": 7,
          "position": 154
        },
        "endLoc": {
          "line": 25,
          "column": 10,
          "position": 250
        }
      }
    },
    {
      "format": "tsx",
      "lines": 10,
      "fragment": "\">\n                      <div className=\"mb-2 flex items-center\">\n                        <div className=\"mr-2\">\n                          {discovery.type === 'anomaly' ? (\n                            <AlertTriangle className=\"text-yellow-500\" size={18} />\n                          ) : (\n                            <Database className=\"text-blue-500\" size={18} />\n                          )}\n                        </div>\n                        <h4",
      "tokens": 0,
      "firstFile": {
        "name": "src/components/exploration/DiscoveryClassification.tsx",
        "start": 653,
        "end": 662,
        "startLoc": {
          "line": 653,
          "column": 24,
          "position": 5227
        },
        "endLoc": {
          "line": 662,
          "column": 3,
          "position": 5320
        }
      },
      "secondFile": {
        "name": "src/components/exploration/DiscoveryClassification.tsx",
        "start": 298,
        "end": 307,
        "startLoc": {
          "line": 298,
          "column": 48,
          "position": 2206
        },
        "endLoc": {
          "line": 307,
          "column": 3,
          "position": 2299
        }
      }
    },
    {
      "format": "tsx",
      "lines": 11,
      "fragment": ").map(([key, value]) => (\n                      <PropertyRow key={key}>\n                        <Typography variant=\"caption\" color=\"text.secondary\">\n                          {key}:\n                        </Typography>\n                        <Typography variant=\"caption\" fontWeight=\"medium\">\n                          {formatValue(value)}\n                        </Typography>\n                      </PropertyRow>\n                    ))}\n                  <",
      "tokens": 0,
      "firstFile": {
        "name": "src/components/exploration/DataPointVirtualList.tsx",
        "start": 269,
        "end": 279,
        "startLoc": {
          "line": 269,
          "column": 9,
          "position": 2203
        },
        "endLoc": {
          "line": 279,
          "column": 2,
          "position": 2300
        }
      },
      "secondFile": {
        "name": "src/components/exploration/DataPointVirtualList.tsx",
        "start": 252,
        "end": 263,
        "startLoc": {
          "line": 252,
          "column": 11,
          "position": 2040
        },
        "endLoc": {
          "line": 263,
          "column": 2,
          "position": 2138
        }
      }
    },
    {
      "format": "tsx",
      "lines": 10,
      "fragment": "const event: StandardizedEvent = {\n        type: EventType.MODULE_UPDATED,\n        moduleId: selectedConfig.id,\n        moduleType: 'exploration',\n        timestamp: Date.now(),\n        data: {\n          action: 'run_analysis',\n          configId: selectedConfig.id,\n          configType: selectedConfig.type,\n          status: 'error'",
      "tokens": 0,
      "firstFile": {
        "name": "src/components/exploration/DataAnalysisSystem.tsx",
        "start": 556,
        "end": 565,
        "startLoc": {
          "line": 556,
          "column": 7,
          "position": 4564
        },
        "endLoc": {
          "line": 565,
          "column": 8,
          "position": 4646
        }
      },
      "secondFile": {
        "name": "src/components/exploration/DataAnalysisSystem.tsx",
        "start": 529,
        "end": 538,
        "startLoc": {
          "line": 529,
          "column": 7,
          "position": 4363
        },
        "endLoc": {
          "line": 538,
          "column": 11,
          "position": 4445
        }
      }
    },
    {
      "format": "tsx",
      "lines": 8,
      "fragment": ").map(([key, value]) => (\n                              <Typography key={key} variant=\"body2\">\n                                <strong>{key}:</strong>{' '}\n                                {typeof value === 'object' ? JSON.stringify(value) : String(value)}\n                              </Typography>\n                            ))}\n                          </div>\n                        <",
      "tokens": 0,
      "firstFile": {
        "name": "src/components/exploration/DataAnalysisSystem.tsx",
        "start": 844,
        "end": 851,
        "startLoc": {
          "line": 844,
          "column": 9,
          "position": 6983
        },
        "endLoc": {
          "line": 851,
          "column": 2,
          "position": 7075
        }
      },
      "secondFile": {
        "name": "src/components/exploration/DataAnalysisSystem.tsx",
        "start": 829,
        "end": 837,
        "startLoc": {
          "line": 829,
          "column": 11,
          "position": 6802
        },
        "endLoc": {
          "line": 837,
          "column": 2,
          "position": 6895
        }
      }
    },
    {
      "format": "tsx",
      "lines": 27,
      "fragment": ";\nimport { ResourceType } from './../../types/resources/ResourceTypes';\n\ninterface Sector {\n  id: string;\n  name: string;\n  status: 'unmapped' | 'mapped' | 'scanning' | 'analyzed';\n  coordinates: { x: number; y: number };\n  resourcePotential: number;\n  habitabilityScore: number;\n  anomalies: Anomaly[];\n  lastScanned?: number;\n  resources?: Array<{\n    type: ResourceType;\n    amount: number;\n  }>;\n}\n\ninterface Anomaly {\n  id: string;\n  type: 'artifact' | 'signal' | 'phenomenon';\n  severity: 'low' | 'medium' | 'high';\n  description: string;\n  investigated: boolean;\n}\n\ninterface ReconShip",
      "tokens": 0,
      "firstFile": {
        "name": "src/components/exploration/AutomatedSectorScanner.tsx",
        "start": 9,
        "end": 35,
        "startLoc": {
          "line": 9,
          "column": 36,
          "position": 100
        },
        "endLoc": {
          "line": 35,
          "column": 10,
          "position": 299
        }
      },
      "secondFile": {
        "name": "src/components/exploration/GalaxyMapSystem.tsx",
        "start": 3,
        "end": 34,
        "startLoc": {
          "line": 3,
          "column": 8,
          "position": 55
        },
        "endLoc": {
          "line": 34,
          "column": 34,
          "position": 251
        }
      }
    },
    {
      "format": "tsx",
      "lines": 20,
      "fragment": ";\n}\n\ninterface Anomaly {\n  id: string;\n  type: 'artifact' | 'signal' | 'phenomenon';\n  severity: 'low' | 'medium' | 'high';\n  description: string;\n  investigated: boolean;\n}\n\ninterface ReconShip {\n  id: string;\n  name: string;\n  status: 'idle' | 'scanning' | 'investigating' | 'returning';\n  targetSector?: string;\n  experience: number;\n  specialization: 'mapping' | 'anomaly' | 'resource';\n  efficiency: number;\n  lastUpdate",
      "tokens": 0,
      "firstFile": {
        "name": "src/components/exploration/AutomatedSectorScanner.tsx",
        "start": 24,
        "end": 43,
        "startLoc": {
          "line": 24,
          "column": 2,
          "position": 232
        },
        "endLoc": {
          "line": 43,
          "column": 11,
          "position": 374
        }
      },
      "secondFile": {
        "name": "src/components/buildings/modules/ExplorationHub/ExplorationWindow.tsx",
        "start": 29,
        "end": 48,
        "startLoc": {
          "line": 29,
          "column": 7,
          "position": 239
        },
        "endLoc": {
          "line": 48,
          "column": 2,
          "position": 380
        }
      }
    },
    {
      "format": "tsx",
      "lines": 11,
      "fragment": "interface Anomaly {\n  id: string;\n  type: 'artifact' | 'signal' | 'phenomenon';\n  severity: 'low' | 'medium' | 'high';\n  description: string;\n  investigated: boolean;\n  discoveryDate: number;\n  sectorId: string;\n  sectorName: string;\n  coordinates: { x: number; y: number };\n  analysisProgress",
      "tokens": 0,
      "firstFile": {
        "name": "src/components/exploration/AnomalyAnalysis.tsx",
        "start": 16,
        "end": 26,
        "startLoc": {
          "line": 16,
          "column": 1,
          "position": 78
        },
        "endLoc": {
          "line": 26,
          "column": 17,
          "position": 177
        }
      },
      "secondFile": {
        "name": "src/components/exploration/ExplorationDataManager.tsx",
        "start": 16,
        "end": 26,
        "startLoc": {
          "line": 16,
          "column": 1,
          "position": 117
        },
        "endLoc": {
          "line": 26,
          "column": 2,
          "position": 215
        }
      }
    },
    {
      "format": "tsx",
      "lines": 24,
      "fragment": "import AddIcon from '@mui/icons-material/Add';\nimport DeleteIcon from '@mui/icons-material/Delete';\nimport Settings from '@mui/icons-material/Settings';\nimport {\n    Button,\n    Dialog,\n    DialogActions,\n    DialogContent,\n    DialogTitle,\n    FormControl,\n    IconButton,\n    InputLabel,\n    List,\n    ListItem,\n    ListItemText,\n    MenuItem,\n    Select,\n    TextField,\n    Typography,\n} from '@mui/material';\nimport * as React from 'react';\nimport { useState } from 'react';\nimport {\n    AnalysisConfig",
      "tokens": 0,
      "firstFile": {
        "name": "src/components/exploration/AnalysisConfigManager.tsx",
        "start": 1,
        "end": 24,
        "startLoc": {
          "line": 1,
          "column": 1,
          "position": 0
        },
        "endLoc": {
          "line": 24,
          "column": 15,
          "position": 129
        }
      },
      "secondFile": {
        "name": "src/components/exploration/DatasetManager.tsx",
        "start": 1,
        "end": 23,
        "startLoc": {
          "line": 1,
          "column": 1,
          "position": 0
        },
        "endLoc": {
          "line": 23,
          "column": 8,
          "position": 128
        }
      }
    },
    {
      "format": "tsx",
      "lines": 19,
      "fragment": "* 100)}%\n                </span>\n              </div>\n              <input\n                type=\"range\"\n                min=\"0\"\n                max=\"1\"\n                step=\"0.05\"\n                value={filters.minHabitabilityScore}\n                onChange={e => handleHabitabilityScoreChange(parseFloat(e.target.value))}\n                className=\"w-full\"\n              />\n              <div className=\"mt-1 flex justify-between text-xs text-gray-500\">\n                <span>0%</span>\n                <span>50%</span>\n                <span>100%</span>\n              </div>\n            </div>\n          </",
      "tokens": 0,
      "firstFile": {
        "name": "src/components/exploration/AdvancedFilteringSystem.tsx",
        "start": 318,
        "end": 336,
        "startLoc": {
          "line": 318,
          "column": 2,
          "position": 2528
        },
        "endLoc": {
          "line": 336,
          "column": 3,
          "position": 2660
        }
      },
      "secondFile": {
        "name": "src/components/exploration/AdvancedFilteringSystem.tsx",
        "start": 294,
        "end": 313,
        "startLoc": {
          "line": 294,
          "column": 2,
          "position": 2335
        },
        "endLoc": {
          "line": 313,
          "column": 2,
          "position": 2468
        }
      }
    },
    {
      "format": "tsx",
      "lines": 14,
      "fragment": "// Clear unknown previous errors\n      if (error) {\n        setError(null);\n      }\n    } catch (err) {\n      const error = err instanceof Error ? err : new Error(String(err));\n\n      // Log error\n      errorLoggingService.logError(error, ErrorType.RUNTIME, undefined, {\n        component: 'Chart',\n        renderer,\n        chartType: type,\n        dataSize: data?.datasets.reduce((acc, dataset) => acc + dataset.data?.length, 0),\n        action",
      "tokens": 0,
      "firstFile": {
        "name": "src/visualization/Chart.tsx",
        "start": 339,
        "end": 352,
        "startLoc": {
          "line": 339,
          "column": 7,
          "position": 2417
        },
        "endLoc": {
          "line": 352,
          "column": 7,
          "position": 2556
        }
      },
      "secondFile": {
        "name": "src/visualization/Chart.tsx",
        "start": 299,
        "end": 312,
        "startLoc": {
          "line": 299,
          "column": 7,
          "position": 2108
        },
        "endLoc": {
          "line": 312,
          "column": 2,
          "position": 2247
        }
      }
    },
    {
      "format": "typescript",
      "lines": 14,
      "fragment": ",\n    IRON: ResourceType.IRON,\n    COPPER: ResourceType.COPPER,\n    TITANIUM: ResourceType.TITANIUM,\n    URANIUM: ResourceType.URANIUM,\n    WATER: ResourceType.WATER,\n    HELIUM: ResourceType.HELIUM,\n    DEUTERIUM: ResourceType.DEUTERIUM,\n    ANTIMATTER: ResourceType.ANTIMATTER,\n    DARK_MATTER: ResourceType.DARK_MATTER,\n    EXOTIC_MATTER: ResourceType.EXOTIC_MATTER,\n  };\n\n  // Mapping from enum resource types to string resource types",
      "tokens": 0,
      "firstFile": {
        "name": "src/utils/ResourceTypeConverter.ts",
        "start": 56,
        "end": 69,
        "startLoc": {
          "line": 56,
          "column": 8,
          "position": 287
        },
        "endLoc": {
          "line": 69,
          "column": 61,
          "position": 385
        }
      },
      "secondFile": {
        "name": "src/utils/resources/ResourceTypeConverter.ts",
        "start": 21,
        "end": 36,
        "startLoc": {
          "line": 21,
          "column": 5,
          "position": 120
        },
        "endLoc": {
          "line": 36,
          "column": 4,
          "position": 216
        }
      }
    },
    {
      "format": "typescript",
      "lines": 28,
      "fragment": ": Record<ResourceType, string> = {\n    [ResourceType.MINERALS]: 'MINERALS',\n    [ResourceType.ENERGY]: 'ENERGY',\n    [ResourceType.POPULATION]: 'POPULATION',\n    [ResourceType.RESEARCH]: 'RESEARCH',\n    [ResourceType.PLASMA]: 'PLASMA',\n    [ResourceType.GAS]: 'GAS',\n    [ResourceType.EXOTIC]: 'EXOTIC',\n    [ResourceType.ORGANIC]: 'ORGANIC',\n    [ResourceType.FOOD]: 'FOOD',\n    [ResourceType.IRON]: 'IRON',\n    [ResourceType.COPPER]: 'COPPER',\n    [ResourceType.TITANIUM]: 'TITANIUM',\n    [ResourceType.URANIUM]: 'URANIUM',\n    [ResourceType.WATER]: 'WATER',\n    [ResourceType.HELIUM]: 'HELIUM',\n    [ResourceType.DEUTERIUM]: 'DEUTERIUM',\n    [ResourceType.ANTIMATTER]: 'ANTIMATTER',\n    [ResourceType.DARK_MATTER]: 'DARK_MATTER',\n    [ResourceType.EXOTIC_MATTER]: 'EXOTIC_MATTER',\n  };\n\n  /**\n   * Convert a string resource type to an enum resource type\n   *\n   * @param stringType The string resource type\n   * @returns The enum resource type or undefined if not found\n   */",
      "tokens": 0,
      "firstFile": {
        "name": "src/utils/ResourceTypeConverter.ts",
        "start": 70,
        "end": 97,
        "startLoc": {
          "line": 70,
          "column": 16,
          "position": 393
        },
        "endLoc": {
          "line": 97,
          "column": 6,
          "position": 622
        }
      },
      "secondFile": {
        "name": "src/utils/resources/ResourceTypeConverter.ts",
        "start": 37,
        "end": 63,
        "startLoc": {
          "line": 37,
          "column": 19,
          "position": 221
        },
        "endLoc": {
          "line": 63,
          "column": 4,
          "position": 486
        }
      }
    },
    {
      "format": "typescript",
      "lines": 7,
      "fragment": "breakpoints: {\n    [ThemeBreakpoint.XS]: '0px',\n    [ThemeBreakpoint.SM]: '600px',\n    [ThemeBreakpoint.MD]: '960px',\n    [ThemeBreakpoint.LG]: '1280px',\n    [ThemeBreakpoint.XL]: '1920px',\n    [ThemeBreakpoint.XXL]: '2560px', // Add XXL breakpoint to match ThemeBreakpoint enum",
      "tokens": 0,
      "firstFile": {
        "name": "src/styles/mediaQueries.ts",
        "start": 179,
        "end": 185,
        "startLoc": {
          "line": 179,
          "column": 3,
          "position": 749
        },
        "endLoc": {
          "line": 185,
          "column": 52,
          "position": 820
        }
      },
      "secondFile": {
        "name": "src/ui/theme/defaultTheme.ts",
        "start": 153,
        "end": 160,
        "startLoc": {
          "line": 153,
          "column": 3,
          "position": 1029
        },
        "endLoc": {
          "line": 160,
          "column": 2,
          "position": 1101
        }
      }
    },
    {
      "format": "typescript",
      "lines": 11,
      "fragment": ";\n    this.metadata.metrics = metrics;\n\n    // Release worker\n    const workerEntry = Array.from(this.workerPool.entries()).find(([, t]) => t === task);\n    const worker = workerEntry?.[0];\n    if (worker) {\n      this.workerPool.set(worker, null);\n    }\n\n    // Call error handler",
      "tokens": 0,
      "firstFile": {
        "name": "src/services/WorkerService.ts",
        "start": 275,
        "end": 285,
        "startLoc": {
          "line": 275,
          "column": 2,
          "position": 2418
        },
        "endLoc": {
          "line": 285,
          "column": 22,
          "position": 2519
        }
      },
      "secondFile": {
        "name": "src/services/WorkerService.ts",
        "start": 246,
        "end": 257,
        "startLoc": {
          "line": 246,
          "column": 9,
          "position": 2112
        },
        "endLoc": {
          "line": 257,
          "column": 27,
          "position": 2214
        }
      }
    },
    {
      "format": "typescript",
      "lines": 17,
      "fragment": "): void {\n    if (!this.gl) {\n      throw new Error('WebGL context not initialized');\n    }\n\n    const storageExt = this.gl.getExtension('WEBGL_storage_buffer');\n    if (!storageExt) {\n      throw new Error('Storage buffers not supported');\n    }\n\n    const buffer = this.storageBuffers.get(name);\n    if (!buffer) {\n      throw new Error(`Storage buffer '${name}' not found`);\n    }\n\n    this.gl.bindBuffer(storageExt.SHADER_STORAGE_BUFFER, buffer.buffer);\n    this.gl.getBufferSubData",
      "tokens": 0,
      "firstFile": {
        "name": "src/services/WebGLService.ts",
        "start": 713,
        "end": 729,
        "startLoc": {
          "line": 713,
          "column": 16,
          "position": 5126
        },
        "endLoc": {
          "line": 729,
          "column": 17,
          "position": 5271
        }
      },
      "secondFile": {
        "name": "src/services/WebGLService.ts",
        "start": 694,
        "end": 710,
        "startLoc": {
          "line": 694,
          "column": 2,
          "position": 4948
        },
        "endLoc": {
          "line": 710,
          "column": 14,
          "position": 5093
        }
      }
    },
    {
      "format": "typescript",
      "lines": 12,
      "fragment": "// Update metrics\n        if (!this.metadata.metrics) {\n          this.metadata.metrics = {};\n        }\n        const { metrics } = this.metadata;\n        metrics.total_subscriptions = Array.from(this.subscriptions.values()).reduce(\n          (sum, subs) => sum + subs.length,\n          0\n        );\n        metrics.total_event_types = this.subscriptions.size;\n        this.metadata.metrics = metrics;\n      }",
      "tokens": 0,
      "firstFile": {
        "name": "src/services/EventPropagationService.ts",
        "start": 123,
        "end": 134,
        "startLoc": {
          "line": 123,
          "column": 9,
          "position": 1050
        },
        "endLoc": {
          "line": 134,
          "column": 2,
          "position": 1174
        }
      },
      "secondFile": {
        "name": "src/services/EventPropagationService.ts",
        "start": 102,
        "end": 114,
        "startLoc": {
          "line": 102,
          "column": 5,
          "position": 841
        },
        "endLoc": {
          "line": 114,
          "column": 31,
          "position": 966
        }
      }
    },
    {
      "format": "typescript",
      "lines": 11,
      "fragment": "): void {\n    // Update error metrics\n    if (!this.metadata.metrics) {\n      this.metadata.metrics = {};\n    }\n    const { metrics } = this.metadata;\n    metrics.total_errors = (metrics.total_errors ?? 0) + 1;\n    metrics.last_error_timestamp = Date.now();\n    this.metadata.metrics = metrics;\n\n    // Use custom error handler if available",
      "tokens": 0,
      "firstFile": {
        "name": "src/services/EventPropagationService.ts",
        "start": 202,
        "end": 212,
        "startLoc": {
          "line": 202,
          "column": 2,
          "position": 1793
        },
        "endLoc": {
          "line": 212,
          "column": 41,
          "position": 1900
        }
      },
      "secondFile": {
        "name": "src/services/RecoveryService.ts",
        "start": 152,
        "end": 162,
        "startLoc": {
          "line": 152,
          "column": 6,
          "position": 1169
        },
        "endLoc": {
          "line": 162,
          "column": 62,
          "position": 1276
        }
      }
    },
    {
      "format": "typescript",
      "lines": 7,
      "fragment": "(message: string, metadata?: Record<string, unknown>): void {\n    // Update metrics\n    if (!this.metadata.metrics) {\n      this.metadata.metrics = {};\n    }\n    const { metrics } = this.metadata;\n    metrics[ 'info_logged'",
      "tokens": 0,
      "firstFile": {
        "name": "src/services/ErrorLoggingService.ts",
        "start": 149,
        "end": 155,
        "startLoc": {
          "line": 149,
          "column": 8,
          "position": 1095
        },
        "endLoc": {
          "line": 155,
          "column": 14,
          "position": 1173
        }
      },
      "secondFile": {
        "name": "src/services/ErrorLoggingService.ts",
        "start": 130,
        "end": 136,
        "startLoc": {
          "line": 130,
          "column": 8,
          "position": 945
        },
        "endLoc": {
          "line": 136,
          "column": 18,
          "position": 1023
        }
      }
    },
    {
      "format": "typescript",
      "lines": 10,
      "fragment": "// Update metrics\n    if (!this.metadata.metrics) {\n      this.metadata.metrics = {};\n    }\n    const { metrics } = this.metadata;\n    metrics.total_components = this.components.size;\n    metrics.total_types = this.typeIndex.size;\n    metrics.total_event_types = this.eventIndex.size;\n    this.metadata.metrics = metrics;\n  }",
      "tokens": 0,
      "firstFile": {
        "name": "src/services/ComponentRegistryService.ts",
        "start": 125,
        "end": 134,
        "startLoc": {
          "line": 125,
          "column": 5,
          "position": 1022
        },
        "endLoc": {
          "line": 134,
          "column": 2,
          "position": 1125
        }
      },
      "secondFile": {
        "name": "src/services/ComponentRegistryService.ts",
        "start": 89,
        "end": 99,
        "startLoc": {
          "line": 89,
          "column": 5,
          "position": 700
        },
        "endLoc": {
          "line": 99,
          "column": 7,
          "position": 804
        }
      }
    },
    {
      "format": "typescript",
      "lines": 13,
      "fragment": "}\n\n  public override handleError(error: Error, context?: Record<string, unknown>): void {\n    // Update error metrics\n    if (!this.metadata.metrics) {\n      this.metadata.metrics = {};\n    }\n    const { metrics } = this.metadata;\n    metrics.total_errors = (metrics.total_errors ?? 0) + 1;\n    metrics.last_error_timestamp = Date.now();\n    this.metadata.metrics = metrics;\n\n    // Forward to error logging service",
      "tokens": 0,
      "firstFile": {
        "name": "src/services/ComponentRegistryService.ts",
        "start": 200,
        "end": 212,
        "startLoc": {
          "line": 200,
          "column": 3,
          "position": 1744
        },
        "endLoc": {
          "line": 212,
          "column": 36,
          "position": 1878
        }
      },
      "secondFile": {
        "name": "src/services/EventPropagationService.ts",
        "start": 200,
        "end": 162,
        "startLoc": {
          "line": 200,
          "column": 3,
          "position": 1766
        },
        "endLoc": {
          "line": 162,
          "column": 62,
          "position": 1276
        }
      }
    },
    {
      "format": "typescript",
      "lines": 10,
      "fragment": ");\n\n    // Update metrics\n    if (!this.metadata.metrics) {\n      this.metadata.metrics = {};\n    }\n    const {metrics} = this.metadata;\n    metrics.active_streams = this.activeStreams.size;\n    this.metadata.metrics = metrics;\n  }",
      "tokens": 0,
      "firstFile": {
        "name": "src/services/APIService.ts",
        "start": 146,
        "end": 155,
        "startLoc": {
          "line": 146,
          "column": 9,
          "position": 1270
        },
        "endLoc": {
          "line": 155,
          "column": 2,
          "position": 1348
        }
      },
      "secondFile": {
        "name": "src/services/APIService.ts",
        "start": 126,
        "end": 136,
        "startLoc": {
          "line": 126,
          "column": 7,
          "position": 1110
        },
        "endLoc": {
          "line": 136,
          "column": 7,
          "position": 1189
        }
      }
    },
    {
      "format": "typescript",
      "lines": 11,
      "fragment": "${queryParams}`);\n      if (!response || !response.ok) {\n        throw new Error(`HTTP error! status: ${response?.status}`);\n      }\n\n      const result = await response.json();\n\n      // Update metrics\n      this.updateMetrics('success', startTime);\n\n      return result",
      "tokens": 0,
      "firstFile": {
        "name": "src/services/APIService.ts",
        "start": 239,
        "end": 249,
        "startLoc": {
          "line": 239,
          "column": 12,
          "position": 2050
        },
        "endLoc": {
          "line": 249,
          "column": 7,
          "position": 2132
        }
      },
      "secondFile": {
        "name": "src/services/APIService.ts",
        "start": 84,
        "end": 94,
        "startLoc": {
          "line": 84,
          "column": 2,
          "position": 726
        },
        "endLoc": {
          "line": 94,
          "column": 2,
          "position": 808
        }
      }
    },
    {
      "format": "typescript",
      "lines": 11,
      "fragment": "// Initialize category maps\n      Object.values(ResourceCategory).forEach(category => {\n        this.resourcesByCategory.set(category, new Set());\n      });\n\n      // Initialize quality maps\n      Object.values(ResourceQuality).forEach(quality => {\n        this.resourcesByQuality.set(quality, new Map());\n      });\n\n      // Register resources",
      "tokens": 0,
      "firstFile": {
        "name": "src/registry/ResourceRegistry.ts",
        "start": 755,
        "end": 765,
        "startLoc": {
          "line": 755,
          "column": 7,
          "position": 4688
        },
        "endLoc": {
          "line": 765,
          "column": 22,
          "position": 4774
        }
      },
      "secondFile": {
        "name": "src/registry/ResourceRegistry.ts",
        "start": 181,
        "end": 191,
        "startLoc": {
          "line": 181,
          "column": 5,
          "position": 975
        },
        "endLoc": {
          "line": 191,
          "column": 62,
          "position": 1061
        }
      }
    },
    {
      "format": "typescript",
      "lines": 17,
      "fragment": "this.resourceMetadata?.clear();\n      this.resourcesByCategory.clear();\n      this.resourcesByTag.clear();\n      this.resourcesByQuality.clear();\n      this.conversionRates.clear();\n\n      // Initialize category maps\n      Object.values(ResourceCategory).forEach(category => {\n        this.resourcesByCategory.set(category, new Set());\n      });\n\n      // Initialize quality maps\n      Object.values(ResourceQuality).forEach(quality => {\n        this.resourcesByQuality.set(quality, new Map());\n      });\n\n      // Import resources",
      "tokens": 0,
      "firstFile": {
        "name": "src/registry/ResourceRegistry.ts",
        "start": 825,
        "end": 841,
        "startLoc": {
          "line": 825,
          "column": 7,
          "position": 5209
        },
        "endLoc": {
          "line": 841,
          "column": 20,
          "position": 5347
        }
      },
      "secondFile": {
        "name": "src/registry/ResourceRegistry.ts",
        "start": 749,
        "end": 191,
        "startLoc": {
          "line": 749,
          "column": 7,
          "position": 4636
        },
        "endLoc": {
          "line": 191,
          "column": 62,
          "position": 1061
        }
      }
    },
    {
      "format": "typescript",
      "lines": 10,
      "fragment": "import { CombatManager } from '../managers/ManagerRegistry';\nimport { ResourceManager } from '../managers/game/ResourceManager';\nimport { MiningShipManagerImpl } from '../managers/mining/MiningShipManagerImpl';\nimport { ResourceCostManager } from '../managers/resource/ResourceCostManager';\nimport { ResourceExchangeManager } from '../managers/resource/ResourceExchangeManager';\nimport { ResourceFlowManager } from '../managers/resource/ResourceFlowManager';\nimport { ResourcePoolManager } from '../managers/resource/ResourcePoolManager';\nimport { ResourceStorageManager } from '../managers/resource/ResourceStorageManager';\nimport { ResourceThresholdManager } from '../managers/resource/ResourceThresholdManager';\nimport",
      "tokens": 0,
      "firstFile": {
        "name": "src/initialization/serviceRegistration.ts",
        "start": 11,
        "end": 20,
        "startLoc": {
          "line": 11,
          "column": 1,
          "position": 3
        },
        "endLoc": {
          "line": 20,
          "column": 7,
          "position": 120
        }
      },
      "secondFile": {
        "name": "src/types/global.d.ts",
        "start": 8,
        "end": 21,
        "startLoc": {
          "line": 8,
          "column": 1,
          "position": 3
        },
        "endLoc": {
          "line": 21,
          "column": 4,
          "position": 121
        }
      }
    },
    {
      "format": "typescript",
      "lines": 10,
      "fragment": "as ModuleEventType, event => {\n    const module = moduleManager.getModule(event?.moduleId);\n    if (!module) {\n      return;\n    }\n\n    // Get module config\n    const configs = getModuleConfigs();\n    const config = configs[module.type];\n    if (!config || !config.resourceProduction",
      "tokens": 0,
      "firstFile": {
        "name": "src/initialization/moduleFrameworkInit.ts",
        "start": 91,
        "end": 100,
        "startLoc": {
          "line": 91,
          "column": 2,
          "position": 646
        },
        "endLoc": {
          "line": 100,
          "column": 19,
          "position": 735
        }
      },
      "secondFile": {
        "name": "src/initialization/moduleFrameworkInit.ts",
        "start": 61,
        "end": 70,
        "startLoc": {
          "line": 61,
          "column": 2,
          "position": 393
        },
        "endLoc": {
          "line": 70,
          "column": 20,
          "position": 482
        }
      }
    },
    {
      "format": "typescript",
      "lines": 29,
      "fragment": "as ModuleEventType, event => {\n    if (!event.data || !isResourceThresholdEventData(event.data)) {\n      console.warn('Invalid resource threshold event data:', event.data);\n      return;\n    }\n\n    const { thresholdType, resourceType } = event.data;\n\n    if (thresholdType !== 'min') {\n      return;\n    }\n\n    // Get modules that consume this resource\n    const modules = Array.from(moduleManager.getActiveModules());\n    const affectedModules = modules.filter(module => {\n      const configs = getModuleConfigs();\n      const config = configs[module.type];\n      return (\n        config &&\n        config.resourceConsumption &&\n        config.resourceConsumption[resourceType as keyof typeof config.resourceConsumption]\n      );\n    });\n\n    // Update status for affected modules\n    for (const module of affectedModules) {\n      moduleStatusManager.updateModuleStatus(\n        module.id,\n        'active'",
      "tokens": 0,
      "firstFile": {
        "name": "src/initialization/moduleFrameworkInit.ts",
        "start": 168,
        "end": 196,
        "startLoc": {
          "line": 168,
          "column": 2,
          "position": 1278
        },
        "endLoc": {
          "line": 196,
          "column": 9,
          "position": 1516
        }
      },
      "secondFile": {
        "name": "src/initialization/moduleFrameworkInit.ts",
        "start": 137,
        "end": 163,
        "startLoc": {
          "line": 137,
          "column": 2,
          "position": 1013
        },
        "endLoc": {
          "line": 163,
          "column": 11,
          "position": 1248
        }
      }
    },
    {
      "format": "typescript",
      "lines": 16,
      "fragment": "} catch (error) {\n            if (isMounted.current) {\n              setState({\n                data: null,\n                isLoading: false,\n                isError: true,\n                error: error instanceof ApiError ? error : null,\n                isValidationError:\n                  error instanceof ApiError &&\n                  (error.type === 'RESPONSE_VALIDATION_ERROR' ||\n                    error.type === 'REQUEST_VALIDATION_ERROR'),\n                isSuccess: false,\n              });\n            }\n\n            throw",
      "tokens": 0,
      "firstFile": {
        "name": "src/hooks/useTypedApi.ts",
        "start": 306,
        "end": 321,
        "startLoc": {
          "line": 306,
          "column": 11,
          "position": 2351
        },
        "endLoc": {
          "line": 321,
          "column": 6,
          "position": 2470
        }
      },
      "secondFile": {
        "name": "src/hooks/useTypedApi.ts",
        "start": 220,
        "end": 234,
        "startLoc": {
          "line": 220,
          "column": 9,
          "position": 1709
        },
        "endLoc": {
          "line": 234,
          "column": 2,
          "position": 1827
        }
      }
    },
    {
      "format": "typescript",
      "lines": 18,
      "fragment": "<\n  RequestType,\n  ResponseType,\n  RequestSchema extends z.ZodType<RequestType>,\n  ResponseSchema extends z.ZodType<ResponseType>,\n>(\n  apiClient: TypeSafeApiClient,\n  path: string,\n  requestSchema: RequestSchema,\n  responseSchema: ResponseSchema,\n  options: UseApiOptions & {\n    headers?: Record<string, string>;\n    withCredentials?: boolean;\n  } = {}\n) {\n  const { useMutation } = useTypedApi(apiClient);\n  return useMutation<RequestType, ResponseType, RequestSchema, ResponseSchema>(\n    'PUT'",
      "tokens": 0,
      "firstFile": {
        "name": "src/hooks/useTypedApi.ts",
        "start": 373,
        "end": 390,
        "startLoc": {
          "line": 373,
          "column": 7,
          "position": 2746
        },
        "endLoc": {
          "line": 390,
          "column": 6,
          "position": 2893
        }
      },
      "secondFile": {
        "name": "src/hooks/useTypedApi.ts",
        "start": 345,
        "end": 362,
        "startLoc": {
          "line": 345,
          "column": 8,
          "position": 2567
        },
        "endLoc": {
          "line": 362,
          "column": 7,
          "position": 2714
        }
      }
    },
    {
      "format": "typescript",
      "lines": 18,
      "fragment": "<\n  RequestType,\n  ResponseType,\n  RequestSchema extends z.ZodType<RequestType>,\n  ResponseSchema extends z.ZodType<ResponseType>,\n>(\n  apiClient: TypeSafeApiClient,\n  path: string,\n  requestSchema: RequestSchema,\n  responseSchema: ResponseSchema,\n  options: UseApiOptions & {\n    headers?: Record<string, string>;\n    withCredentials?: boolean;\n  } = {}\n) {\n  const { useMutation } = useTypedApi(apiClient);\n  return useMutation<RequestType, ResponseType, RequestSchema, ResponseSchema>(\n    'PATCH'",
      "tokens": 0,
      "firstFile": {
        "name": "src/hooks/useTypedApi.ts",
        "start": 401,
        "end": 418,
        "startLoc": {
          "line": 401,
          "column": 9,
          "position": 2925
        },
        "endLoc": {
          "line": 418,
          "column": 8,
          "position": 3072
        }
      },
      "secondFile": {
        "name": "src/hooks/useTypedApi.ts",
        "start": 345,
        "end": 362,
        "startLoc": {
          "line": 345,
          "column": 8,
          "position": 2567
        },
        "endLoc": {
          "line": 362,
          "column": 7,
          "position": 2714
        }
      }
    },
    {
      "format": "tsx",
      "lines": 19,
      "fragment": ": {\n      const weaponIndex = state.weapons.findIndex(w => w.id === action.weaponId);\n      if (weaponIndex === -1) {\n        return state;\n      }\n\n      const weapon = state.weapons[weaponIndex];\n      if (!weapon.currentWeapon) {\n        return state;\n      }\n\n      const weapons = [...state.weapons];\n      weapons[weaponIndex] = {\n        ...weapon,\n        currentWeapon: {\n          ...weapon.currentWeapon,\n          state: {\n            ...weapon.currentWeapon.state,\n            ...",
      "tokens": 0,
      "firstFile": {
        "name": "src/contexts/ShipContext.tsx",
        "start": 185,
        "end": 203,
        "startLoc": {
          "line": 185,
          "column": 22,
          "position": 1342
        },
        "endLoc": {
          "line": 203,
          "column": 4,
          "position": 1495
        }
      },
      "secondFile": {
        "name": "src/contexts/ShipContext.tsx",
        "start": 136,
        "end": 154,
        "startLoc": {
          "line": 136,
          "column": 14,
          "position": 1002
        },
        "endLoc": {
          "line": 154,
          "column": 7,
          "position": 1155
        }
      }
    },
    {
      "format": "typescript",
      "lines": 9,
      "fragment": ",\n    responseSchema: ResponseSchema,\n    options: {\n      queryParams?: Record<string, string | number | boolean | undefined>;\n      headers?: Record<string, string>;\n      withCredentials?: boolean;\n    } = {}\n  ): Promise<ResponseType> {\n    const endpoint: ApiEndpoint<RequestType",
      "tokens": 0,
      "firstFile": {
        "name": "src/api/TypeSafeApiClient.ts",
        "start": 340,
        "end": 348,
        "startLoc": {
          "line": 340,
          "column": 14,
          "position": 2349
        },
        "endLoc": {
          "line": 348,
          "column": 12,
          "position": 2439
        }
      },
      "secondFile": {
        "name": "src/api/TypeSafeApiClient.ts",
        "start": 309,
        "end": 317,
        "startLoc": {
          "line": 309,
          "column": 7,
          "position": 2106
        },
        "endLoc": {
          "line": 317,
          "column": 5,
          "position": 2196
        }
      }
    },
    {
      "format": "typescript",
      "lines": 19,
      "fragment": "<\n    RequestType,\n    ResponseType,\n    RequestSchema extends z.ZodType<RequestType>,\n    ResponseSchema extends z.ZodType<ResponseType>,\n  >(\n    path: string,\n    requestData: RequestType,\n    requestSchema: RequestSchema,\n    responseSchema: ResponseSchema,\n    options: {\n      queryParams?: Record<string, string | number | boolean | undefined>;\n      headers?: Record<string, string>;\n      withCredentials?: boolean;\n    } = {}\n  ): Promise<ResponseType> {\n    const endpoint: ApiEndpoint<RequestType, ResponseType, RequestSchema, ResponseSchema> = {\n      path,\n      method: 'PUT'",
      "tokens": 0,
      "firstFile": {
        "name": "src/api/TypeSafeApiClient.ts",
        "start": 363,
        "end": 381,
        "startLoc": {
          "line": 363,
          "column": 4,
          "position": 2524
        },
        "endLoc": {
          "line": 381,
          "column": 6,
          "position": 2697
        }
      },
      "secondFile": {
        "name": "src/api/TypeSafeApiClient.ts",
        "start": 332,
        "end": 350,
        "startLoc": {
          "line": 332,
          "column": 5,
          "position": 2290
        },
        "endLoc": {
          "line": 350,
          "column": 7,
          "position": 2463
        }
      }
    },
    {
      "format": "typescript",
      "lines": 19,
      "fragment": "<\n    RequestType,\n    ResponseType,\n    RequestSchema extends z.ZodType<RequestType>,\n    ResponseSchema extends z.ZodType<ResponseType>,\n  >(\n    path: string,\n    requestData: RequestType,\n    requestSchema: RequestSchema,\n    responseSchema: ResponseSchema,\n    options: {\n      queryParams?: Record<string, string | number | boolean | undefined>;\n      headers?: Record<string, string>;\n      withCredentials?: boolean;\n    } = {}\n  ): Promise<ResponseType> {\n    const endpoint: ApiEndpoint<RequestType, ResponseType, RequestSchema, ResponseSchema> = {\n      path,\n      method: 'PATCH'",
      "tokens": 0,
      "firstFile": {
        "name": "src/api/TypeSafeApiClient.ts",
        "start": 394,
        "end": 412,
        "startLoc": {
          "line": 394,
          "column": 6,
          "position": 2758
        },
        "endLoc": {
          "line": 412,
          "column": 8,
          "position": 2931
        }
      },
      "secondFile": {
        "name": "src/api/TypeSafeApiClient.ts",
        "start": 332,
        "end": 350,
        "startLoc": {
          "line": 332,
          "column": 5,
          "position": 2290
        },
        "endLoc": {
          "line": 350,
          "column": 7,
          "position": 2463
        }
      }
    },
    {
      "format": "typescript",
      "lines": 12,
      "fragment": "<ResponseType, ResponseSchema extends z.ZodType<ResponseType>>(\n    path: string,\n    responseSchema: ResponseSchema,\n    options: {\n      queryParams?: Record<string, string | number | boolean | undefined>;\n      headers?: Record<string, string>;\n      withCredentials?: boolean;\n    } = {}\n  ): Promise<ResponseType> {\n    const endpoint: ApiEndpoint<void, ResponseType, z.ZodType<void>, ResponseSchema> = {\n      path,\n      method: 'DELETE'",
      "tokens": 0,
      "firstFile": {
        "name": "src/api/TypeSafeApiClient.ts",
        "start": 425,
        "end": 436,
        "startLoc": {
          "line": 425,
          "column": 7,
          "position": 2992
        },
        "endLoc": {
          "line": 436,
          "column": 9,
          "position": 3132
        }
      },
      "secondFile": {
        "name": "src/api/TypeSafeApiClient.ts",
        "start": 308,
        "end": 319,
        "startLoc": {
          "line": 308,
          "column": 4,
          "position": 2085
        },
        "endLoc": {
          "line": 319,
          "column": 6,
          "position": 2225
        }
      }
    }
  ],
  "filename": "/Users/deadcoast/.npm/_npx/652ead47bf63fe99/node_modules/@jscpd/html-reporter/dist/templates/main.pug"
}